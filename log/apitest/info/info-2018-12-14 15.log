[2018-12-14 15:09:51] - [main] - org.springframework.boot.StartupInfoLogger.logStarting(StartupInfoLogger.java:50) - Starting ApitestApplication on huangshayangdeMacBook-Pro.local with PID 1707 (/Users/huangshayang/IdeaProjects/SpringBootApiTest/target/classes started by huangshayang in /Users/huangshayang/IdeaProjects/SpringBootApiTest)
[2018-12-14 15:09:51] - [main] - org.springframework.boot.SpringApplication.logStartupProfileInfo(SpringApplication.java:675) - No active profile set, falling back to default profiles: default
[2018-12-14 15:09:52] - [main] - org.springframework.data.repository.config.RepositoryConfigurationDelegate.multipleStoresDetected(RepositoryConfigurationDelegate.java:244) - Multiple Spring Data modules found, entering strict repository configuration mode!
[2018-12-14 15:09:52] - [main] - org.springframework.data.repository.config.RepositoryConfigurationDelegate.registerRepositoriesIn(RepositoryConfigurationDelegate.java:126) - Bootstrapping Spring Data repositories in DEFAULT mode.
[2018-12-14 15:09:52] - [main] - org.springframework.data.repository.config.RepositoryConfigurationDelegate.registerRepositoriesIn(RepositoryConfigurationDelegate.java:182) - Finished Spring Data repository scanning in 55ms. Found 5 repository interfaces.
[2018-12-14 15:09:52] - [main] - org.springframework.data.repository.config.RepositoryConfigurationDelegate.multipleStoresDetected(RepositoryConfigurationDelegate.java:244) - Multiple Spring Data modules found, entering strict repository configuration mode!
[2018-12-14 15:09:52] - [main] - org.springframework.data.repository.config.RepositoryConfigurationDelegate.registerRepositoriesIn(RepositoryConfigurationDelegate.java:126) - Bootstrapping Spring Data repositories in DEFAULT mode.
[2018-12-14 15:09:52] - [main] - org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport.isStrictRepositoryCandidate(RepositoryConfigurationExtensionSupport.java:363) - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.apitest.repository.ApiRepository.
[2018-12-14 15:09:52] - [main] - org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport.isStrictRepositoryCandidate(RepositoryConfigurationExtensionSupport.java:363) - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.apitest.repository.CaseRepository.
[2018-12-14 15:09:52] - [main] - org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport.isStrictRepositoryCandidate(RepositoryConfigurationExtensionSupport.java:363) - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.apitest.repository.LogRepository.
[2018-12-14 15:09:52] - [main] - org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport.isStrictRepositoryCandidate(RepositoryConfigurationExtensionSupport.java:363) - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.apitest.repository.MailRepository.
[2018-12-14 15:09:52] - [main] - org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport.isStrictRepositoryCandidate(RepositoryConfigurationExtensionSupport.java:363) - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.apitest.repository.UserRepository.
[2018-12-14 15:09:52] - [main] - org.springframework.data.repository.config.RepositoryConfigurationDelegate.registerRepositoriesIn(RepositoryConfigurationDelegate.java:182) - Finished Spring Data repository scanning in 12ms. Found 0 repository interfaces.
[2018-12-14 15:09:52] - [main] - org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization(PostProcessorRegistrationDelegate.java:330) - Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$ff1735ca] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2018-12-14 15:09:52] - [main] - org.springframework.boot.web.embedded.tomcat.TomcatWebServer.initialize(TomcatWebServer.java:90) - Tomcat initialized with port(s): 8080 (http)
[2018-12-14 15:09:52] - [main] - org.apache.juli.logging.DirectJDKLog.log(DirectJDKLog.java:173) - Initializing ProtocolHandler ["http-nio-0.0.0.0-8080"]
[2018-12-14 15:09:52] - [main] - org.apache.juli.logging.DirectJDKLog.log(DirectJDKLog.java:173) - Starting service [Tomcat]
[2018-12-14 15:09:52] - [main] - org.apache.juli.logging.DirectJDKLog.log(DirectJDKLog.java:173) - Starting Servlet Engine: Apache Tomcat/9.0.12
[2018-12-14 15:09:52] - [main] - org.apache.juli.logging.DirectJDKLog.log(DirectJDKLog.java:173) - The APR based Apache Tomcat Native library which allows optimal performance in production environments was not found on the java.library.path: [/Users/huangshayang/Library/Java/Extensions:/Library/Java/Extensions:/Network/Library/Java/Extensions:/System/Library/Java/Extensions:/usr/lib/java:.]
[2018-12-14 15:09:52] - [main] - org.apache.juli.logging.DirectJDKLog.log(DirectJDKLog.java:173) - Initializing Spring embedded WebApplicationContext
[2018-12-14 15:09:52] - [main] - org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.prepareWebApplicationContext(ServletWebServerApplicationContext.java:285) - Root WebApplicationContext: initialization completed in 1400 ms
[2018-12-14 15:09:53] - [main] - org.springframework.boot.web.servlet.AbstractFilterRegistrationBean.configure(AbstractFilterRegistrationBean.java:248) - Mapping filter: 'characterEncodingFilter' to: [/*]
[2018-12-14 15:09:53] - [main] - org.springframework.boot.web.servlet.AbstractFilterRegistrationBean.configure(AbstractFilterRegistrationBean.java:248) - Mapping filter: 'sessionRepositoryFilter' to: [/*]
[2018-12-14 15:09:53] - [main] - org.springframework.boot.web.servlet.AbstractFilterRegistrationBean.configure(AbstractFilterRegistrationBean.java:248) - Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
[2018-12-14 15:09:53] - [main] - org.springframework.boot.web.servlet.AbstractFilterRegistrationBean.configure(AbstractFilterRegistrationBean.java:248) - Mapping filter: 'formContentFilter' to: [/*]
[2018-12-14 15:09:53] - [main] - org.springframework.boot.web.servlet.AbstractFilterRegistrationBean.configure(AbstractFilterRegistrationBean.java:248) - Mapping filter: 'requestContextFilter' to: [/*]
[2018-12-14 15:09:53] - [main] - org.springframework.boot.web.servlet.ServletRegistrationBean.addRegistration(ServletRegistrationBean.java:186) - Servlet dispatcherServlet mapped to [/]
[2018-12-14 15:09:53] - [main] - com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:110) - HikariPool-1 - Starting...
[2018-12-14 15:09:53] - [main] - com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:123) - HikariPool-1 - Start completed.
[2018-12-14 15:09:53] - [main] - org.hibernate.Version.logVersion(Version.java:46) - HHH000412: Hibernate Core {5.3.7.Final}
[2018-12-14 15:09:53] - [main] - org.hibernate.cfg.Environment.<clinit>(Environment.java:213) - HHH000206: hibernate.properties not found
[2018-12-14 15:09:53] - [main] - org.hibernate.annotations.common.reflection.java.JavaReflectionManager.<clinit>(JavaReflectionManager.java:49) - HCANN000001: Hibernate Commons Annotations {5.0.4.Final}
[2018-12-14 15:09:53] - [main] - org.hibernate.dialect.Dialect.<init>(Dialect.java:157) - HHH000400: Using dialect: org.hibernate.dialect.MySQL5Dialect
[2018-12-14 15:09:54] - [main] - org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.buildNativeEntityManagerFactory(AbstractEntityManagerFactoryBean.java:415) - Initialized JPA EntityManagerFactory for persistence unit 'default'
[2018-12-14 15:09:54] - [main] - io.netty.util.internal.logging.Slf4JLogger.info(Slf4JLogger.java:101) - Starting without optional epoll library
[2018-12-14 15:09:54] - [main] - io.netty.util.internal.logging.Slf4JLogger.info(Slf4JLogger.java:101) - Starting without optional kqueue library
[2018-12-14 15:09:54] - [main] - org.springframework.scheduling.concurrent.ExecutorConfigurationSupport.initialize(ExecutorConfigurationSupport.java:171) - Initializing ExecutorService 'applicationTaskExecutor'
[2018-12-14 15:09:55] - [main] - org.springframework.scheduling.annotation.ScheduledAnnotationBeanPostProcessor.finishRegistration(ScheduledAnnotationBeanPostProcessor.java:295) - No TaskScheduler/ScheduledExecutorService bean found for scheduled processing
[2018-12-14 15:09:55] - [main] - org.apache.juli.logging.DirectJDKLog.log(DirectJDKLog.java:173) - Starting ProtocolHandler ["http-nio-0.0.0.0-8080"]
[2018-12-14 15:09:55] - [main] - org.apache.juli.logging.DirectJDKLog.log(DirectJDKLog.java:173) - Using a shared selector for servlet write/read
[2018-12-14 15:09:55] - [main] - org.springframework.boot.web.embedded.tomcat.TomcatWebServer.start(TomcatWebServer.java:204) - Tomcat started on port(s): 8080 (http) with context path ''
[2018-12-14 15:09:55] - [main] - org.springframework.boot.StartupInfoLogger.logStarted(StartupInfoLogger.java:59) - Started ApitestApplication in 4.554 seconds (JVM running for 5.987)
[2018-12-14 15:15:01] - [http-nio-0.0.0.0-8080-exec-1] - org.apache.juli.logging.DirectJDKLog.log(DirectJDKLog.java:173) - Initializing Spring DispatcherServlet 'dispatcherServlet'
[2018-12-14 15:15:01] - [http-nio-0.0.0.0-8080-exec-1] - org.springframework.web.servlet.FrameworkServlet.initServletBean(FrameworkServlet.java:521) - Initializing Servlet 'dispatcherServlet'
[2018-12-14 15:15:01] - [http-nio-0.0.0.0-8080-exec-1] - org.springframework.web.servlet.FrameworkServlet.initServletBean(FrameworkServlet.java:543) - Completed initialization in 10 ms
[2018-12-14 15:15:01] - [http-nio-0.0.0.0-8080-exec-1] - com.apitest.service.LoginService.loginService(LoginService.java:38) - 用户名: admin
[2018-12-14 15:15:01] - [http-nio-0.0.0.0-8080-exec-1] - com.apitest.service.LoginService.loginService(LoginService.java:39) - 密码: 123456
[2018-12-14 15:15:01] - [http-nio-0.0.0.0-8080-exec-1] - org.hibernate.hql.internal.QueryTranslatorFactoryInitiator.initiateService(QueryTranslatorFactoryInitiator.java:47) - HHH000397: Using ASTQueryTranslatorFactory
[2018-12-14 15:15:02] - [http-nio-0.0.0.0-8080-exec-1] - com.apitest.service.LoginService.loginService(LoginService.java:61) - 返回结果: ServerResponse(status=1, message=登录成功, data=null)
[2018-12-14 15:15:02] - [http-nio-0.0.0.0-8080-exec-1] - com.apitest.service.LoginService.loginService(LoginService.java:62) - 线程名: http-nio-0.0.0.0-8080-exec-1,线程id: 48,线程状态: RUNNABLE
[2018-12-14 15:15:02] - [http-nio-0.0.0.0-8080-exec-2] - com.apitest.service.ApiService.queryPageApiService(ApiService.java:90) - 返回结果: ServerResponse(status=1, message=查询接口成功, data=Page 1 of 5 containing com.apitest.entity.Apis instances)
[2018-12-14 15:15:02] - [http-nio-0.0.0.0-8080-exec-2] - com.apitest.service.ApiService.queryPageApiService(ApiService.java:91) - 线程名: http-nio-0.0.0.0-8080-exec-2,线程id: 49,线程状态: RUNNABLE
[2018-12-14 15:15:09] - [http-nio-0.0.0.0-8080-exec-3] - com.apitest.service.CaseService.queryCaseByApiIdService(CaseService.java:58) - 返回结果: ServerResponse(status=1, message=查询用例成功, data=Page 1 of 2 containing com.apitest.entity.Cases instances)
[2018-12-14 15:15:09] - [http-nio-0.0.0.0-8080-exec-3] - com.apitest.service.CaseService.queryCaseByApiIdService(CaseService.java:59) - 线程名: http-nio-0.0.0.0-8080-exec-3,线程id: 50,线程状态: RUNNABLE
[2018-12-14 15:15:20] - [http-nio-0.0.0.0-8080-exec-4] - com.apitest.service.CaseService.queryCaseByApiIdService(CaseService.java:58) - 返回结果: ServerResponse(status=1, message=查询用例成功, data=Page 1 of 2 containing com.apitest.entity.Cases instances)
[2018-12-14 15:15:20] - [http-nio-0.0.0.0-8080-exec-4] - com.apitest.service.CaseService.queryCaseByApiIdService(CaseService.java:59) - 线程名: http-nio-0.0.0.0-8080-exec-4,线程id: 51,线程状态: RUNNABLE
[2018-12-14 15:15:22] - [http-nio-0.0.0.0-8080-exec-5] - com.apitest.service.CaseService.queryOneCaseService(CaseService.java:72) - 返回结果: ServerResponse(status=1, message=查询用例成功, data=Optional[Cases(id=1, jsonData={"username":"16602811927","password":"d7190eb194ff9494625514b6d178c87f99c5973e28c398969d2233f2960a573e"}, paramsData=, contentType=, expectResult=null, createTime=2018-10-11 00:00:00.0, updateTime=2018-10-16 00:00:00.0, apiId=1, note=正确的账号密码, available=true)])
[2018-12-14 15:15:22] - [http-nio-0.0.0.0-8080-exec-5] - com.apitest.service.CaseService.queryOneCaseService(CaseService.java:73) - 线程名: http-nio-0.0.0.0-8080-exec-5,线程id: 52,线程状态: RUNNABLE
[2018-12-14 15:15:24] - [http-nio-0.0.0.0-8080-exec-6] - com.apitest.service.CaseService.queryCaseByApiIdService(CaseService.java:58) - 返回结果: ServerResponse(status=1, message=查询用例成功, data=Page 1 of 2 containing com.apitest.entity.Cases instances)
[2018-12-14 15:15:24] - [http-nio-0.0.0.0-8080-exec-6] - com.apitest.service.CaseService.queryCaseByApiIdService(CaseService.java:59) - 线程名: http-nio-0.0.0.0-8080-exec-6,线程id: 53,线程状态: RUNNABLE
[2018-12-14 15:15:30] - [http-nio-0.0.0.0-8080-exec-7] - com.apitest.service.CaseService.queryOneCaseService(CaseService.java:72) - 返回结果: ServerResponse(status=1, message=查询用例成功, data=Optional[Cases(id=10, jsonData={"username":"jshdjasd","password":"123456"}, paramsData=, contentType=, expectResult=, createTime=2018-10-11 00:00:00.0, updateTime=2018-10-11 00:00:00.0, apiId=1, note=username为非手机号, available=false)])
[2018-12-14 15:15:30] - [http-nio-0.0.0.0-8080-exec-7] - com.apitest.service.CaseService.queryOneCaseService(CaseService.java:73) - 线程名: http-nio-0.0.0.0-8080-exec-7,线程id: 54,线程状态: RUNNABLE
[2018-12-14 15:15:33] - [http-nio-0.0.0.0-8080-exec-8] - com.apitest.service.CaseService.queryCaseByApiIdService(CaseService.java:58) - 返回结果: ServerResponse(status=1, message=查询用例成功, data=Page 1 of 2 containing com.apitest.entity.Cases instances)
[2018-12-14 15:15:33] - [http-nio-0.0.0.0-8080-exec-8] - com.apitest.service.CaseService.queryCaseByApiIdService(CaseService.java:59) - 线程名: http-nio-0.0.0.0-8080-exec-8,线程id: 55,线程状态: RUNNABLE
[2018-12-14 15:15:37] - [http-nio-0.0.0.0-8080-exec-9] - com.apitest.service.ApiService.queryPageApiService(ApiService.java:90) - 返回结果: ServerResponse(status=1, message=查询接口成功, data=Page 1 of 5 containing com.apitest.entity.Apis instances)
[2018-12-14 15:15:37] - [http-nio-0.0.0.0-8080-exec-9] - com.apitest.service.ApiService.queryPageApiService(ApiService.java:91) - 线程名: http-nio-0.0.0.0-8080-exec-9,线程id: 56,线程状态: RUNNABLE
[2018-12-14 15:15:39] - [http-nio-0.0.0.0-8080-exec-10] - com.apitest.service.LogService.queryPageLogByApiIdService(LogService.java:46) - 返回结果: ServerResponse(status=1, message=日志查询成功, data=Page 1 of 0 containing UNKNOWN instances)
[2018-12-14 15:15:39] - [http-nio-0.0.0.0-8080-exec-10] - com.apitest.service.LogService.queryPageLogByApiIdService(LogService.java:47) - 线程名: http-nio-0.0.0.0-8080-exec-10,线程id: 57,线程状态: RUNNABLE
[2018-12-14 15:15:43] - [http-nio-0.0.0.0-8080-exec-1] - com.apitest.service.ApiService.queryPageApiService(ApiService.java:90) - 返回结果: ServerResponse(status=1, message=查询接口成功, data=Page 1 of 5 containing com.apitest.entity.Apis instances)
[2018-12-14 15:15:43] - [http-nio-0.0.0.0-8080-exec-1] - com.apitest.service.ApiService.queryPageApiService(ApiService.java:91) - 线程名: http-nio-0.0.0.0-8080-exec-1,线程id: 48,线程状态: RUNNABLE
[2018-12-14 15:15:45] - [http-nio-0.0.0.0-8080-exec-2] - com.apitest.service.ApiService.queryOneApiService(ApiService.java:104) - 返回结果: ServerResponse(status=1, message=查询接口成功, data=Optional[Apis(id=1, url=/login, createTime=2018-10-18 00:00:00.0, method=post, updateTime=2018-12-12 14:50:20.0, cookie=false, note=登录)])
[2018-12-14 15:15:45] - [http-nio-0.0.0.0-8080-exec-2] - com.apitest.service.ApiService.queryOneApiService(ApiService.java:105) - 线程名: http-nio-0.0.0.0-8080-exec-2,线程id: 49,线程状态: RUNNABLE
[2018-12-14 15:15:47] - [http-nio-0.0.0.0-8080-exec-3] - com.apitest.service.ApiService.queryPageApiService(ApiService.java:90) - 返回结果: ServerResponse(status=1, message=查询接口成功, data=Page 1 of 5 containing com.apitest.entity.Apis instances)
[2018-12-14 15:15:47] - [http-nio-0.0.0.0-8080-exec-3] - com.apitest.service.ApiService.queryPageApiService(ApiService.java:91) - 线程名: http-nio-0.0.0.0-8080-exec-3,线程id: 50,线程状态: RUNNABLE
[2018-12-14 15:15:53] - [http-nio-0.0.0.0-8080-exec-4] - com.apitest.service.ApiService.queryPageApiService(ApiService.java:90) - 返回结果: ServerResponse(status=1, message=查询接口成功, data=Page 5 of 5 containing com.apitest.entity.Apis instances)
[2018-12-14 15:15:53] - [http-nio-0.0.0.0-8080-exec-4] - com.apitest.service.ApiService.queryPageApiService(ApiService.java:91) - 线程名: http-nio-0.0.0.0-8080-exec-4,线程id: 51,线程状态: RUNNABLE
[2018-12-14 15:15:56] - [http-nio-0.0.0.0-8080-exec-5] - com.apitest.service.LogService.queryPageLogByApiIdService(LogService.java:46) - 返回结果: ServerResponse(status=1, message=日志查询成功, data=Page 1 of 1 containing com.apitest.entity.Logs instances)
[2018-12-14 15:15:56] - [http-nio-0.0.0.0-8080-exec-5] - com.apitest.service.LogService.queryPageLogByApiIdService(LogService.java:47) - 线程名: http-nio-0.0.0.0-8080-exec-5,线程id: 52,线程状态: RUNNABLE
[2018-12-14 15:16:49] - [http-nio-0.0.0.0-8080-exec-6] - com.apitest.service.ApiService.queryPageApiService(ApiService.java:90) - 返回结果: ServerResponse(status=1, message=查询接口成功, data=Page 1 of 5 containing com.apitest.entity.Apis instances)
[2018-12-14 15:16:49] - [http-nio-0.0.0.0-8080-exec-6] - com.apitest.service.ApiService.queryPageApiService(ApiService.java:91) - 线程名: http-nio-0.0.0.0-8080-exec-6,线程id: 53,线程状态: RUNNABLE
[2018-12-14 15:29:44] - [http-nio-0.0.0.0-8080-exec-7] - com.apitest.service.LogService.queryPageLogByApiIdService(LogService.java:46) - 返回结果: ServerResponse(status=1, message=日志查询成功, data=Page 1 of 0 containing UNKNOWN instances)
[2018-12-14 15:29:44] - [http-nio-0.0.0.0-8080-exec-7] - com.apitest.service.LogService.queryPageLogByApiIdService(LogService.java:47) - 线程名: http-nio-0.0.0.0-8080-exec-7,线程id: 54,线程状态: RUNNABLE
[2018-12-14 15:29:46] - [http-nio-0.0.0.0-8080-exec-8] - com.apitest.service.ApiService.queryPageApiService(ApiService.java:90) - 返回结果: ServerResponse(status=1, message=查询接口成功, data=Page 1 of 5 containing com.apitest.entity.Apis instances)
[2018-12-14 15:29:46] - [http-nio-0.0.0.0-8080-exec-8] - com.apitest.service.ApiService.queryPageApiService(ApiService.java:91) - 线程名: http-nio-0.0.0.0-8080-exec-8,线程id: 55,线程状态: RUNNABLE
[2018-12-14 15:29:48] - [http-nio-0.0.0.0-8080-exec-9] - com.apitest.service.CaseService.queryCaseByApiIdService(CaseService.java:58) - 返回结果: ServerResponse(status=1, message=查询用例成功, data=Page 1 of 2 containing com.apitest.entity.Cases instances)
[2018-12-14 15:29:48] - [http-nio-0.0.0.0-8080-exec-9] - com.apitest.service.CaseService.queryCaseByApiIdService(CaseService.java:59) - 线程名: http-nio-0.0.0.0-8080-exec-9,线程id: 56,线程状态: RUNNABLE
[2018-12-14 15:31:22] - [http-nio-0.0.0.0-8080-exec-10] - com.apitest.service.CaseService.queryCaseByApiIdService(CaseService.java:58) - 返回结果: ServerResponse(status=1, message=查询用例成功, data=Page 1 of 2 containing com.apitest.entity.Cases instances)
[2018-12-14 15:31:22] - [http-nio-0.0.0.0-8080-exec-10] - com.apitest.service.CaseService.queryCaseByApiIdService(CaseService.java:59) - 线程名: http-nio-0.0.0.0-8080-exec-10,线程id: 57,线程状态: RUNNABLE
[2018-12-14 15:31:36] - [http-nio-0.0.0.0-8080-exec-1] - com.apitest.service.CaseService.queryCaseByApiIdService(CaseService.java:58) - 返回结果: ServerResponse(status=1, message=查询用例成功, data=Page 1 of 2 containing com.apitest.entity.Cases instances)
[2018-12-14 15:31:36] - [http-nio-0.0.0.0-8080-exec-1] - com.apitest.service.CaseService.queryCaseByApiIdService(CaseService.java:59) - 线程名: http-nio-0.0.0.0-8080-exec-1,线程id: 48,线程状态: RUNNABLE
[2018-12-14 15:31:44] - [http-nio-0.0.0.0-8080-exec-2] - com.apitest.service.LoginService.loginService(LoginService.java:38) - 用户名: admin
[2018-12-14 15:31:44] - [http-nio-0.0.0.0-8080-exec-2] - com.apitest.service.LoginService.loginService(LoginService.java:39) - 密码: 123456
[2018-12-14 15:31:44] - [http-nio-0.0.0.0-8080-exec-2] - com.apitest.service.LoginService.loginService(LoginService.java:61) - 返回结果: ServerResponse(status=1, message=登录成功, data=null)
[2018-12-14 15:31:44] - [http-nio-0.0.0.0-8080-exec-2] - com.apitest.service.LoginService.loginService(LoginService.java:62) - 线程名: http-nio-0.0.0.0-8080-exec-2,线程id: 49,线程状态: RUNNABLE
[2018-12-14 15:31:45] - [http-nio-0.0.0.0-8080-exec-3] - com.apitest.service.ApiService.queryPageApiService(ApiService.java:90) - 返回结果: ServerResponse(status=1, message=查询接口成功, data=Page 1 of 5 containing com.apitest.entity.Apis instances)
[2018-12-14 15:31:45] - [http-nio-0.0.0.0-8080-exec-3] - com.apitest.service.ApiService.queryPageApiService(ApiService.java:91) - 线程名: http-nio-0.0.0.0-8080-exec-3,线程id: 50,线程状态: RUNNABLE
[2018-12-14 15:31:46] - [http-nio-0.0.0.0-8080-exec-4] - com.apitest.service.CaseService.queryCaseByApiIdService(CaseService.java:58) - 返回结果: ServerResponse(status=1, message=查询用例成功, data=Page 1 of 2 containing com.apitest.entity.Cases instances)
[2018-12-14 15:31:46] - [http-nio-0.0.0.0-8080-exec-4] - com.apitest.service.CaseService.queryCaseByApiIdService(CaseService.java:59) - 线程名: http-nio-0.0.0.0-8080-exec-4,线程id: 51,线程状态: RUNNABLE
[2018-12-14 15:33:56] - [http-nio-0.0.0.0-8080-exec-5] - com.apitest.service.CaseService.queryCaseByApiIdService(CaseService.java:58) - 返回结果: ServerResponse(status=1, message=查询用例成功, data=Page 1 of 2 containing com.apitest.entity.Cases instances)
[2018-12-14 15:33:56] - [http-nio-0.0.0.0-8080-exec-5] - com.apitest.service.CaseService.queryCaseByApiIdService(CaseService.java:59) - 线程名: http-nio-0.0.0.0-8080-exec-5,线程id: 52,线程状态: RUNNABLE
[2018-12-14 15:33:58] - [http-nio-0.0.0.0-8080-exec-6] - com.apitest.service.CaseService.queryCaseByApiIdService(CaseService.java:58) - 返回结果: ServerResponse(status=1, message=查询用例成功, data=Page 1 of 2 containing com.apitest.entity.Cases instances)
[2018-12-14 15:33:58] - [http-nio-0.0.0.0-8080-exec-6] - com.apitest.service.CaseService.queryCaseByApiIdService(CaseService.java:59) - 线程名: http-nio-0.0.0.0-8080-exec-6,线程id: 53,线程状态: RUNNABLE
[2018-12-14 15:36:21] - [http-nio-0.0.0.0-8080-exec-7] - com.apitest.service.CaseService.queryCaseByApiIdService(CaseService.java:58) - 返回结果: ServerResponse(status=1, message=查询用例成功, data=Page 1 of 2 containing com.apitest.entity.Cases instances)
[2018-12-14 15:36:21] - [http-nio-0.0.0.0-8080-exec-7] - com.apitest.service.CaseService.queryCaseByApiIdService(CaseService.java:59) - 线程名: http-nio-0.0.0.0-8080-exec-7,线程id: 54,线程状态: RUNNABLE
[2018-12-14 15:36:22] - [http-nio-0.0.0.0-8080-exec-8] - com.apitest.service.CaseService.queryCaseByApiIdService(CaseService.java:58) - 返回结果: ServerResponse(status=1, message=查询用例成功, data=Page 1 of 2 containing com.apitest.entity.Cases instances)
[2018-12-14 15:36:22] - [http-nio-0.0.0.0-8080-exec-8] - com.apitest.service.CaseService.queryCaseByApiIdService(CaseService.java:59) - 线程名: http-nio-0.0.0.0-8080-exec-8,线程id: 55,线程状态: RUNNABLE
[2018-12-14 15:40:25] - [http-nio-0.0.0.0-8080-exec-9] - com.apitest.service.CaseService.queryCaseByApiIdService(CaseService.java:58) - 返回结果: ServerResponse(status=1, message=查询用例成功, data=Page 1 of 2 containing com.apitest.entity.Cases instances)
[2018-12-14 15:40:25] - [http-nio-0.0.0.0-8080-exec-9] - com.apitest.service.CaseService.queryCaseByApiIdService(CaseService.java:59) - 线程名: http-nio-0.0.0.0-8080-exec-9,线程id: 56,线程状态: RUNNABLE
[2018-12-14 15:40:27] - [http-nio-0.0.0.0-8080-exec-10] - com.apitest.service.CaseService.queryCaseByApiIdService(CaseService.java:58) - 返回结果: ServerResponse(status=1, message=查询用例成功, data=Page 1 of 2 containing com.apitest.entity.Cases instances)
[2018-12-14 15:40:27] - [http-nio-0.0.0.0-8080-exec-10] - com.apitest.service.CaseService.queryCaseByApiIdService(CaseService.java:59) - 线程名: http-nio-0.0.0.0-8080-exec-10,线程id: 57,线程状态: RUNNABLE
[2018-12-14 15:40:51] - [http-nio-0.0.0.0-8080-exec-1] - com.apitest.service.CaseService.queryCaseByApiIdService(CaseService.java:58) - 返回结果: ServerResponse(status=1, message=查询用例成功, data=Page 1 of 2 containing com.apitest.entity.Cases instances)
[2018-12-14 15:40:51] - [http-nio-0.0.0.0-8080-exec-1] - com.apitest.service.CaseService.queryCaseByApiIdService(CaseService.java:59) - 线程名: http-nio-0.0.0.0-8080-exec-1,线程id: 48,线程状态: RUNNABLE
[2018-12-14 15:40:54] - [http-nio-0.0.0.0-8080-exec-2] - com.apitest.service.CaseService.queryCaseByApiIdService(CaseService.java:58) - 返回结果: ServerResponse(status=1, message=查询用例成功, data=Page 1 of 2 containing com.apitest.entity.Cases instances)
[2018-12-14 15:40:54] - [http-nio-0.0.0.0-8080-exec-2] - com.apitest.service.CaseService.queryCaseByApiIdService(CaseService.java:59) - 线程名: http-nio-0.0.0.0-8080-exec-2,线程id: 49,线程状态: RUNNABLE
[2018-12-14 15:41:20] - [http-nio-0.0.0.0-8080-exec-3] - com.apitest.service.CaseService.queryCaseByApiIdService(CaseService.java:58) - 返回结果: ServerResponse(status=1, message=查询用例成功, data=Page 1 of 2 containing com.apitest.entity.Cases instances)
[2018-12-14 15:41:20] - [http-nio-0.0.0.0-8080-exec-3] - com.apitest.service.CaseService.queryCaseByApiIdService(CaseService.java:59) - 线程名: http-nio-0.0.0.0-8080-exec-3,线程id: 50,线程状态: RUNNABLE
[2018-12-14 15:41:23] - [http-nio-0.0.0.0-8080-exec-4] - com.apitest.service.CaseService.queryCaseByApiIdService(CaseService.java:58) - 返回结果: ServerResponse(status=1, message=查询用例成功, data=Page 1 of 2 containing com.apitest.entity.Cases instances)
[2018-12-14 15:41:23] - [http-nio-0.0.0.0-8080-exec-4] - com.apitest.service.CaseService.queryCaseByApiIdService(CaseService.java:59) - 线程名: http-nio-0.0.0.0-8080-exec-4,线程id: 51,线程状态: RUNNABLE
[2018-12-14 15:41:57] - [http-nio-0.0.0.0-8080-exec-5] - com.apitest.service.CaseService.queryOneCaseService(CaseService.java:72) - 返回结果: ServerResponse(status=1, message=查询用例成功, data=Optional[Cases(id=1, jsonData={"username":"16602811927","password":"d7190eb194ff9494625514b6d178c87f99c5973e28c398969d2233f2960a573e"}, paramsData=, contentType=, expectResult=null, createTime=2018-10-11 00:00:00.0, updateTime=2018-10-16 00:00:00.0, apiId=1, note=正确的账号密码, available=true)])
[2018-12-14 15:41:57] - [http-nio-0.0.0.0-8080-exec-5] - com.apitest.service.CaseService.queryOneCaseService(CaseService.java:73) - 线程名: http-nio-0.0.0.0-8080-exec-5,线程id: 52,线程状态: RUNNABLE
[2018-12-14 15:42:26] - [http-nio-0.0.0.0-8080-exec-6] - com.apitest.service.CaseService.queryOneCaseService(CaseService.java:72) - 返回结果: ServerResponse(status=1, message=查询用例成功, data=Optional[Cases(id=1, jsonData={"username":"16602811927","password":"d7190eb194ff9494625514b6d178c87f99c5973e28c398969d2233f2960a573e"}, paramsData=, contentType=, expectResult=null, createTime=2018-10-11 00:00:00.0, updateTime=2018-10-16 00:00:00.0, apiId=1, note=正确的账号密码, available=true)])
[2018-12-14 15:42:26] - [http-nio-0.0.0.0-8080-exec-6] - com.apitest.service.CaseService.queryOneCaseService(CaseService.java:73) - 线程名: http-nio-0.0.0.0-8080-exec-6,线程id: 53,线程状态: RUNNABLE
[2018-12-14 15:42:29] - [http-nio-0.0.0.0-8080-exec-7] - com.apitest.service.CaseService.queryCaseByApiIdService(CaseService.java:58) - 返回结果: ServerResponse(status=1, message=查询用例成功, data=Page 1 of 2 containing com.apitest.entity.Cases instances)
[2018-12-14 15:42:29] - [http-nio-0.0.0.0-8080-exec-7] - com.apitest.service.CaseService.queryCaseByApiIdService(CaseService.java:59) - 线程名: http-nio-0.0.0.0-8080-exec-7,线程id: 54,线程状态: RUNNABLE
[2018-12-14 15:43:20] - [http-nio-0.0.0.0-8080-exec-8] - com.apitest.service.CaseService.queryCaseByApiIdService(CaseService.java:58) - 返回结果: ServerResponse(status=1, message=查询用例成功, data=Page 1 of 2 containing com.apitest.entity.Cases instances)
[2018-12-14 15:43:20] - [http-nio-0.0.0.0-8080-exec-8] - com.apitest.service.CaseService.queryCaseByApiIdService(CaseService.java:59) - 线程名: http-nio-0.0.0.0-8080-exec-8,线程id: 55,线程状态: RUNNABLE
[2018-12-14 15:43:35] - [http-nio-0.0.0.0-8080-exec-9] - com.apitest.service.CaseService.queryCaseByApiIdService(CaseService.java:58) - 返回结果: ServerResponse(status=1, message=查询用例成功, data=Page 1 of 2 containing com.apitest.entity.Cases instances)
[2018-12-14 15:43:35] - [http-nio-0.0.0.0-8080-exec-9] - com.apitest.service.CaseService.queryCaseByApiIdService(CaseService.java:59) - 线程名: http-nio-0.0.0.0-8080-exec-9,线程id: 56,线程状态: RUNNABLE
[2018-12-14 15:43:37] - [http-nio-0.0.0.0-8080-exec-10] - com.apitest.service.CaseService.queryCaseByApiIdService(CaseService.java:58) - 返回结果: ServerResponse(status=1, message=查询用例成功, data=Page 1 of 2 containing com.apitest.entity.Cases instances)
[2018-12-14 15:43:37] - [http-nio-0.0.0.0-8080-exec-10] - com.apitest.service.CaseService.queryCaseByApiIdService(CaseService.java:59) - 线程名: http-nio-0.0.0.0-8080-exec-10,线程id: 57,线程状态: RUNNABLE
[2018-12-14 15:43:46] - [http-nio-0.0.0.0-8080-exec-1] - com.apitest.service.CaseService.queryOneCaseService(CaseService.java:72) - 返回结果: ServerResponse(status=1, message=查询用例成功, data=Optional[Cases(id=1, jsonData={"username":"16602811927","password":"d7190eb194ff9494625514b6d178c87f99c5973e28c398969d2233f2960a573e"}, paramsData=, contentType=, expectResult=null, createTime=2018-10-11 00:00:00.0, updateTime=2018-10-16 00:00:00.0, apiId=1, note=正确的账号密码, available=true)])
[2018-12-14 15:43:46] - [http-nio-0.0.0.0-8080-exec-1] - com.apitest.service.CaseService.queryOneCaseService(CaseService.java:73) - 线程名: http-nio-0.0.0.0-8080-exec-1,线程id: 48,线程状态: RUNNABLE
[2018-12-14 15:49:58] - [http-nio-0.0.0.0-8080-exec-2] - com.apitest.service.CaseService.queryCaseByApiIdService(CaseService.java:58) - 返回结果: ServerResponse(status=1, message=查询用例成功, data=Page 1 of 2 containing com.apitest.entity.Cases instances)
[2018-12-14 15:49:58] - [http-nio-0.0.0.0-8080-exec-2] - com.apitest.service.CaseService.queryCaseByApiIdService(CaseService.java:59) - 线程名: http-nio-0.0.0.0-8080-exec-2,线程id: 49,线程状态: RUNNABLE
[2018-12-14 15:50:00] - [http-nio-0.0.0.0-8080-exec-3] - com.apitest.service.CaseService.queryOneCaseService(CaseService.java:72) - 返回结果: ServerResponse(status=1, message=查询用例成功, data=Optional[Cases(id=1, jsonData={"username":"16602811927","password":"d7190eb194ff9494625514b6d178c87f99c5973e28c398969d2233f2960a573e"}, paramsData=, contentType=, expectResult=null, createTime=2018-10-11 00:00:00.0, updateTime=2018-10-16 00:00:00.0, apiId=1, note=正确的账号密码, available=true)])
[2018-12-14 15:50:00] - [http-nio-0.0.0.0-8080-exec-3] - com.apitest.service.CaseService.queryOneCaseService(CaseService.java:73) - 线程名: http-nio-0.0.0.0-8080-exec-3,线程id: 50,线程状态: RUNNABLE
[2018-12-14 15:53:19] - [http-nio-0.0.0.0-8080-exec-4] - com.apitest.service.CaseService.queryCaseByApiIdService(CaseService.java:58) - 返回结果: ServerResponse(status=1, message=查询用例成功, data=Page 1 of 2 containing com.apitest.entity.Cases instances)
[2018-12-14 15:53:19] - [http-nio-0.0.0.0-8080-exec-4] - com.apitest.service.CaseService.queryCaseByApiIdService(CaseService.java:59) - 线程名: http-nio-0.0.0.0-8080-exec-4,线程id: 51,线程状态: RUNNABLE
[2018-12-14 15:55:33] - [http-nio-0.0.0.0-8080-exec-5] - com.apitest.service.CaseService.queryCaseByApiIdService(CaseService.java:58) - 返回结果: ServerResponse(status=1, message=查询用例成功, data=Page 1 of 2 containing com.apitest.entity.Cases instances)
[2018-12-14 15:55:33] - [http-nio-0.0.0.0-8080-exec-5] - com.apitest.service.CaseService.queryCaseByApiIdService(CaseService.java:59) - 线程名: http-nio-0.0.0.0-8080-exec-5,线程id: 52,线程状态: RUNNABLE
[2018-12-14 15:55:36] - [http-nio-0.0.0.0-8080-exec-6] - com.apitest.service.CaseService.queryCaseByApiIdService(CaseService.java:58) - 返回结果: ServerResponse(status=1, message=查询用例成功, data=Page 1 of 2 containing com.apitest.entity.Cases instances)
[2018-12-14 15:55:36] - [http-nio-0.0.0.0-8080-exec-6] - com.apitest.service.CaseService.queryCaseByApiIdService(CaseService.java:59) - 线程名: http-nio-0.0.0.0-8080-exec-6,线程id: 53,线程状态: RUNNABLE
[2018-12-14 15:55:40] - [http-nio-0.0.0.0-8080-exec-7] - com.apitest.service.CaseService.queryCaseByApiIdService(CaseService.java:58) - 返回结果: ServerResponse(status=1, message=查询用例成功, data=Page 1 of 2 containing com.apitest.entity.Cases instances)
[2018-12-14 15:55:40] - [http-nio-0.0.0.0-8080-exec-7] - com.apitest.service.CaseService.queryCaseByApiIdService(CaseService.java:59) - 线程名: http-nio-0.0.0.0-8080-exec-7,线程id: 54,线程状态: RUNNABLE
[2018-12-14 15:55:41] - [http-nio-0.0.0.0-8080-exec-8] - com.apitest.service.CaseService.queryOneCaseService(CaseService.java:72) - 返回结果: ServerResponse(status=1, message=查询用例成功, data=Optional[Cases(id=1, jsonData={"username":"16602811927","password":"d7190eb194ff9494625514b6d178c87f99c5973e28c398969d2233f2960a573e"}, paramsData=, contentType=, expectResult=null, createTime=2018-10-11 00:00:00.0, updateTime=2018-10-16 00:00:00.0, apiId=1, note=正确的账号密码, available=true)])
[2018-12-14 15:55:41] - [http-nio-0.0.0.0-8080-exec-8] - com.apitest.service.CaseService.queryOneCaseService(CaseService.java:73) - 线程名: http-nio-0.0.0.0-8080-exec-8,线程id: 55,线程状态: RUNNABLE
[2018-12-14 15:56:36] - [http-nio-0.0.0.0-8080-exec-9] - com.apitest.service.CaseService.queryCaseByApiIdService(CaseService.java:58) - 返回结果: ServerResponse(status=1, message=查询用例成功, data=Page 1 of 2 containing com.apitest.entity.Cases instances)
[2018-12-14 15:56:36] - [http-nio-0.0.0.0-8080-exec-9] - com.apitest.service.CaseService.queryCaseByApiIdService(CaseService.java:59) - 线程名: http-nio-0.0.0.0-8080-exec-9,线程id: 56,线程状态: RUNNABLE
[2018-12-14 15:56:39] - [http-nio-0.0.0.0-8080-exec-10] - com.apitest.service.CaseService.queryOneCaseService(CaseService.java:72) - 返回结果: ServerResponse(status=1, message=查询用例成功, data=Optional[Cases(id=1, jsonData={"username":"16602811927","password":"d7190eb194ff9494625514b6d178c87f99c5973e28c398969d2233f2960a573e"}, paramsData=, contentType=, expectResult=null, createTime=2018-10-11 00:00:00.0, updateTime=2018-10-16 00:00:00.0, apiId=1, note=正确的账号密码, available=true)])
[2018-12-14 15:56:39] - [http-nio-0.0.0.0-8080-exec-10] - com.apitest.service.CaseService.queryOneCaseService(CaseService.java:73) - 线程名: http-nio-0.0.0.0-8080-exec-10,线程id: 57,线程状态: RUNNABLE
