[2018-12-17 15:12:03] - [http-nio-0.0.0.0-8080-exec-8] - com.apitest.service.CaseService.queryOneCaseService(CaseService.java:72) - 返回结果: ServerResponse(status=1, message=查询用例成功, data=Optional[Cases(id=86, jsonData={
    "cnum": "冀TE9T49",
    "driver": {
        "name": "测试司机",
        "mobile": "16602811927"
    },
    "start_time": 1544976000,
    "start_point": {
        "name": "起始点",
        "lat": 37.50022678586189,
        "lng": 116.265875167579
    },
    "end_point": {
        "name": "结束点",
        "lat": 38.12457170534894,
        "lng": 116.54819006611041
    }
}, paramsData=, contentType=, expectResult=null, createTime=2018-12-11 10:36:25.0, updateTime=2018-12-17 14:54:08.0, apiId=65, note=车辆为冀TE9T49，用于创建C01,C02,C04告警, available=true)])
[2018-12-17 15:12:03] - [http-nio-0.0.0.0-8080-exec-8] - com.apitest.service.CaseService.queryOneCaseService(CaseService.java:73) - 线程名: http-nio-0.0.0.0-8080-exec-8,线程id: 57,线程状态: RUNNABLE
[2018-12-17 15:12:06] - [http-nio-0.0.0.0-8080-exec-9] - com.apitest.service.CaseService.queryCaseByApiIdService(CaseService.java:58) - 返回结果: ServerResponse(status=1, message=查询用例成功, data=Page 1 of 3 containing com.apitest.entity.Cases instances)
[2018-12-17 15:12:06] - [http-nio-0.0.0.0-8080-exec-9] - com.apitest.service.CaseService.queryCaseByApiIdService(CaseService.java:59) - 线程名: http-nio-0.0.0.0-8080-exec-9,线程id: 58,线程状态: RUNNABLE
[2018-12-17 15:15:00] - [Thread-6] - org.springframework.scheduling.concurrent.ExecutorConfigurationSupport.shutdown(ExecutorConfigurationSupport.java:208) - Shutting down ExecutorService 'applicationTaskExecutor'
[2018-12-17 15:15:00] - [Thread-6] - org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.destroy(AbstractEntityManagerFactoryBean.java:597) - Closing JPA EntityManagerFactory for persistence unit 'default'
[2018-12-17 15:15:00] - [Thread-6] - com.zaxxer.hikari.HikariDataSource.close(HikariDataSource.java:350) - HikariPool-1 - Shutdown initiated...
[2018-12-17 15:15:00] - [Thread-6] - com.zaxxer.hikari.HikariDataSource.close(HikariDataSource.java:352) - HikariPool-1 - Shutdown completed.
[2018-12-17 15:15:09] - [main] - org.springframework.boot.StartupInfoLogger.logStarting(StartupInfoLogger.java:50) - Starting ApitestApplication on huangshayangdeMacBook-Pro.local with PID 986 (/Users/huangshayang/IdeaProjects/SpringBootApiTest/target/classes started by huangshayang in /Users/huangshayang/IdeaProjects/SpringBootApiTest)
[2018-12-17 15:15:09] - [main] - org.springframework.boot.SpringApplication.logStartupProfileInfo(SpringApplication.java:675) - No active profile set, falling back to default profiles: default
[2018-12-17 15:15:10] - [main] - org.springframework.data.repository.config.RepositoryConfigurationDelegate.multipleStoresDetected(RepositoryConfigurationDelegate.java:244) - Multiple Spring Data modules found, entering strict repository configuration mode!
[2018-12-17 15:15:10] - [main] - org.springframework.data.repository.config.RepositoryConfigurationDelegate.registerRepositoriesIn(RepositoryConfigurationDelegate.java:126) - Bootstrapping Spring Data repositories in DEFAULT mode.
[2018-12-17 15:15:10] - [main] - org.springframework.data.repository.config.RepositoryConfigurationDelegate.registerRepositoriesIn(RepositoryConfigurationDelegate.java:182) - Finished Spring Data repository scanning in 59ms. Found 5 repository interfaces.
[2018-12-17 15:15:10] - [main] - org.springframework.data.repository.config.RepositoryConfigurationDelegate.multipleStoresDetected(RepositoryConfigurationDelegate.java:244) - Multiple Spring Data modules found, entering strict repository configuration mode!
[2018-12-17 15:15:10] - [main] - org.springframework.data.repository.config.RepositoryConfigurationDelegate.registerRepositoriesIn(RepositoryConfigurationDelegate.java:126) - Bootstrapping Spring Data repositories in DEFAULT mode.
[2018-12-17 15:15:10] - [main] - org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport.isStrictRepositoryCandidate(RepositoryConfigurationExtensionSupport.java:363) - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.apitest.repository.ApiRepository.
[2018-12-17 15:15:10] - [main] - org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport.isStrictRepositoryCandidate(RepositoryConfigurationExtensionSupport.java:363) - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.apitest.repository.CaseRepository.
[2018-12-17 15:15:10] - [main] - org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport.isStrictRepositoryCandidate(RepositoryConfigurationExtensionSupport.java:363) - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.apitest.repository.LogRepository.
[2018-12-17 15:15:10] - [main] - org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport.isStrictRepositoryCandidate(RepositoryConfigurationExtensionSupport.java:363) - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.apitest.repository.MailRepository.
[2018-12-17 15:15:10] - [main] - org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport.isStrictRepositoryCandidate(RepositoryConfigurationExtensionSupport.java:363) - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.apitest.repository.UserRepository.
[2018-12-17 15:15:10] - [main] - org.springframework.data.repository.config.RepositoryConfigurationDelegate.registerRepositoriesIn(RepositoryConfigurationDelegate.java:182) - Finished Spring Data repository scanning in 12ms. Found 0 repository interfaces.
[2018-12-17 15:15:11] - [main] - org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization(PostProcessorRegistrationDelegate.java:330) - Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$87192566] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2018-12-17 15:15:11] - [main] - org.springframework.boot.web.embedded.tomcat.TomcatWebServer.initialize(TomcatWebServer.java:90) - Tomcat initialized with port(s): 8080 (http)
[2018-12-17 15:15:11] - [main] - org.apache.juli.logging.DirectJDKLog.log(DirectJDKLog.java:173) - Initializing ProtocolHandler ["http-nio-0.0.0.0-8080"]
[2018-12-17 15:15:11] - [main] - org.apache.juli.logging.DirectJDKLog.log(DirectJDKLog.java:173) - Starting service [Tomcat]
[2018-12-17 15:15:11] - [main] - org.apache.juli.logging.DirectJDKLog.log(DirectJDKLog.java:173) - Starting Servlet Engine: Apache Tomcat/9.0.12
[2018-12-17 15:15:11] - [main] - org.apache.juli.logging.DirectJDKLog.log(DirectJDKLog.java:173) - The APR based Apache Tomcat Native library which allows optimal performance in production environments was not found on the java.library.path: [/Users/huangshayang/Library/Java/Extensions:/Library/Java/Extensions:/Network/Library/Java/Extensions:/System/Library/Java/Extensions:/usr/lib/java:.]
[2018-12-17 15:15:11] - [main] - org.apache.juli.logging.DirectJDKLog.log(DirectJDKLog.java:173) - Initializing Spring embedded WebApplicationContext
[2018-12-17 15:15:11] - [main] - org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.prepareWebApplicationContext(ServletWebServerApplicationContext.java:285) - Root WebApplicationContext: initialization completed in 2299 ms
[2018-12-17 15:15:11] - [main] - org.springframework.boot.web.servlet.AbstractFilterRegistrationBean.configure(AbstractFilterRegistrationBean.java:248) - Mapping filter: 'characterEncodingFilter' to: [/*]
[2018-12-17 15:15:11] - [main] - org.springframework.boot.web.servlet.AbstractFilterRegistrationBean.configure(AbstractFilterRegistrationBean.java:248) - Mapping filter: 'sessionRepositoryFilter' to: [/*]
[2018-12-17 15:15:11] - [main] - org.springframework.boot.web.servlet.AbstractFilterRegistrationBean.configure(AbstractFilterRegistrationBean.java:248) - Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
[2018-12-17 15:15:11] - [main] - org.springframework.boot.web.servlet.AbstractFilterRegistrationBean.configure(AbstractFilterRegistrationBean.java:248) - Mapping filter: 'formContentFilter' to: [/*]
[2018-12-17 15:15:11] - [main] - org.springframework.boot.web.servlet.AbstractFilterRegistrationBean.configure(AbstractFilterRegistrationBean.java:248) - Mapping filter: 'requestContextFilter' to: [/*]
[2018-12-17 15:15:11] - [main] - org.springframework.boot.web.servlet.ServletRegistrationBean.addRegistration(ServletRegistrationBean.java:186) - Servlet dispatcherServlet mapped to [/]
[2018-12-17 15:15:11] - [main] - com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:110) - HikariPool-1 - Starting...
[2018-12-17 15:15:11] - [main] - com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:123) - HikariPool-1 - Start completed.
[2018-12-17 15:15:12] - [main] - org.hibernate.Version.logVersion(Version.java:46) - HHH000412: Hibernate Core {5.3.7.Final}
[2018-12-17 15:15:12] - [main] - org.hibernate.cfg.Environment.<clinit>(Environment.java:213) - HHH000206: hibernate.properties not found
[2018-12-17 15:15:12] - [main] - org.hibernate.annotations.common.reflection.java.JavaReflectionManager.<clinit>(JavaReflectionManager.java:49) - HCANN000001: Hibernate Commons Annotations {5.0.4.Final}
[2018-12-17 15:15:12] - [main] - org.hibernate.dialect.Dialect.<init>(Dialect.java:157) - HHH000400: Using dialect: org.hibernate.dialect.MySQL5Dialect
[2018-12-17 15:15:12] - [main] - org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.buildNativeEntityManagerFactory(AbstractEntityManagerFactoryBean.java:415) - Initialized JPA EntityManagerFactory for persistence unit 'default'
[2018-12-17 15:15:13] - [main] - io.netty.util.internal.logging.Slf4JLogger.info(Slf4JLogger.java:101) - Starting without optional epoll library
[2018-12-17 15:15:13] - [main] - io.netty.util.internal.logging.Slf4JLogger.info(Slf4JLogger.java:101) - Starting without optional kqueue library
[2018-12-17 15:15:13] - [main] - org.springframework.scheduling.concurrent.ExecutorConfigurationSupport.initialize(ExecutorConfigurationSupport.java:171) - Initializing ExecutorService 'applicationTaskExecutor'
[2018-12-17 15:15:14] - [main] - org.springframework.scheduling.annotation.ScheduledAnnotationBeanPostProcessor.finishRegistration(ScheduledAnnotationBeanPostProcessor.java:295) - No TaskScheduler/ScheduledExecutorService bean found for scheduled processing
[2018-12-17 15:15:14] - [main] - org.apache.juli.logging.DirectJDKLog.log(DirectJDKLog.java:173) - Starting ProtocolHandler ["http-nio-0.0.0.0-8080"]
[2018-12-17 15:15:14] - [main] - org.apache.juli.logging.DirectJDKLog.log(DirectJDKLog.java:173) - Using a shared selector for servlet write/read
[2018-12-17 15:15:14] - [main] - org.springframework.boot.web.embedded.tomcat.TomcatWebServer.start(TomcatWebServer.java:204) - Tomcat started on port(s): 8080 (http) with context path ''
[2018-12-17 15:15:14] - [main] - org.springframework.boot.StartupInfoLogger.logStarted(StartupInfoLogger.java:59) - Started ApitestApplication in 5.987 seconds (JVM running for 7.68)
[2018-12-17 15:15:19] - [http-nio-0.0.0.0-8080-exec-1] - org.apache.juli.logging.DirectJDKLog.log(DirectJDKLog.java:173) - Initializing Spring DispatcherServlet 'dispatcherServlet'
[2018-12-17 15:15:19] - [http-nio-0.0.0.0-8080-exec-1] - org.springframework.web.servlet.FrameworkServlet.initServletBean(FrameworkServlet.java:521) - Initializing Servlet 'dispatcherServlet'
[2018-12-17 15:15:19] - [http-nio-0.0.0.0-8080-exec-1] - org.springframework.web.servlet.FrameworkServlet.initServletBean(FrameworkServlet.java:543) - Completed initialization in 11 ms
[2018-12-17 15:15:19] - [http-nio-0.0.0.0-8080-exec-1] - org.hibernate.hql.internal.QueryTranslatorFactoryInitiator.initiateService(QueryTranslatorFactoryInitiator.java:47) - HHH000397: Using ASTQueryTranslatorFactory
[2018-12-17 15:15:19] - [http-nio-0.0.0.0-8080-exec-1] - com.apitest.service.ApiService.queryPageApiService(ApiService.java:90) - 返回结果: ServerResponse(status=1, message=查询接口成功, data=Page 1 of 5 containing com.apitest.entity.Apis instances)
[2018-12-17 15:15:19] - [http-nio-0.0.0.0-8080-exec-1] - com.apitest.service.ApiService.queryPageApiService(ApiService.java:91) - 线程名: http-nio-0.0.0.0-8080-exec-1,线程id: 51,线程状态: RUNNABLE
[2018-12-17 15:15:24] - [http-nio-0.0.0.0-8080-exec-2] - com.apitest.service.CaseService.queryCaseByApiIdService(CaseService.java:58) - 返回结果: ServerResponse(status=1, message=查询用例成功, data=Page 1 of 1 containing com.apitest.entity.Cases instances)
[2018-12-17 15:15:24] - [http-nio-0.0.0.0-8080-exec-2] - com.apitest.service.CaseService.queryCaseByApiIdService(CaseService.java:59) - 线程名: http-nio-0.0.0.0-8080-exec-2,线程id: 52,线程状态: RUNNABLE
[2018-12-17 15:15:30] - [http-nio-0.0.0.0-8080-exec-3] - com.apitest.service.ApiService.queryPageApiService(ApiService.java:90) - 返回结果: ServerResponse(status=1, message=查询接口成功, data=Page 1 of 5 containing com.apitest.entity.Apis instances)
[2018-12-17 15:15:30] - [http-nio-0.0.0.0-8080-exec-3] - com.apitest.service.ApiService.queryPageApiService(ApiService.java:91) - 线程名: http-nio-0.0.0.0-8080-exec-3,线程id: 53,线程状态: RUNNABLE
[2018-12-17 15:15:34] - [http-nio-0.0.0.0-8080-exec-4] - com.apitest.service.CaseService.queryCaseByApiIdService(CaseService.java:58) - 返回结果: ServerResponse(status=1, message=查询用例成功, data=Page 1 of 1 containing com.apitest.entity.Cases instances)
[2018-12-17 15:15:34] - [http-nio-0.0.0.0-8080-exec-4] - com.apitest.service.CaseService.queryCaseByApiIdService(CaseService.java:59) - 线程名: http-nio-0.0.0.0-8080-exec-4,线程id: 54,线程状态: RUNNABLE
[2018-12-17 15:15:36] - [http-nio-0.0.0.0-8080-exec-5] - com.apitest.service.CaseService.queryOneCaseService(CaseService.java:72) - 返回结果: ServerResponse(status=1, message=查询用例成功, data=Optional[Cases(id=53, jsonData=2, paramsData=, contentType=, expectResult=, createTime=2018-10-11 00:00:00.0, updateTime=2018-10-11 00:00:00.0, apiId=9, note=组织2, available=false)])
[2018-12-17 15:15:36] - [http-nio-0.0.0.0-8080-exec-5] - com.apitest.service.CaseService.queryOneCaseService(CaseService.java:73) - 线程名: http-nio-0.0.0.0-8080-exec-5,线程id: 55,线程状态: RUNNABLE
[2018-12-17 15:15:49] - [http-nio-0.0.0.0-8080-exec-6] - com.apitest.service.CaseService.modifyCaseService(CaseService.java:98) - 参数: Cases(id=null, jsonData=, paramsData={"org_id":2}, contentType=null, expectResult=, createTime=2018-12-17 15:15:49.601, updateTime=2018-12-17 15:15:49.601, apiId=null, note=组织2, available=true)
[2018-12-17 15:15:49] - [http-nio-0.0.0.0-8080-exec-6] - com.apitest.service.CaseService.modifyCaseService(CaseService.java:121) - 返回结果: ServerResponse(status=1, message=修改用例成功, data=null)
[2018-12-17 15:15:49] - [http-nio-0.0.0.0-8080-exec-6] - com.apitest.service.CaseService.modifyCaseService(CaseService.java:122) - 线程名: http-nio-0.0.0.0-8080-exec-6,线程id: 56,线程状态: RUNNABLE
[2018-12-17 15:15:49] - [http-nio-0.0.0.0-8080-exec-7] - com.apitest.service.CaseService.queryCaseByApiIdService(CaseService.java:58) - 返回结果: ServerResponse(status=1, message=查询用例成功, data=Page 1 of 1 containing com.apitest.entity.Cases instances)
[2018-12-17 15:15:49] - [http-nio-0.0.0.0-8080-exec-7] - com.apitest.service.CaseService.queryCaseByApiIdService(CaseService.java:59) - 线程名: http-nio-0.0.0.0-8080-exec-7,线程id: 57,线程状态: RUNNABLE
[2018-12-17 15:15:52] - [http-nio-0.0.0.0-8080-exec-8] - com.apitest.service.CaseService.queryOneCaseService(CaseService.java:72) - 返回结果: ServerResponse(status=1, message=查询用例成功, data=Optional[Cases(id=53, jsonData=, paramsData=, contentType=, expectResult=, createTime=2018-10-11 00:00:00.0, updateTime=2018-12-17 15:15:50.0, apiId=9, note=组织2, available=true)])
[2018-12-17 15:15:52] - [http-nio-0.0.0.0-8080-exec-8] - com.apitest.service.CaseService.queryOneCaseService(CaseService.java:73) - 线程名: http-nio-0.0.0.0-8080-exec-8,线程id: 58,线程状态: RUNNABLE
[2018-12-17 15:15:53] - [http-nio-0.0.0.0-8080-exec-9] - com.apitest.service.CaseService.queryCaseByApiIdService(CaseService.java:58) - 返回结果: ServerResponse(status=1, message=查询用例成功, data=Page 1 of 1 containing com.apitest.entity.Cases instances)
[2018-12-17 15:15:53] - [http-nio-0.0.0.0-8080-exec-9] - com.apitest.service.CaseService.queryCaseByApiIdService(CaseService.java:59) - 线程名: http-nio-0.0.0.0-8080-exec-9,线程id: 59,线程状态: RUNNABLE
[2018-12-17 15:16:09] - [http-nio-0.0.0.0-8080-exec-10] - com.apitest.service.CaseService.queryCaseByApiIdService(CaseService.java:58) - 返回结果: ServerResponse(status=1, message=查询用例成功, data=Page 1 of 1 containing com.apitest.entity.Cases instances)
[2018-12-17 15:16:09] - [http-nio-0.0.0.0-8080-exec-10] - com.apitest.service.CaseService.queryCaseByApiIdService(CaseService.java:59) - 线程名: http-nio-0.0.0.0-8080-exec-10,线程id: 60,线程状态: RUNNABLE
[2018-12-17 15:16:43] - [http-nio-0.0.0.0-8080-exec-1] - com.apitest.service.CaseService.queryOneCaseService(CaseService.java:72) - 返回结果: ServerResponse(status=1, message=查询用例成功, data=Optional[Cases(id=53, jsonData=, paramsData=, contentType=, expectResult=, createTime=2018-10-11 00:00:00.0, updateTime=2018-12-17 15:15:50.0, apiId=9, note=组织2, available=true)])
[2018-12-17 15:16:43] - [http-nio-0.0.0.0-8080-exec-1] - com.apitest.service.CaseService.queryOneCaseService(CaseService.java:73) - 线程名: http-nio-0.0.0.0-8080-exec-1,线程id: 51,线程状态: RUNNABLE
[2018-12-17 15:16:53] - [http-nio-0.0.0.0-8080-exec-2] - com.apitest.service.CaseService.modifyCaseService(CaseService.java:98) - 参数: Cases(id=null, jsonData=, paramsData={"org_id":2}, contentType=null, expectResult=, createTime=2018-12-17 15:16:53.193, updateTime=2018-12-17 15:16:53.193, apiId=null, note=组织2, available=true)
[2018-12-17 15:16:53] - [http-nio-0.0.0.0-8080-exec-2] - com.apitest.service.CaseService.modifyCaseService(CaseService.java:121) - 返回结果: ServerResponse(status=1, message=修改用例成功, data=null)
[2018-12-17 15:16:53] - [http-nio-0.0.0.0-8080-exec-2] - com.apitest.service.CaseService.modifyCaseService(CaseService.java:122) - 线程名: http-nio-0.0.0.0-8080-exec-2,线程id: 52,线程状态: RUNNABLE
[2018-12-17 15:16:53] - [http-nio-0.0.0.0-8080-exec-3] - com.apitest.service.CaseService.queryCaseByApiIdService(CaseService.java:58) - 返回结果: ServerResponse(status=1, message=查询用例成功, data=Page 1 of 1 containing com.apitest.entity.Cases instances)
[2018-12-17 15:16:53] - [http-nio-0.0.0.0-8080-exec-3] - com.apitest.service.CaseService.queryCaseByApiIdService(CaseService.java:59) - 线程名: http-nio-0.0.0.0-8080-exec-3,线程id: 53,线程状态: RUNNABLE
[2018-12-17 15:18:20] - [Thread-6] - org.springframework.scheduling.concurrent.ExecutorConfigurationSupport.shutdown(ExecutorConfigurationSupport.java:208) - Shutting down ExecutorService 'applicationTaskExecutor'
[2018-12-17 15:18:20] - [Thread-6] - org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.destroy(AbstractEntityManagerFactoryBean.java:597) - Closing JPA EntityManagerFactory for persistence unit 'default'
[2018-12-17 15:18:20] - [Thread-6] - com.zaxxer.hikari.HikariDataSource.close(HikariDataSource.java:350) - HikariPool-1 - Shutdown initiated...
[2018-12-17 15:18:20] - [Thread-6] - com.zaxxer.hikari.HikariDataSource.close(HikariDataSource.java:352) - HikariPool-1 - Shutdown completed.
[2018-12-17 15:18:27] - [main] - org.springframework.boot.StartupInfoLogger.logStarting(StartupInfoLogger.java:50) - Starting ApitestApplication on huangshayangdeMacBook-Pro.local with PID 995 (/Users/huangshayang/IdeaProjects/SpringBootApiTest/target/classes started by huangshayang in /Users/huangshayang/IdeaProjects/SpringBootApiTest)
[2018-12-17 15:18:27] - [main] - org.springframework.boot.SpringApplication.logStartupProfileInfo(SpringApplication.java:675) - No active profile set, falling back to default profiles: default
[2018-12-17 15:18:28] - [main] - org.springframework.data.repository.config.RepositoryConfigurationDelegate.multipleStoresDetected(RepositoryConfigurationDelegate.java:244) - Multiple Spring Data modules found, entering strict repository configuration mode!
[2018-12-17 15:18:28] - [main] - org.springframework.data.repository.config.RepositoryConfigurationDelegate.registerRepositoriesIn(RepositoryConfigurationDelegate.java:126) - Bootstrapping Spring Data repositories in DEFAULT mode.
[2018-12-17 15:18:28] - [main] - org.springframework.data.repository.config.RepositoryConfigurationDelegate.registerRepositoriesIn(RepositoryConfigurationDelegate.java:182) - Finished Spring Data repository scanning in 93ms. Found 5 repository interfaces.
[2018-12-17 15:18:28] - [main] - org.springframework.data.repository.config.RepositoryConfigurationDelegate.multipleStoresDetected(RepositoryConfigurationDelegate.java:244) - Multiple Spring Data modules found, entering strict repository configuration mode!
[2018-12-17 15:18:28] - [main] - org.springframework.data.repository.config.RepositoryConfigurationDelegate.registerRepositoriesIn(RepositoryConfigurationDelegate.java:126) - Bootstrapping Spring Data repositories in DEFAULT mode.
[2018-12-17 15:18:28] - [main] - org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport.isStrictRepositoryCandidate(RepositoryConfigurationExtensionSupport.java:363) - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.apitest.repository.ApiRepository.
[2018-12-17 15:18:28] - [main] - org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport.isStrictRepositoryCandidate(RepositoryConfigurationExtensionSupport.java:363) - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.apitest.repository.CaseRepository.
[2018-12-17 15:18:28] - [main] - org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport.isStrictRepositoryCandidate(RepositoryConfigurationExtensionSupport.java:363) - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.apitest.repository.LogRepository.
[2018-12-17 15:18:28] - [main] - org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport.isStrictRepositoryCandidate(RepositoryConfigurationExtensionSupport.java:363) - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.apitest.repository.MailRepository.
[2018-12-17 15:18:28] - [main] - org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport.isStrictRepositoryCandidate(RepositoryConfigurationExtensionSupport.java:363) - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.apitest.repository.UserRepository.
[2018-12-17 15:18:28] - [main] - org.springframework.data.repository.config.RepositoryConfigurationDelegate.registerRepositoriesIn(RepositoryConfigurationDelegate.java:182) - Finished Spring Data repository scanning in 16ms. Found 0 repository interfaces.
[2018-12-17 15:18:28] - [main] - org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization(PostProcessorRegistrationDelegate.java:330) - Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$281fc02c] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2018-12-17 15:18:28] - [main] - org.springframework.boot.web.embedded.tomcat.TomcatWebServer.initialize(TomcatWebServer.java:90) - Tomcat initialized with port(s): 8080 (http)
[2018-12-17 15:18:28] - [main] - org.apache.juli.logging.DirectJDKLog.log(DirectJDKLog.java:173) - Initializing ProtocolHandler ["http-nio-0.0.0.0-8080"]
[2018-12-17 15:18:28] - [main] - org.apache.juli.logging.DirectJDKLog.log(DirectJDKLog.java:173) - Starting service [Tomcat]
[2018-12-17 15:18:28] - [main] - org.apache.juli.logging.DirectJDKLog.log(DirectJDKLog.java:173) - Starting Servlet Engine: Apache Tomcat/9.0.12
[2018-12-17 15:18:28] - [main] - org.apache.juli.logging.DirectJDKLog.log(DirectJDKLog.java:173) - The APR based Apache Tomcat Native library which allows optimal performance in production environments was not found on the java.library.path: [/Users/huangshayang/Library/Java/Extensions:/Library/Java/Extensions:/Network/Library/Java/Extensions:/System/Library/Java/Extensions:/usr/lib/java:.]
[2018-12-17 15:18:29] - [main] - org.apache.juli.logging.DirectJDKLog.log(DirectJDKLog.java:173) - Initializing Spring embedded WebApplicationContext
[2018-12-17 15:18:29] - [main] - org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.prepareWebApplicationContext(ServletWebServerApplicationContext.java:285) - Root WebApplicationContext: initialization completed in 1837 ms
[2018-12-17 15:18:29] - [main] - org.springframework.boot.web.servlet.AbstractFilterRegistrationBean.configure(AbstractFilterRegistrationBean.java:248) - Mapping filter: 'characterEncodingFilter' to: [/*]
[2018-12-17 15:18:29] - [main] - org.springframework.boot.web.servlet.AbstractFilterRegistrationBean.configure(AbstractFilterRegistrationBean.java:248) - Mapping filter: 'sessionRepositoryFilter' to: [/*]
[2018-12-17 15:18:29] - [main] - org.springframework.boot.web.servlet.AbstractFilterRegistrationBean.configure(AbstractFilterRegistrationBean.java:248) - Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
[2018-12-17 15:18:29] - [main] - org.springframework.boot.web.servlet.AbstractFilterRegistrationBean.configure(AbstractFilterRegistrationBean.java:248) - Mapping filter: 'formContentFilter' to: [/*]
[2018-12-17 15:18:29] - [main] - org.springframework.boot.web.servlet.AbstractFilterRegistrationBean.configure(AbstractFilterRegistrationBean.java:248) - Mapping filter: 'requestContextFilter' to: [/*]
[2018-12-17 15:18:29] - [main] - org.springframework.boot.web.servlet.ServletRegistrationBean.addRegistration(ServletRegistrationBean.java:186) - Servlet dispatcherServlet mapped to [/]
[2018-12-17 15:18:29] - [main] - com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:110) - HikariPool-1 - Starting...
[2018-12-17 15:18:29] - [main] - com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:123) - HikariPool-1 - Start completed.
[2018-12-17 15:18:29] - [main] - org.hibernate.Version.logVersion(Version.java:46) - HHH000412: Hibernate Core {5.3.7.Final}
[2018-12-17 15:18:29] - [main] - org.hibernate.cfg.Environment.<clinit>(Environment.java:213) - HHH000206: hibernate.properties not found
[2018-12-17 15:18:29] - [main] - org.hibernate.annotations.common.reflection.java.JavaReflectionManager.<clinit>(JavaReflectionManager.java:49) - HCANN000001: Hibernate Commons Annotations {5.0.4.Final}
[2018-12-17 15:18:29] - [main] - org.hibernate.dialect.Dialect.<init>(Dialect.java:157) - HHH000400: Using dialect: org.hibernate.dialect.MySQL5Dialect
[2018-12-17 15:18:30] - [main] - org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.buildNativeEntityManagerFactory(AbstractEntityManagerFactoryBean.java:415) - Initialized JPA EntityManagerFactory for persistence unit 'default'
[2018-12-17 15:18:30] - [main] - io.netty.util.internal.logging.Slf4JLogger.info(Slf4JLogger.java:101) - Starting without optional epoll library
[2018-12-17 15:18:30] - [main] - io.netty.util.internal.logging.Slf4JLogger.info(Slf4JLogger.java:101) - Starting without optional kqueue library
[2018-12-17 15:18:30] - [main] - org.springframework.scheduling.concurrent.ExecutorConfigurationSupport.initialize(ExecutorConfigurationSupport.java:171) - Initializing ExecutorService 'applicationTaskExecutor'
[2018-12-17 15:18:31] - [main] - org.springframework.scheduling.annotation.ScheduledAnnotationBeanPostProcessor.finishRegistration(ScheduledAnnotationBeanPostProcessor.java:295) - No TaskScheduler/ScheduledExecutorService bean found for scheduled processing
[2018-12-17 15:18:31] - [main] - org.apache.juli.logging.DirectJDKLog.log(DirectJDKLog.java:173) - Starting ProtocolHandler ["http-nio-0.0.0.0-8080"]
[2018-12-17 15:18:31] - [main] - org.apache.juli.logging.DirectJDKLog.log(DirectJDKLog.java:173) - Using a shared selector for servlet write/read
[2018-12-17 15:18:31] - [main] - org.springframework.boot.web.embedded.tomcat.TomcatWebServer.start(TomcatWebServer.java:204) - Tomcat started on port(s): 8080 (http) with context path ''
[2018-12-17 15:18:31] - [main] - org.springframework.boot.StartupInfoLogger.logStarted(StartupInfoLogger.java:59) - Started ApitestApplication in 5.015 seconds (JVM running for 6.348)
[2018-12-17 15:18:36] - [http-nio-0.0.0.0-8080-exec-1] - org.apache.juli.logging.DirectJDKLog.log(DirectJDKLog.java:173) - Initializing Spring DispatcherServlet 'dispatcherServlet'
[2018-12-17 15:18:36] - [http-nio-0.0.0.0-8080-exec-1] - org.springframework.web.servlet.FrameworkServlet.initServletBean(FrameworkServlet.java:521) - Initializing Servlet 'dispatcherServlet'
[2018-12-17 15:18:36] - [http-nio-0.0.0.0-8080-exec-1] - org.springframework.web.servlet.FrameworkServlet.initServletBean(FrameworkServlet.java:543) - Completed initialization in 6 ms
[2018-12-17 15:18:36] - [http-nio-0.0.0.0-8080-exec-1] - com.apitest.service.CaseService.queryOneCaseService(CaseService.java:72) - 返回结果: ServerResponse(status=1, message=查询用例成功, data=Optional[Cases(id=53, jsonData=, paramsData=, contentType=, expectResult=, createTime=2018-10-11 00:00:00.0, updateTime=2018-12-17 15:16:53.0, apiId=9, note=组织2, available=true)])
[2018-12-17 15:18:36] - [http-nio-0.0.0.0-8080-exec-1] - com.apitest.service.CaseService.queryOneCaseService(CaseService.java:73) - 线程名: http-nio-0.0.0.0-8080-exec-1,线程id: 50,线程状态: RUNNABLE
[2018-12-17 15:19:00] - [http-nio-0.0.0.0-8080-exec-2] - com.apitest.service.CaseService.modifyCaseService(CaseService.java:98) - 参数: Cases(id=null, jsonData=, paramsData={"org_id":2}, contentType=null, expectResult=, createTime=2018-12-17 15:19:00.505, updateTime=2018-12-17 15:19:00.505, apiId=null, note=组织2, available=true)
[2018-12-17 15:19:00] - [http-nio-0.0.0.0-8080-exec-2] - com.apitest.service.CaseService.modifyCaseService(CaseService.java:122) - 返回结果: ServerResponse(status=1, message=修改用例成功, data=null)
[2018-12-17 15:19:00] - [http-nio-0.0.0.0-8080-exec-2] - com.apitest.service.CaseService.modifyCaseService(CaseService.java:123) - 线程名: http-nio-0.0.0.0-8080-exec-2,线程id: 51,线程状态: RUNNABLE
[2018-12-17 15:19:00] - [http-nio-0.0.0.0-8080-exec-3] - org.hibernate.hql.internal.QueryTranslatorFactoryInitiator.initiateService(QueryTranslatorFactoryInitiator.java:47) - HHH000397: Using ASTQueryTranslatorFactory
[2018-12-17 15:19:00] - [http-nio-0.0.0.0-8080-exec-3] - com.apitest.service.CaseService.queryCaseByApiIdService(CaseService.java:58) - 返回结果: ServerResponse(status=1, message=查询用例成功, data=Page 1 of 1 containing com.apitest.entity.Cases instances)
[2018-12-17 15:19:00] - [http-nio-0.0.0.0-8080-exec-3] - com.apitest.service.CaseService.queryCaseByApiIdService(CaseService.java:59) - 线程名: http-nio-0.0.0.0-8080-exec-3,线程id: 52,线程状态: RUNNABLE
[2018-12-17 15:19:03] - [http-nio-0.0.0.0-8080-exec-4] - com.apitest.service.CaseService.queryOneCaseService(CaseService.java:72) - 返回结果: ServerResponse(status=1, message=查询用例成功, data=Optional[Cases(id=54, jsonData=8888, paramsData=, contentType=, expectResult=, createTime=2018-10-11 00:00:00.0, updateTime=2018-10-11 00:00:00.0, apiId=9, note=组织不存在, available=false)])
[2018-12-17 15:19:03] - [http-nio-0.0.0.0-8080-exec-4] - com.apitest.service.CaseService.queryOneCaseService(CaseService.java:73) - 线程名: http-nio-0.0.0.0-8080-exec-4,线程id: 53,线程状态: RUNNABLE
[2018-12-17 15:19:17] - [http-nio-0.0.0.0-8080-exec-5] - com.apitest.service.CaseService.queryOneCaseService(CaseService.java:72) - 返回结果: ServerResponse(status=1, message=查询用例成功, data=Optional[Cases(id=54, jsonData=8888, paramsData=, contentType=, expectResult=, createTime=2018-10-11 00:00:00.0, updateTime=2018-10-11 00:00:00.0, apiId=9, note=组织不存在, available=false)])
[2018-12-17 15:19:17] - [http-nio-0.0.0.0-8080-exec-5] - com.apitest.service.CaseService.queryOneCaseService(CaseService.java:73) - 线程名: http-nio-0.0.0.0-8080-exec-5,线程id: 54,线程状态: RUNNABLE
[2018-12-17 15:19:29] - [http-nio-0.0.0.0-8080-exec-6] - com.apitest.service.CaseService.modifyCaseService(CaseService.java:98) - 参数: Cases(id=null, jsonData=, paramsData={"org_id":8888}, contentType=null, expectResult=, createTime=2018-12-17 15:19:29.476, updateTime=2018-12-17 15:19:29.476, apiId=null, note=组织不存在, available=true)
[2018-12-17 15:19:29] - [http-nio-0.0.0.0-8080-exec-6] - com.apitest.service.CaseService.modifyCaseService(CaseService.java:122) - 返回结果: ServerResponse(status=1, message=修改用例成功, data=null)
[2018-12-17 15:19:29] - [http-nio-0.0.0.0-8080-exec-6] - com.apitest.service.CaseService.modifyCaseService(CaseService.java:123) - 线程名: http-nio-0.0.0.0-8080-exec-6,线程id: 55,线程状态: RUNNABLE
[2018-12-17 15:19:29] - [http-nio-0.0.0.0-8080-exec-7] - com.apitest.service.CaseService.queryCaseByApiIdService(CaseService.java:58) - 返回结果: ServerResponse(status=1, message=查询用例成功, data=Page 1 of 1 containing com.apitest.entity.Cases instances)
[2018-12-17 15:19:29] - [http-nio-0.0.0.0-8080-exec-7] - com.apitest.service.CaseService.queryCaseByApiIdService(CaseService.java:59) - 线程名: http-nio-0.0.0.0-8080-exec-7,线程id: 56,线程状态: RUNNABLE
[2018-12-17 15:19:31] - [http-nio-0.0.0.0-8080-exec-8] - com.apitest.service.ApiService.queryPageApiService(ApiService.java:90) - 返回结果: ServerResponse(status=1, message=查询接口成功, data=Page 1 of 5 containing com.apitest.entity.Apis instances)
[2018-12-17 15:19:31] - [http-nio-0.0.0.0-8080-exec-8] - com.apitest.service.ApiService.queryPageApiService(ApiService.java:91) - 线程名: http-nio-0.0.0.0-8080-exec-8,线程id: 57,线程状态: RUNNABLE
[2018-12-17 15:19:37] - [http-nio-0.0.0.0-8080-exec-9] - com.apitest.service.LogService.queryPageLogByApiIdService(LogService.java:46) - 返回结果: ServerResponse(status=1, message=日志查询成功, data=Page 1 of 0 containing UNKNOWN instances)
[2018-12-17 15:19:37] - [http-nio-0.0.0.0-8080-exec-9] - com.apitest.service.LogService.queryPageLogByApiIdService(LogService.java:47) - 线程名: http-nio-0.0.0.0-8080-exec-9,线程id: 58,线程状态: RUNNABLE
[2018-12-17 15:19:38] - [http-nio-0.0.0.0-8080-exec-10] - com.apitest.service.ApiService.queryPageApiService(ApiService.java:90) - 返回结果: ServerResponse(status=1, message=查询接口成功, data=Page 1 of 5 containing com.apitest.entity.Apis instances)
[2018-12-17 15:19:38] - [http-nio-0.0.0.0-8080-exec-10] - com.apitest.service.ApiService.queryPageApiService(ApiService.java:91) - 线程名: http-nio-0.0.0.0-8080-exec-10,线程id: 59,线程状态: RUNNABLE
[2018-12-17 15:19:41] - [http-nio-0.0.0.0-8080-exec-1] - com.apitest.service.ApiService.execApiService(ApiService.java:191) - 返回结果: ServerResponse(status=1, message=http请求执行成功, data=null)
[2018-12-17 15:19:41] - [http-nio-0.0.0.0-8080-exec-1] - com.apitest.service.ApiService.execApiService(ApiService.java:192) - 线程名: http-nio-0.0.0.0-8080-exec-1,线程id: 50,线程状态: RUNNABLE
[2018-12-17 15:19:41] - [Thread-7] - com.apitest.service.ApiService.apiCaseExecByLock(ApiService.java:225) - 线程名: Thread-7,线程id: 74,线程进入
[2018-12-17 15:19:41] - [Thread-8] - com.apitest.service.ApiService.apiCaseExecByLock(ApiService.java:225) - 线程名: Thread-8,线程id: 75,线程进入
[2018-12-17 15:19:41] - [Thread-7] - com.apitest.service.ApiService.apiCaseExecByLock(ApiService.java:228) - 线程名: Thread-7,线程id: 74,加锁成功
[2018-12-17 15:19:41] - [Thread-7] - com.apitest.rest.RestRequest.doGet(RestRequest.java:31) - uri: /organizations/{org_id}/members
[2018-12-17 15:19:41] - [Thread-7] - com.apitest.rest.RestRequest.doGet(RestRequest.java:32) - jsonData: 
[2018-12-17 15:19:41] - [Thread-7] - com.apitest.rest.RestRequest.doGet(RestRequest.java:33) - paramsData: {"org_id":2}
[2018-12-17 15:19:42] - [Thread-8] - com.apitest.service.ApiService.apiCaseExecByLock(ApiService.java:228) - 线程名: Thread-8,线程id: 75,加锁成功
[2018-12-17 15:19:42] - [Thread-7] - com.apitest.service.ApiService.apiCaseExecByLock(ApiService.java:231) - 线程名: Thread-7,线程id: 74,释放锁完成
[2018-12-17 15:19:42] - [Thread-8] - com.apitest.rest.RestRequest.doGet(RestRequest.java:31) - uri: /organizations/{org_id}/members
[2018-12-17 15:19:42] - [Thread-8] - com.apitest.rest.RestRequest.doGet(RestRequest.java:32) - jsonData: 
[2018-12-17 15:19:42] - [Thread-8] - com.apitest.rest.RestRequest.doGet(RestRequest.java:33) - paramsData: {"org_id":8888}
[2018-12-17 15:19:42] - [Thread-8] - com.apitest.service.ApiService.apiCaseExecByLock(ApiService.java:231) - 线程名: Thread-8,线程id: 75,释放锁完成
[2018-12-17 15:19:43] - [http-nio-0.0.0.0-8080-exec-2] - com.apitest.service.LogService.queryPageLogByApiIdService(LogService.java:46) - 返回结果: ServerResponse(status=1, message=日志查询成功, data=Page 1 of 1 containing com.apitest.entity.Logs instances)
[2018-12-17 15:19:43] - [http-nio-0.0.0.0-8080-exec-2] - com.apitest.service.LogService.queryPageLogByApiIdService(LogService.java:47) - 线程名: http-nio-0.0.0.0-8080-exec-2,线程id: 51,线程状态: RUNNABLE
[2018-12-17 15:19:49] - [http-nio-0.0.0.0-8080-exec-3] - com.apitest.service.ApiService.queryPageApiService(ApiService.java:90) - 返回结果: ServerResponse(status=1, message=查询接口成功, data=Page 1 of 5 containing com.apitest.entity.Apis instances)
[2018-12-17 15:19:49] - [http-nio-0.0.0.0-8080-exec-3] - com.apitest.service.ApiService.queryPageApiService(ApiService.java:91) - 线程名: http-nio-0.0.0.0-8080-exec-3,线程id: 52,线程状态: RUNNABLE
[2018-12-17 15:20:53] - [http-nio-0.0.0.0-8080-exec-4] - com.apitest.service.CaseService.queryCaseByApiIdService(CaseService.java:58) - 返回结果: ServerResponse(status=1, message=查询用例成功, data=Page 1 of 1 containing com.apitest.entity.Cases instances)
[2018-12-17 15:20:53] - [http-nio-0.0.0.0-8080-exec-4] - com.apitest.service.CaseService.queryCaseByApiIdService(CaseService.java:59) - 线程名: http-nio-0.0.0.0-8080-exec-4,线程id: 53,线程状态: RUNNABLE
[2018-12-17 15:20:56] - [http-nio-0.0.0.0-8080-exec-5] - com.apitest.service.CaseService.queryOneCaseService(CaseService.java:72) - 返回结果: ServerResponse(status=1, message=查询用例成功, data=Optional[Cases(id=53, jsonData=, paramsData={"org_id":2}, contentType=, expectResult=, createTime=2018-10-11 00:00:00.0, updateTime=2018-12-17 15:19:01.0, apiId=9, note=组织2, available=true)])
[2018-12-17 15:20:56] - [http-nio-0.0.0.0-8080-exec-5] - com.apitest.service.CaseService.queryOneCaseService(CaseService.java:73) - 线程名: http-nio-0.0.0.0-8080-exec-5,线程id: 54,线程状态: RUNNABLE
[2018-12-17 15:21:07] - [http-nio-0.0.0.0-8080-exec-6] - com.apitest.service.CaseService.modifyCaseService(CaseService.java:98) - 参数: Cases(id=null, jsonData=, paramsData={"org_id":59}, contentType=null, expectResult=, createTime=2018-12-17 15:21:07.426, updateTime=2018-12-17 15:21:07.426, apiId=null, note=组织59, available=true)
[2018-12-17 15:21:07] - [http-nio-0.0.0.0-8080-exec-6] - com.apitest.service.CaseService.modifyCaseService(CaseService.java:122) - 返回结果: ServerResponse(status=1, message=修改用例成功, data=null)
[2018-12-17 15:21:07] - [http-nio-0.0.0.0-8080-exec-6] - com.apitest.service.CaseService.modifyCaseService(CaseService.java:123) - 线程名: http-nio-0.0.0.0-8080-exec-6,线程id: 55,线程状态: RUNNABLE
[2018-12-17 15:21:07] - [http-nio-0.0.0.0-8080-exec-7] - com.apitest.service.CaseService.queryCaseByApiIdService(CaseService.java:58) - 返回结果: ServerResponse(status=1, message=查询用例成功, data=Page 1 of 1 containing com.apitest.entity.Cases instances)
[2018-12-17 15:21:07] - [http-nio-0.0.0.0-8080-exec-7] - com.apitest.service.CaseService.queryCaseByApiIdService(CaseService.java:59) - 线程名: http-nio-0.0.0.0-8080-exec-7,线程id: 56,线程状态: RUNNABLE
[2018-12-17 15:21:09] - [http-nio-0.0.0.0-8080-exec-8] - com.apitest.service.ApiService.queryPageApiService(ApiService.java:90) - 返回结果: ServerResponse(status=1, message=查询接口成功, data=Page 1 of 5 containing com.apitest.entity.Apis instances)
[2018-12-17 15:21:09] - [http-nio-0.0.0.0-8080-exec-8] - com.apitest.service.ApiService.queryPageApiService(ApiService.java:91) - 线程名: http-nio-0.0.0.0-8080-exec-8,线程id: 57,线程状态: RUNNABLE
[2018-12-17 15:21:12] - [Thread-9] - com.apitest.service.ApiService.apiCaseExecByLock(ApiService.java:225) - 线程名: Thread-9,线程id: 78,线程进入
[2018-12-17 15:21:12] - [http-nio-0.0.0.0-8080-exec-9] - com.apitest.service.ApiService.execApiService(ApiService.java:191) - 返回结果: ServerResponse(status=1, message=http请求执行成功, data=null)
[2018-12-17 15:21:12] - [Thread-10] - com.apitest.service.ApiService.apiCaseExecByLock(ApiService.java:225) - 线程名: Thread-10,线程id: 79,线程进入
[2018-12-17 15:21:12] - [Thread-9] - com.apitest.service.ApiService.apiCaseExecByLock(ApiService.java:228) - 线程名: Thread-9,线程id: 78,加锁成功
[2018-12-17 15:21:12] - [http-nio-0.0.0.0-8080-exec-9] - com.apitest.service.ApiService.execApiService(ApiService.java:192) - 线程名: http-nio-0.0.0.0-8080-exec-9,线程id: 58,线程状态: RUNNABLE
[2018-12-17 15:21:12] - [Thread-9] - com.apitest.rest.RestRequest.doGet(RestRequest.java:31) - uri: /organizations/{org_id}/members
[2018-12-17 15:21:12] - [Thread-9] - com.apitest.rest.RestRequest.doGet(RestRequest.java:32) - jsonData: 
[2018-12-17 15:21:12] - [Thread-9] - com.apitest.rest.RestRequest.doGet(RestRequest.java:33) - paramsData: {"org_id":59}
[2018-12-17 15:21:12] - [Thread-9] - com.apitest.service.ApiService.apiCaseExecByLock(ApiService.java:231) - 线程名: Thread-9,线程id: 78,释放锁完成
[2018-12-17 15:21:12] - [Thread-10] - com.apitest.service.ApiService.apiCaseExecByLock(ApiService.java:228) - 线程名: Thread-10,线程id: 79,加锁成功
[2018-12-17 15:21:12] - [Thread-10] - com.apitest.rest.RestRequest.doGet(RestRequest.java:31) - uri: /organizations/{org_id}/members
[2018-12-17 15:21:12] - [Thread-10] - com.apitest.rest.RestRequest.doGet(RestRequest.java:32) - jsonData: 
[2018-12-17 15:21:12] - [Thread-10] - com.apitest.rest.RestRequest.doGet(RestRequest.java:33) - paramsData: {"org_id":8888}
[2018-12-17 15:21:12] - [Thread-10] - com.apitest.service.ApiService.apiCaseExecByLock(ApiService.java:231) - 线程名: Thread-10,线程id: 79,释放锁完成
[2018-12-17 15:21:15] - [http-nio-0.0.0.0-8080-exec-10] - com.apitest.service.LogService.queryPageLogByApiIdService(LogService.java:46) - 返回结果: ServerResponse(status=1, message=日志查询成功, data=Page 1 of 1 containing com.apitest.entity.Logs instances)
[2018-12-17 15:21:15] - [http-nio-0.0.0.0-8080-exec-10] - com.apitest.service.LogService.queryPageLogByApiIdService(LogService.java:47) - 线程名: http-nio-0.0.0.0-8080-exec-10,线程id: 59,线程状态: RUNNABLE
[2018-12-17 15:21:20] - [http-nio-0.0.0.0-8080-exec-1] - com.apitest.service.ApiService.queryPageApiService(ApiService.java:90) - 返回结果: ServerResponse(status=1, message=查询接口成功, data=Page 1 of 5 containing com.apitest.entity.Apis instances)
[2018-12-17 15:21:20] - [http-nio-0.0.0.0-8080-exec-1] - com.apitest.service.ApiService.queryPageApiService(ApiService.java:91) - 线程名: http-nio-0.0.0.0-8080-exec-1,线程id: 50,线程状态: RUNNABLE
[2018-12-17 15:21:24] - [http-nio-0.0.0.0-8080-exec-2] - com.apitest.service.CaseService.queryCaseByApiIdService(CaseService.java:58) - 返回结果: ServerResponse(status=1, message=查询用例成功, data=Page 1 of 1 containing com.apitest.entity.Cases instances)
[2018-12-17 15:21:24] - [http-nio-0.0.0.0-8080-exec-2] - com.apitest.service.CaseService.queryCaseByApiIdService(CaseService.java:59) - 线程名: http-nio-0.0.0.0-8080-exec-2,线程id: 51,线程状态: RUNNABLE
[2018-12-17 15:21:27] - [http-nio-0.0.0.0-8080-exec-3] - com.apitest.service.CaseService.queryOneCaseService(CaseService.java:72) - 返回结果: ServerResponse(status=1, message=查询用例成功, data=Optional[Cases(id=55, jsonData=2, paramsData=, contentType=, expectResult=, createTime=2018-10-11 00:00:00.0, updateTime=2018-10-11 00:00:00.0, apiId=10, note=组织2, available=false)])
[2018-12-17 15:21:27] - [http-nio-0.0.0.0-8080-exec-3] - com.apitest.service.CaseService.queryOneCaseService(CaseService.java:73) - 线程名: http-nio-0.0.0.0-8080-exec-3,线程id: 52,线程状态: RUNNABLE
[2018-12-17 15:21:42] - [http-nio-0.0.0.0-8080-exec-4] - com.apitest.service.CaseService.modifyCaseService(CaseService.java:98) - 参数: Cases(id=null, jsonData=, paramsData={"org_id":59}, contentType=null, expectResult=, createTime=2018-12-17 15:21:42.312, updateTime=2018-12-17 15:21:42.312, apiId=null, note=组织59, available=true)
[2018-12-17 15:21:42] - [http-nio-0.0.0.0-8080-exec-4] - com.apitest.service.CaseService.modifyCaseService(CaseService.java:122) - 返回结果: ServerResponse(status=1, message=修改用例成功, data=null)
[2018-12-17 15:21:42] - [http-nio-0.0.0.0-8080-exec-4] - com.apitest.service.CaseService.modifyCaseService(CaseService.java:123) - 线程名: http-nio-0.0.0.0-8080-exec-4,线程id: 53,线程状态: RUNNABLE
[2018-12-17 15:21:42] - [http-nio-0.0.0.0-8080-exec-5] - com.apitest.service.CaseService.queryCaseByApiIdService(CaseService.java:58) - 返回结果: ServerResponse(status=1, message=查询用例成功, data=Page 1 of 1 containing com.apitest.entity.Cases instances)
[2018-12-17 15:21:42] - [http-nio-0.0.0.0-8080-exec-5] - com.apitest.service.CaseService.queryCaseByApiIdService(CaseService.java:59) - 线程名: http-nio-0.0.0.0-8080-exec-5,线程id: 54,线程状态: RUNNABLE
[2018-12-17 15:21:44] - [http-nio-0.0.0.0-8080-exec-6] - com.apitest.service.CaseService.queryOneCaseService(CaseService.java:72) - 返回结果: ServerResponse(status=1, message=查询用例成功, data=Optional[Cases(id=56, jsonData=8888, paramsData=, contentType=, expectResult=, createTime=2018-10-11 00:00:00.0, updateTime=2018-10-11 00:00:00.0, apiId=10, note=组织不存在, available=false)])
[2018-12-17 15:21:44] - [http-nio-0.0.0.0-8080-exec-6] - com.apitest.service.CaseService.queryOneCaseService(CaseService.java:73) - 线程名: http-nio-0.0.0.0-8080-exec-6,线程id: 55,线程状态: RUNNABLE
[2018-12-17 15:22:03] - [http-nio-0.0.0.0-8080-exec-7] - com.apitest.service.CaseService.modifyCaseService(CaseService.java:98) - 参数: Cases(id=null, jsonData=, paramsData={"org_id":8888}, contentType=null, expectResult=, createTime=2018-12-17 15:22:03.993, updateTime=2018-12-17 15:22:03.993, apiId=null, note=组织不存在, available=true)
[2018-12-17 15:22:04] - [http-nio-0.0.0.0-8080-exec-7] - com.apitest.service.CaseService.modifyCaseService(CaseService.java:122) - 返回结果: ServerResponse(status=1, message=修改用例成功, data=null)
[2018-12-17 15:22:04] - [http-nio-0.0.0.0-8080-exec-7] - com.apitest.service.CaseService.modifyCaseService(CaseService.java:123) - 线程名: http-nio-0.0.0.0-8080-exec-7,线程id: 56,线程状态: RUNNABLE
[2018-12-17 15:22:04] - [http-nio-0.0.0.0-8080-exec-8] - com.apitest.service.CaseService.queryCaseByApiIdService(CaseService.java:58) - 返回结果: ServerResponse(status=1, message=查询用例成功, data=Page 1 of 1 containing com.apitest.entity.Cases instances)
[2018-12-17 15:22:04] - [http-nio-0.0.0.0-8080-exec-8] - com.apitest.service.CaseService.queryCaseByApiIdService(CaseService.java:59) - 线程名: http-nio-0.0.0.0-8080-exec-8,线程id: 57,线程状态: RUNNABLE
[2018-12-17 15:22:05] - [http-nio-0.0.0.0-8080-exec-9] - com.apitest.service.ApiService.queryPageApiService(ApiService.java:90) - 返回结果: ServerResponse(status=1, message=查询接口成功, data=Page 1 of 5 containing com.apitest.entity.Apis instances)
[2018-12-17 15:22:05] - [http-nio-0.0.0.0-8080-exec-9] - com.apitest.service.ApiService.queryPageApiService(ApiService.java:91) - 线程名: http-nio-0.0.0.0-8080-exec-9,线程id: 58,线程状态: RUNNABLE
[2018-12-17 15:22:08] - [http-nio-0.0.0.0-8080-exec-10] - com.apitest.service.CaseService.queryCaseByApiIdService(CaseService.java:58) - 返回结果: ServerResponse(status=1, message=查询用例成功, data=Page 1 of 1 containing com.apitest.entity.Cases instances)
[2018-12-17 15:22:08] - [http-nio-0.0.0.0-8080-exec-10] - com.apitest.service.CaseService.queryCaseByApiIdService(CaseService.java:59) - 线程名: http-nio-0.0.0.0-8080-exec-10,线程id: 59,线程状态: RUNNABLE
[2018-12-17 15:22:13] - [http-nio-0.0.0.0-8080-exec-1] - com.apitest.service.ApiService.queryPageApiService(ApiService.java:90) - 返回结果: ServerResponse(status=1, message=查询接口成功, data=Page 1 of 5 containing com.apitest.entity.Apis instances)
[2018-12-17 15:22:13] - [http-nio-0.0.0.0-8080-exec-1] - com.apitest.service.ApiService.queryPageApiService(ApiService.java:91) - 线程名: http-nio-0.0.0.0-8080-exec-1,线程id: 50,线程状态: RUNNABLE
[2018-12-17 15:22:16] - [http-nio-0.0.0.0-8080-exec-2] - com.apitest.service.CaseService.queryCaseByApiIdService(CaseService.java:58) - 返回结果: ServerResponse(status=1, message=查询用例成功, data=Page 1 of 1 containing com.apitest.entity.Cases instances)
[2018-12-17 15:22:16] - [http-nio-0.0.0.0-8080-exec-2] - com.apitest.service.CaseService.queryCaseByApiIdService(CaseService.java:59) - 线程名: http-nio-0.0.0.0-8080-exec-2,线程id: 51,线程状态: RUNNABLE
[2018-12-17 15:22:17] - [http-nio-0.0.0.0-8080-exec-3] - com.apitest.service.CaseService.queryOneCaseService(CaseService.java:72) - 返回结果: ServerResponse(status=1, message=查询用例成功, data=Optional[Cases(id=61, jsonData={"name":"部门2","manager_ids":[4]}, paramsData=, contentType=, expectResult=null, createTime=2018-10-11 00:00:00.0, updateTime=2018-10-11 00:00:00.0, apiId=11, note=新建一个不存在的部门, available=false)])
[2018-12-17 15:22:17] - [http-nio-0.0.0.0-8080-exec-3] - com.apitest.service.CaseService.queryOneCaseService(CaseService.java:73) - 线程名: http-nio-0.0.0.0-8080-exec-3,线程id: 52,线程状态: RUNNABLE
[2018-12-17 15:22:36] - [http-nio-0.0.0.0-8080-exec-4] - com.apitest.service.CaseService.modifyCaseService(CaseService.java:98) - 参数: Cases(id=null, jsonData={"name":"部门2","manager_ids":[4]}, paramsData={"org_id":59}, contentType=null, expectResult=null, createTime=2018-12-17 15:22:36.486, updateTime=2018-12-17 15:22:36.486, apiId=null, note=组织59，新建一个不存在的部门, available=true)
[2018-12-17 15:22:36] - [http-nio-0.0.0.0-8080-exec-4] - com.apitest.service.CaseService.modifyCaseService(CaseService.java:122) - 返回结果: ServerResponse(status=1, message=修改用例成功, data=null)
[2018-12-17 15:22:36] - [http-nio-0.0.0.0-8080-exec-4] - com.apitest.service.CaseService.modifyCaseService(CaseService.java:123) - 线程名: http-nio-0.0.0.0-8080-exec-4,线程id: 53,线程状态: RUNNABLE
[2018-12-17 15:22:36] - [http-nio-0.0.0.0-8080-exec-5] - com.apitest.service.CaseService.queryCaseByApiIdService(CaseService.java:58) - 返回结果: ServerResponse(status=1, message=查询用例成功, data=Page 1 of 1 containing com.apitest.entity.Cases instances)
[2018-12-17 15:22:36] - [http-nio-0.0.0.0-8080-exec-5] - com.apitest.service.CaseService.queryCaseByApiIdService(CaseService.java:59) - 线程名: http-nio-0.0.0.0-8080-exec-5,线程id: 54,线程状态: RUNNABLE
[2018-12-17 15:22:40] - [http-nio-0.0.0.0-8080-exec-6] - com.apitest.service.CaseService.queryOneCaseService(CaseService.java:72) - 返回结果: ServerResponse(status=1, message=查询用例成功, data=Optional[Cases(id=62, jsonData={"name":"","manager_ids":[4]}, paramsData=, contentType=, expectResult=null, createTime=2018-10-11 00:00:00.0, updateTime=2018-10-11 00:00:00.0, apiId=11, note=name为空, available=false)])
[2018-12-17 15:22:40] - [http-nio-0.0.0.0-8080-exec-6] - com.apitest.service.CaseService.queryOneCaseService(CaseService.java:73) - 线程名: http-nio-0.0.0.0-8080-exec-6,线程id: 55,线程状态: RUNNABLE
[2018-12-17 15:22:42] - [http-nio-0.0.0.0-8080-exec-7] - com.apitest.service.CaseService.queryCaseByApiIdService(CaseService.java:58) - 返回结果: ServerResponse(status=1, message=查询用例成功, data=Page 1 of 1 containing com.apitest.entity.Cases instances)
[2018-12-17 15:22:42] - [http-nio-0.0.0.0-8080-exec-7] - com.apitest.service.CaseService.queryCaseByApiIdService(CaseService.java:59) - 线程名: http-nio-0.0.0.0-8080-exec-7,线程id: 56,线程状态: RUNNABLE
[2018-12-17 15:22:43] - [http-nio-0.0.0.0-8080-exec-8] - com.apitest.service.ApiService.queryPageApiService(ApiService.java:90) - 返回结果: ServerResponse(status=1, message=查询接口成功, data=Page 1 of 5 containing com.apitest.entity.Apis instances)
[2018-12-17 15:22:43] - [http-nio-0.0.0.0-8080-exec-8] - com.apitest.service.ApiService.queryPageApiService(ApiService.java:91) - 线程名: http-nio-0.0.0.0-8080-exec-8,线程id: 57,线程状态: RUNNABLE
[2018-12-17 15:22:47] - [http-nio-0.0.0.0-8080-exec-9] - com.apitest.service.ApiService.queryOneApiService(ApiService.java:104) - 返回结果: ServerResponse(status=1, message=查询接口成功, data=Optional[Apis(id=11, url=/organizations/2/departments, createTime=2018-10-11 00:00:00.0, method=post, updateTime=2018-10-11 00:00:00.0, cookie=true, note=新建部门)])
[2018-12-17 15:22:47] - [http-nio-0.0.0.0-8080-exec-9] - com.apitest.service.ApiService.queryOneApiService(ApiService.java:105) - 线程名: http-nio-0.0.0.0-8080-exec-9,线程id: 58,线程状态: RUNNABLE
[2018-12-17 15:22:58] - [http-nio-0.0.0.0-8080-exec-10] - com.apitest.service.ApiService.modifyApiService(ApiService.java:111) - 参数: Apis(id=null, url=/organizations/{org_id}/departments, createTime=2018-12-17 15:22:58.383, method=post, updateTime=2018-12-17 15:22:58.383, cookie=true, note=新建部门)
[2018-12-17 15:22:58] - [http-nio-0.0.0.0-8080-exec-10] - com.apitest.service.ApiService.modifyApiService(ApiService.java:146) - 返回结果: ServerResponse(status=1, message=修改接口成功, data=null)
[2018-12-17 15:22:58] - [http-nio-0.0.0.0-8080-exec-10] - com.apitest.service.ApiService.modifyApiService(ApiService.java:147) - 线程名: http-nio-0.0.0.0-8080-exec-10,线程id: 59,线程状态: RUNNABLE
[2018-12-17 15:22:58] - [http-nio-0.0.0.0-8080-exec-1] - com.apitest.service.ApiService.queryPageApiService(ApiService.java:90) - 返回结果: ServerResponse(status=1, message=查询接口成功, data=Page 1 of 5 containing com.apitest.entity.Apis instances)
[2018-12-17 15:22:58] - [http-nio-0.0.0.0-8080-exec-1] - com.apitest.service.ApiService.queryPageApiService(ApiService.java:91) - 线程名: http-nio-0.0.0.0-8080-exec-1,线程id: 50,线程状态: RUNNABLE
[2018-12-17 15:23:02] - [http-nio-0.0.0.0-8080-exec-2] - com.apitest.service.CaseService.queryCaseByApiIdService(CaseService.java:58) - 返回结果: ServerResponse(status=1, message=查询用例成功, data=Page 1 of 1 containing com.apitest.entity.Cases instances)
[2018-12-17 15:23:02] - [http-nio-0.0.0.0-8080-exec-2] - com.apitest.service.CaseService.queryCaseByApiIdService(CaseService.java:59) - 线程名: http-nio-0.0.0.0-8080-exec-2,线程id: 51,线程状态: RUNNABLE
[2018-12-17 15:23:35] - [http-nio-0.0.0.0-8080-exec-3] - com.apitest.service.CaseService.queryOneCaseService(CaseService.java:72) - 返回结果: ServerResponse(status=1, message=查询用例成功, data=Optional[Cases(id=61, jsonData={"name":"部门2","manager_ids":[4]}, paramsData={"org_id":59}, contentType=, expectResult=null, createTime=2018-10-11 00:00:00.0, updateTime=2018-12-17 15:22:37.0, apiId=11, note=组织59，新建一个不存在的部门, available=true)])
[2018-12-17 15:23:35] - [http-nio-0.0.0.0-8080-exec-3] - com.apitest.service.CaseService.queryOneCaseService(CaseService.java:73) - 线程名: http-nio-0.0.0.0-8080-exec-3,线程id: 52,线程状态: RUNNABLE
[2018-12-17 15:23:40] - [http-nio-0.0.0.0-8080-exec-4] - com.apitest.service.CaseService.modifyCaseService(CaseService.java:98) - 参数: Cases(id=null, jsonData={"name":"部门2","manager_ids":[12]}, paramsData={"org_id":59}, contentType=null, expectResult=null, createTime=2018-12-17 15:23:40.584, updateTime=2018-12-17 15:23:40.584, apiId=null, note=组织59，新建一个不存在的部门, available=true)
[2018-12-17 15:23:40] - [http-nio-0.0.0.0-8080-exec-4] - com.apitest.service.CaseService.modifyCaseService(CaseService.java:122) - 返回结果: ServerResponse(status=1, message=修改用例成功, data=null)
[2018-12-17 15:23:40] - [http-nio-0.0.0.0-8080-exec-4] - com.apitest.service.CaseService.modifyCaseService(CaseService.java:123) - 线程名: http-nio-0.0.0.0-8080-exec-4,线程id: 53,线程状态: RUNNABLE
[2018-12-17 15:23:40] - [http-nio-0.0.0.0-8080-exec-5] - com.apitest.service.CaseService.queryCaseByApiIdService(CaseService.java:58) - 返回结果: ServerResponse(status=1, message=查询用例成功, data=Page 1 of 1 containing com.apitest.entity.Cases instances)
[2018-12-17 15:23:40] - [http-nio-0.0.0.0-8080-exec-5] - com.apitest.service.CaseService.queryCaseByApiIdService(CaseService.java:59) - 线程名: http-nio-0.0.0.0-8080-exec-5,线程id: 54,线程状态: RUNNABLE
[2018-12-17 15:23:42] - [http-nio-0.0.0.0-8080-exec-6] - com.apitest.service.ApiService.queryPageApiService(ApiService.java:90) - 返回结果: ServerResponse(status=1, message=查询接口成功, data=Page 1 of 5 containing com.apitest.entity.Apis instances)
[2018-12-17 15:23:42] - [http-nio-0.0.0.0-8080-exec-6] - com.apitest.service.ApiService.queryPageApiService(ApiService.java:91) - 线程名: http-nio-0.0.0.0-8080-exec-6,线程id: 55,线程状态: RUNNABLE
[2018-12-17 15:23:45] - [Thread-11] - com.apitest.service.ApiService.apiCaseExecByLock(ApiService.java:225) - 线程名: Thread-11,线程id: 82,线程进入
[2018-12-17 15:23:45] - [Thread-11] - com.apitest.service.ApiService.apiCaseExecByLock(ApiService.java:228) - 线程名: Thread-11,线程id: 82,加锁成功
[2018-12-17 15:23:45] - [http-nio-0.0.0.0-8080-exec-7] - com.apitest.service.ApiService.execApiService(ApiService.java:191) - 返回结果: ServerResponse(status=1, message=http请求执行成功, data=null)
[2018-12-17 15:23:45] - [Thread-11] - com.apitest.rest.RestRequest.doPost(RestRequest.java:48) - uri: /organizations/{org_id}/departments
[2018-12-17 15:23:45] - [http-nio-0.0.0.0-8080-exec-7] - com.apitest.service.ApiService.execApiService(ApiService.java:192) - 线程名: http-nio-0.0.0.0-8080-exec-7,线程id: 56,线程状态: RUNNABLE
[2018-12-17 15:23:45] - [Thread-11] - com.apitest.rest.RestRequest.doPost(RestRequest.java:49) - jsonData: {"name":"部门2","manager_ids":[12]}
[2018-12-17 15:23:45] - [Thread-11] - com.apitest.rest.RestRequest.doPost(RestRequest.java:50) - paramsData: {"org_id":59}
[2018-12-17 15:23:46] - [Thread-11] - com.apitest.service.ApiService.apiCaseExecByLock(ApiService.java:231) - 线程名: Thread-11,线程id: 82,释放锁完成
[2018-12-17 15:23:47] - [http-nio-0.0.0.0-8080-exec-8] - com.apitest.service.LogService.queryPageLogByApiIdService(LogService.java:46) - 返回结果: ServerResponse(status=1, message=日志查询成功, data=Page 1 of 1 containing com.apitest.entity.Logs instances)
[2018-12-17 15:23:47] - [http-nio-0.0.0.0-8080-exec-8] - com.apitest.service.LogService.queryPageLogByApiIdService(LogService.java:47) - 线程名: http-nio-0.0.0.0-8080-exec-8,线程id: 57,线程状态: RUNNABLE
[2018-12-17 15:24:10] - [http-nio-0.0.0.0-8080-exec-9] - com.apitest.service.ApiService.queryPageApiService(ApiService.java:90) - 返回结果: ServerResponse(status=1, message=查询接口成功, data=Page 1 of 5 containing com.apitest.entity.Apis instances)
[2018-12-17 15:24:10] - [http-nio-0.0.0.0-8080-exec-9] - com.apitest.service.ApiService.queryPageApiService(ApiService.java:91) - 线程名: http-nio-0.0.0.0-8080-exec-9,线程id: 58,线程状态: RUNNABLE
[2018-12-17 15:30:55] - [http-nio-0.0.0.0-8080-exec-10] - com.apitest.service.ApiService.queryPageApiService(ApiService.java:90) - 返回结果: ServerResponse(status=1, message=查询接口成功, data=Page 2 of 5 containing com.apitest.entity.Apis instances)
[2018-12-17 15:30:55] - [http-nio-0.0.0.0-8080-exec-10] - com.apitest.service.ApiService.queryPageApiService(ApiService.java:91) - 线程名: http-nio-0.0.0.0-8080-exec-10,线程id: 59,线程状态: RUNNABLE
[2018-12-17 15:30:59] - [http-nio-0.0.0.0-8080-exec-1] - com.apitest.service.ApiService.queryPageApiService(ApiService.java:90) - 返回结果: ServerResponse(status=1, message=查询接口成功, data=Page 5 of 5 containing com.apitest.entity.Apis instances)
[2018-12-17 15:30:59] - [http-nio-0.0.0.0-8080-exec-1] - com.apitest.service.ApiService.queryPageApiService(ApiService.java:91) - 线程名: http-nio-0.0.0.0-8080-exec-1,线程id: 50,线程状态: RUNNABLE
[2018-12-17 15:31:12] - [http-nio-0.0.0.0-8080-exec-2] - com.apitest.service.CaseService.queryCaseByApiIdService(CaseService.java:58) - 返回结果: ServerResponse(status=1, message=查询用例成功, data=Page 1 of 3 containing com.apitest.entity.Cases instances)
[2018-12-17 15:31:12] - [http-nio-0.0.0.0-8080-exec-2] - com.apitest.service.CaseService.queryCaseByApiIdService(CaseService.java:59) - 线程名: http-nio-0.0.0.0-8080-exec-2,线程id: 51,线程状态: RUNNABLE
[2018-12-17 15:31:15] - [http-nio-0.0.0.0-8080-exec-3] - com.apitest.service.CaseService.queryOneCaseService(CaseService.java:72) - 返回结果: ServerResponse(status=1, message=查询用例成功, data=Optional[Cases(id=86, jsonData={
    "cnum": "冀TE9T49",
    "driver": {
        "name": "测试司机",
        "mobile": "16602811927"
    },
    "start_time": 1544976000,
    "start_point": {
        "name": "起始点",
        "lat": 37.50022678586189,
        "lng": 116.265875167579
    },
    "end_point": {
        "name": "结束点",
        "lat": 38.12457170534894,
        "lng": 116.54819006611041
    }
}, paramsData=, contentType=, expectResult=null, createTime=2018-12-11 10:36:25.0, updateTime=2018-12-17 14:54:08.0, apiId=65, note=车辆为冀TE9T49，用于创建C01,C02,C04告警, available=true)])
[2018-12-17 15:31:15] - [http-nio-0.0.0.0-8080-exec-3] - com.apitest.service.CaseService.queryOneCaseService(CaseService.java:73) - 线程名: http-nio-0.0.0.0-8080-exec-3,线程id: 52,线程状态: RUNNABLE
[2018-12-17 15:31:27] - [http-nio-0.0.0.0-8080-exec-4] - com.apitest.service.CaseService.modifyCaseService(CaseService.java:98) - 参数: Cases(id=null, jsonData={
    "cnum": "冀TE9T49",
    "driver": {
        "name": "测试司机",
        "mobile": "16602811927"
    },
    "start_time": 1544976000,
    "start_point": {
        "name": "起始点",
        "lat": 37.50022678586189,
        "lng": 116.265875167579
    },
    "end_point": {
        "name": "结束点",
        "lat": 38.12457170534894,
        "lng": 116.54819006611041
    }
}, paramsData={"dpt_id":44}, contentType=null, expectResult=null, createTime=2018-12-17 15:31:27.094, updateTime=2018-12-17 15:31:27.094, apiId=null, note=车辆为冀TE9T49，用于创建C01,C02,C04告警, available=true)
[2018-12-17 15:31:27] - [http-nio-0.0.0.0-8080-exec-4] - com.apitest.service.CaseService.modifyCaseService(CaseService.java:122) - 返回结果: ServerResponse(status=1, message=修改用例成功, data=null)
[2018-12-17 15:31:27] - [http-nio-0.0.0.0-8080-exec-4] - com.apitest.service.CaseService.modifyCaseService(CaseService.java:123) - 线程名: http-nio-0.0.0.0-8080-exec-4,线程id: 53,线程状态: RUNNABLE
[2018-12-17 15:31:27] - [http-nio-0.0.0.0-8080-exec-5] - com.apitest.service.CaseService.queryCaseByApiIdService(CaseService.java:58) - 返回结果: ServerResponse(status=1, message=查询用例成功, data=Page 1 of 3 containing com.apitest.entity.Cases instances)
[2018-12-17 15:31:27] - [http-nio-0.0.0.0-8080-exec-5] - com.apitest.service.CaseService.queryCaseByApiIdService(CaseService.java:59) - 线程名: http-nio-0.0.0.0-8080-exec-5,线程id: 54,线程状态: RUNNABLE
[2018-12-17 15:33:02] - [http-nio-0.0.0.0-8080-exec-6] - com.apitest.service.CaseService.queryOneCaseService(CaseService.java:72) - 返回结果: ServerResponse(status=1, message=查询用例成功, data=Optional[Cases(id=87, jsonData={"cnum":"冀RQ2R31","start_time":1544005500,"start_point":{},"end_point":{}}	, paramsData=, contentType=, expectResult=, createTime=2018-12-11 11:05:04.0, updateTime=2018-12-11 11:05:04.0, apiId=65, note=起始点和结束点参数为空, available=false)])
[2018-12-17 15:33:02] - [http-nio-0.0.0.0-8080-exec-6] - com.apitest.service.CaseService.queryOneCaseService(CaseService.java:73) - 线程名: http-nio-0.0.0.0-8080-exec-6,线程id: 55,线程状态: RUNNABLE
[2018-12-17 15:33:05] - [http-nio-0.0.0.0-8080-exec-7] - com.apitest.service.CaseService.modifyCaseService(CaseService.java:98) - 参数: Cases(id=null, jsonData={"cnum":"冀RQ2R31","start_time":1544005500,"start_point":{},"end_point":{}}	, paramsData={"dpt_id":44}, contentType=null, expectResult=, createTime=2018-12-17 15:33:05.746, updateTime=2018-12-17 15:33:05.746, apiId=null, note=起始点和结束点参数为空, available=false)
[2018-12-17 15:33:05] - [http-nio-0.0.0.0-8080-exec-7] - com.apitest.service.CaseService.modifyCaseService(CaseService.java:122) - 返回结果: ServerResponse(status=1, message=修改用例成功, data=null)
[2018-12-17 15:33:05] - [http-nio-0.0.0.0-8080-exec-7] - com.apitest.service.CaseService.modifyCaseService(CaseService.java:123) - 线程名: http-nio-0.0.0.0-8080-exec-7,线程id: 56,线程状态: RUNNABLE
[2018-12-17 15:33:05] - [http-nio-0.0.0.0-8080-exec-8] - com.apitest.service.CaseService.queryCaseByApiIdService(CaseService.java:58) - 返回结果: ServerResponse(status=1, message=查询用例成功, data=Page 1 of 3 containing com.apitest.entity.Cases instances)
[2018-12-17 15:33:05] - [http-nio-0.0.0.0-8080-exec-8] - com.apitest.service.CaseService.queryCaseByApiIdService(CaseService.java:59) - 线程名: http-nio-0.0.0.0-8080-exec-8,线程id: 57,线程状态: RUNNABLE
[2018-12-17 15:33:07] - [http-nio-0.0.0.0-8080-exec-9] - com.apitest.service.CaseService.queryOneCaseService(CaseService.java:72) - 返回结果: ServerResponse(status=1, message=查询用例成功, data=Optional[Cases(id=88, jsonData={"cnum":"冀RQ2R31","start_time":1544005500,"start_point":{"name":"起始点","lat":39.483125793652164,"lng":116.79814097509325}}	, paramsData=, contentType=, expectResult=, createTime=2018-12-11 11:14:31.0, updateTime=2018-12-11 11:14:31.0, apiId=65, note=不传end_point, available=false)])
[2018-12-17 15:33:07] - [http-nio-0.0.0.0-8080-exec-9] - com.apitest.service.CaseService.queryOneCaseService(CaseService.java:73) - 线程名: http-nio-0.0.0.0-8080-exec-9,线程id: 58,线程状态: RUNNABLE
[2018-12-17 15:33:10] - [http-nio-0.0.0.0-8080-exec-10] - com.apitest.service.CaseService.modifyCaseService(CaseService.java:98) - 参数: Cases(id=null, jsonData={"cnum":"冀RQ2R31","start_time":1544005500,"start_point":{"name":"起始点","lat":39.483125793652164,"lng":116.79814097509325}}	, paramsData={"dpt_id":44}, contentType=null, expectResult=, createTime=2018-12-17 15:33:10.445, updateTime=2018-12-17 15:33:10.445, apiId=null, note=不传end_point, available=false)
[2018-12-17 15:33:10] - [http-nio-0.0.0.0-8080-exec-10] - com.apitest.service.CaseService.modifyCaseService(CaseService.java:122) - 返回结果: ServerResponse(status=1, message=修改用例成功, data=null)
[2018-12-17 15:33:10] - [http-nio-0.0.0.0-8080-exec-10] - com.apitest.service.CaseService.modifyCaseService(CaseService.java:123) - 线程名: http-nio-0.0.0.0-8080-exec-10,线程id: 59,线程状态: RUNNABLE
[2018-12-17 15:33:10] - [http-nio-0.0.0.0-8080-exec-1] - com.apitest.service.CaseService.queryCaseByApiIdService(CaseService.java:58) - 返回结果: ServerResponse(status=1, message=查询用例成功, data=Page 1 of 3 containing com.apitest.entity.Cases instances)
[2018-12-17 15:33:10] - [http-nio-0.0.0.0-8080-exec-1] - com.apitest.service.CaseService.queryCaseByApiIdService(CaseService.java:59) - 线程名: http-nio-0.0.0.0-8080-exec-1,线程id: 50,线程状态: RUNNABLE
[2018-12-17 15:33:12] - [http-nio-0.0.0.0-8080-exec-2] - com.apitest.service.CaseService.queryOneCaseService(CaseService.java:72) - 返回结果: ServerResponse(status=1, message=查询用例成功, data=Optional[Cases(id=89, jsonData={"cnum":"冀RQ2R31","start_time":1544005500,"end_point":{"name":"结束点","lat":40.753073708949344,"lng":114.88801083187069}}	, paramsData=, contentType=, expectResult=, createTime=2018-12-11 11:15:46.0, updateTime=2018-12-11 11:15:46.0, apiId=65, note=不传start_point, available=false)])
[2018-12-17 15:33:12] - [http-nio-0.0.0.0-8080-exec-2] - com.apitest.service.CaseService.queryOneCaseService(CaseService.java:73) - 线程名: http-nio-0.0.0.0-8080-exec-2,线程id: 51,线程状态: RUNNABLE
[2018-12-17 15:33:15] - [http-nio-0.0.0.0-8080-exec-3] - com.apitest.service.CaseService.modifyCaseService(CaseService.java:98) - 参数: Cases(id=null, jsonData={"cnum":"冀RQ2R31","start_time":1544005500,"end_point":{"name":"结束点","lat":40.753073708949344,"lng":114.88801083187069}}	, paramsData={"dpt_id":44}, contentType=null, expectResult=, createTime=2018-12-17 15:33:15.306, updateTime=2018-12-17 15:33:15.306, apiId=null, note=不传start_point, available=false)
[2018-12-17 15:33:15] - [http-nio-0.0.0.0-8080-exec-3] - com.apitest.service.CaseService.modifyCaseService(CaseService.java:122) - 返回结果: ServerResponse(status=1, message=修改用例成功, data=null)
[2018-12-17 15:33:15] - [http-nio-0.0.0.0-8080-exec-3] - com.apitest.service.CaseService.modifyCaseService(CaseService.java:123) - 线程名: http-nio-0.0.0.0-8080-exec-3,线程id: 52,线程状态: RUNNABLE
[2018-12-17 15:33:15] - [http-nio-0.0.0.0-8080-exec-4] - com.apitest.service.CaseService.queryCaseByApiIdService(CaseService.java:58) - 返回结果: ServerResponse(status=1, message=查询用例成功, data=Page 1 of 3 containing com.apitest.entity.Cases instances)
[2018-12-17 15:33:15] - [http-nio-0.0.0.0-8080-exec-4] - com.apitest.service.CaseService.queryCaseByApiIdService(CaseService.java:59) - 线程名: http-nio-0.0.0.0-8080-exec-4,线程id: 53,线程状态: RUNNABLE
[2018-12-17 15:33:20] - [http-nio-0.0.0.0-8080-exec-5] - com.apitest.service.CaseService.queryOneCaseService(CaseService.java:72) - 返回结果: ServerResponse(status=1, message=查询用例成功, data=Optional[Cases(id=90, jsonData={"cnum":"冀RQ2R31","start_time":1544005500}	, paramsData=, contentType=, expectResult=, createTime=2018-12-11 11:18:19.0, updateTime=2018-12-11 11:18:19.0, apiId=65, note=不传起始点和结束点, available=false)])
[2018-12-17 15:33:20] - [http-nio-0.0.0.0-8080-exec-5] - com.apitest.service.CaseService.queryOneCaseService(CaseService.java:73) - 线程名: http-nio-0.0.0.0-8080-exec-5,线程id: 54,线程状态: RUNNABLE
[2018-12-17 15:33:22] - [http-nio-0.0.0.0-8080-exec-6] - com.apitest.service.CaseService.modifyCaseService(CaseService.java:98) - 参数: Cases(id=null, jsonData={"cnum":"冀RQ2R31","start_time":1544005500}	, paramsData={"dpt_id":44}, contentType=null, expectResult=, createTime=2018-12-17 15:33:22.274, updateTime=2018-12-17 15:33:22.274, apiId=null, note=不传起始点和结束点, available=false)
[2018-12-17 15:33:22] - [http-nio-0.0.0.0-8080-exec-6] - com.apitest.service.CaseService.modifyCaseService(CaseService.java:122) - 返回结果: ServerResponse(status=1, message=修改用例成功, data=null)
[2018-12-17 15:33:22] - [http-nio-0.0.0.0-8080-exec-6] - com.apitest.service.CaseService.modifyCaseService(CaseService.java:123) - 线程名: http-nio-0.0.0.0-8080-exec-6,线程id: 55,线程状态: RUNNABLE
[2018-12-17 15:33:22] - [http-nio-0.0.0.0-8080-exec-7] - com.apitest.service.CaseService.queryCaseByApiIdService(CaseService.java:58) - 返回结果: ServerResponse(status=1, message=查询用例成功, data=Page 1 of 3 containing com.apitest.entity.Cases instances)
[2018-12-17 15:33:22] - [http-nio-0.0.0.0-8080-exec-7] - com.apitest.service.CaseService.queryCaseByApiIdService(CaseService.java:59) - 线程名: http-nio-0.0.0.0-8080-exec-7,线程id: 56,线程状态: RUNNABLE
[2018-12-17 15:33:33] - [http-nio-0.0.0.0-8080-exec-8] - com.apitest.service.CaseService.queryOneCaseService(CaseService.java:72) - 返回结果: ServerResponse(status=1, message=查询用例成功, data=Optional[Cases(id=90, jsonData={"cnum":"冀RQ2R31","start_time":1544005500}	, paramsData={"dpt_id":44}, contentType=, expectResult=, createTime=2018-12-11 11:18:19.0, updateTime=2018-12-17 15:33:22.0, apiId=65, note=不传起始点和结束点, available=false)])
[2018-12-17 15:33:33] - [http-nio-0.0.0.0-8080-exec-8] - com.apitest.service.CaseService.queryOneCaseService(CaseService.java:73) - 线程名: http-nio-0.0.0.0-8080-exec-8,线程id: 57,线程状态: RUNNABLE
[2018-12-17 15:33:35] - [http-nio-0.0.0.0-8080-exec-9] - com.apitest.service.CaseService.queryCaseByApiIdService(CaseService.java:58) - 返回结果: ServerResponse(status=1, message=查询用例成功, data=Page 1 of 3 containing com.apitest.entity.Cases instances)
[2018-12-17 15:33:35] - [http-nio-0.0.0.0-8080-exec-9] - com.apitest.service.CaseService.queryCaseByApiIdService(CaseService.java:59) - 线程名: http-nio-0.0.0.0-8080-exec-9,线程id: 58,线程状态: RUNNABLE
[2018-12-17 15:33:38] - [http-nio-0.0.0.0-8080-exec-10] - com.apitest.service.ApiService.queryPageApiService(ApiService.java:90) - 返回结果: ServerResponse(status=1, message=查询接口成功, data=Page 1 of 5 containing com.apitest.entity.Apis instances)
[2018-12-17 15:33:38] - [http-nio-0.0.0.0-8080-exec-10] - com.apitest.service.ApiService.queryPageApiService(ApiService.java:91) - 线程名: http-nio-0.0.0.0-8080-exec-10,线程id: 59,线程状态: RUNNABLE
[2018-12-17 15:33:39] - [http-nio-0.0.0.0-8080-exec-1] - com.apitest.service.ApiService.queryPageApiService(ApiService.java:90) - 返回结果: ServerResponse(status=1, message=查询接口成功, data=Page 5 of 5 containing com.apitest.entity.Apis instances)
[2018-12-17 15:33:39] - [http-nio-0.0.0.0-8080-exec-1] - com.apitest.service.ApiService.queryPageApiService(ApiService.java:91) - 线程名: http-nio-0.0.0.0-8080-exec-1,线程id: 50,线程状态: RUNNABLE
[2018-12-17 15:33:50] - [http-nio-0.0.0.0-8080-exec-2] - com.apitest.service.CaseService.queryCaseByApiIdService(CaseService.java:58) - 返回结果: ServerResponse(status=1, message=查询用例成功, data=Page 1 of 1 containing com.apitest.entity.Cases instances)
[2018-12-17 15:33:50] - [http-nio-0.0.0.0-8080-exec-2] - com.apitest.service.CaseService.queryCaseByApiIdService(CaseService.java:59) - 线程名: http-nio-0.0.0.0-8080-exec-2,线程id: 51,线程状态: RUNNABLE
[2018-12-17 15:33:52] - [http-nio-0.0.0.0-8080-exec-3] - com.apitest.service.CaseService.queryOneCaseService(CaseService.java:72) - 返回结果: ServerResponse(status=1, message=查询用例成功, data=Optional[Cases(id=85, jsonData=44, paramsData=, contentType=, expectResult=, createTime=2018-12-11 10:28:42.0, updateTime=2018-12-11 10:28:42.0, apiId=64, note=部门44, available=false)])
[2018-12-17 15:33:52] - [http-nio-0.0.0.0-8080-exec-3] - com.apitest.service.CaseService.queryOneCaseService(CaseService.java:73) - 线程名: http-nio-0.0.0.0-8080-exec-3,线程id: 52,线程状态: RUNNABLE
[2018-12-17 15:34:03] - [http-nio-0.0.0.0-8080-exec-4] - com.apitest.service.CaseService.modifyCaseService(CaseService.java:98) - 参数: Cases(id=null, jsonData=, paramsData={"dpt_id":44}, contentType=null, expectResult=, createTime=2018-12-17 15:34:03.784, updateTime=2018-12-17 15:34:03.784, apiId=null, note=部门44, available=true)
[2018-12-17 15:34:03] - [http-nio-0.0.0.0-8080-exec-4] - com.apitest.service.CaseService.modifyCaseService(CaseService.java:122) - 返回结果: ServerResponse(status=1, message=修改用例成功, data=null)
[2018-12-17 15:34:03] - [http-nio-0.0.0.0-8080-exec-4] - com.apitest.service.CaseService.modifyCaseService(CaseService.java:123) - 线程名: http-nio-0.0.0.0-8080-exec-4,线程id: 53,线程状态: RUNNABLE
[2018-12-17 15:34:03] - [http-nio-0.0.0.0-8080-exec-5] - com.apitest.service.CaseService.queryCaseByApiIdService(CaseService.java:58) - 返回结果: ServerResponse(status=1, message=查询用例成功, data=Page 1 of 1 containing com.apitest.entity.Cases instances)
[2018-12-17 15:34:03] - [http-nio-0.0.0.0-8080-exec-5] - com.apitest.service.CaseService.queryCaseByApiIdService(CaseService.java:59) - 线程名: http-nio-0.0.0.0-8080-exec-5,线程id: 54,线程状态: RUNNABLE
[2018-12-17 15:34:22] - [http-nio-0.0.0.0-8080-exec-6] - com.apitest.service.CaseService.addCaseByApiIdService(CaseService.java:148) - 参数: Cases(id=null, jsonData=, paramsData={"dpt_id":999}, contentType=null, expectResult=, createTime=2018-12-17 15:34:22.817, updateTime=2018-12-17 15:34:22.817, apiId=null, note=部门不存在, available=true)
[2018-12-17 15:34:22] - [http-nio-0.0.0.0-8080-exec-6] - com.apitest.service.CaseService.addCaseByApiIdService(CaseService.java:167) - 返回结果: ServerResponse(status=1, message=添加用例成功, data=null)
[2018-12-17 15:34:22] - [http-nio-0.0.0.0-8080-exec-6] - com.apitest.service.CaseService.addCaseByApiIdService(CaseService.java:168) - 线程名: http-nio-0.0.0.0-8080-exec-6,线程id: 55,线程状态: RUNNABLE
[2018-12-17 15:34:22] - [http-nio-0.0.0.0-8080-exec-7] - com.apitest.service.CaseService.queryCaseByApiIdService(CaseService.java:58) - 返回结果: ServerResponse(status=1, message=查询用例成功, data=Page 1 of 1 containing com.apitest.entity.Cases instances)
[2018-12-17 15:34:22] - [http-nio-0.0.0.0-8080-exec-7] - com.apitest.service.CaseService.queryCaseByApiIdService(CaseService.java:59) - 线程名: http-nio-0.0.0.0-8080-exec-7,线程id: 56,线程状态: RUNNABLE
[2018-12-17 15:34:24] - [http-nio-0.0.0.0-8080-exec-8] - com.apitest.service.CaseService.queryOneCaseService(CaseService.java:72) - 返回结果: ServerResponse(status=1, message=查询用例成功, data=Optional[Cases(id=85, jsonData=, paramsData={"dpt_id":44}, contentType=, expectResult=, createTime=2018-12-11 10:28:42.0, updateTime=2018-12-17 15:34:04.0, apiId=64, note=部门44, available=true)])
[2018-12-17 15:34:24] - [http-nio-0.0.0.0-8080-exec-8] - com.apitest.service.CaseService.queryOneCaseService(CaseService.java:73) - 线程名: http-nio-0.0.0.0-8080-exec-8,线程id: 57,线程状态: RUNNABLE
[2018-12-17 15:34:26] - [http-nio-0.0.0.0-8080-exec-9] - com.apitest.service.CaseService.queryCaseByApiIdService(CaseService.java:58) - 返回结果: ServerResponse(status=1, message=查询用例成功, data=Page 1 of 1 containing com.apitest.entity.Cases instances)
[2018-12-17 15:34:26] - [http-nio-0.0.0.0-8080-exec-9] - com.apitest.service.CaseService.queryCaseByApiIdService(CaseService.java:59) - 线程名: http-nio-0.0.0.0-8080-exec-9,线程id: 58,线程状态: RUNNABLE
[2018-12-17 15:34:27] - [http-nio-0.0.0.0-8080-exec-10] - com.apitest.service.ApiService.queryPageApiService(ApiService.java:90) - 返回结果: ServerResponse(status=1, message=查询接口成功, data=Page 1 of 5 containing com.apitest.entity.Apis instances)
[2018-12-17 15:34:27] - [http-nio-0.0.0.0-8080-exec-10] - com.apitest.service.ApiService.queryPageApiService(ApiService.java:91) - 线程名: http-nio-0.0.0.0-8080-exec-10,线程id: 59,线程状态: RUNNABLE
[2018-12-17 15:34:29] - [http-nio-0.0.0.0-8080-exec-1] - com.apitest.service.ApiService.queryPageApiService(ApiService.java:90) - 返回结果: ServerResponse(status=1, message=查询接口成功, data=Page 5 of 5 containing com.apitest.entity.Apis instances)
[2018-12-17 15:34:29] - [http-nio-0.0.0.0-8080-exec-1] - com.apitest.service.ApiService.queryPageApiService(ApiService.java:91) - 线程名: http-nio-0.0.0.0-8080-exec-1,线程id: 50,线程状态: RUNNABLE
[2018-12-17 15:35:23] - [http-nio-0.0.0.0-8080-exec-2] - com.apitest.service.CaseService.queryCaseByApiIdService(CaseService.java:58) - 返回结果: ServerResponse(status=1, message=查询用例成功, data=Page 1 of 3 containing com.apitest.entity.Cases instances)
[2018-12-17 15:35:23] - [http-nio-0.0.0.0-8080-exec-2] - com.apitest.service.CaseService.queryCaseByApiIdService(CaseService.java:59) - 线程名: http-nio-0.0.0.0-8080-exec-2,线程id: 51,线程状态: RUNNABLE
[2018-12-17 15:35:26] - [http-nio-0.0.0.0-8080-exec-3] - com.apitest.service.ApiService.queryPageApiService(ApiService.java:90) - 返回结果: ServerResponse(status=1, message=查询接口成功, data=Page 1 of 5 containing com.apitest.entity.Apis instances)
[2018-12-17 15:35:26] - [http-nio-0.0.0.0-8080-exec-3] - com.apitest.service.ApiService.queryPageApiService(ApiService.java:91) - 线程名: http-nio-0.0.0.0-8080-exec-3,线程id: 52,线程状态: RUNNABLE
[2018-12-17 15:35:28] - [http-nio-0.0.0.0-8080-exec-4] - com.apitest.service.ApiService.queryPageApiService(ApiService.java:90) - 返回结果: ServerResponse(status=1, message=查询接口成功, data=Page 5 of 5 containing com.apitest.entity.Apis instances)
[2018-12-17 15:35:28] - [http-nio-0.0.0.0-8080-exec-4] - com.apitest.service.ApiService.queryPageApiService(ApiService.java:91) - 线程名: http-nio-0.0.0.0-8080-exec-4,线程id: 53,线程状态: RUNNABLE
[2018-12-17 15:35:32] - [http-nio-0.0.0.0-8080-exec-5] - com.apitest.service.ApiService.queryOneApiService(ApiService.java:104) - 返回结果: ServerResponse(status=1, message=查询接口成功, data=Optional[Apis(id=65, url=/departments/44/tasks, createTime=2018-12-11 10:33:55.0, method=post, updateTime=2018-12-11 10:34:04.0, cookie=true, note=添加任务)])
[2018-12-17 15:35:32] - [http-nio-0.0.0.0-8080-exec-5] - com.apitest.service.ApiService.queryOneApiService(ApiService.java:105) - 线程名: http-nio-0.0.0.0-8080-exec-5,线程id: 54,线程状态: RUNNABLE
[2018-12-17 15:35:43] - [http-nio-0.0.0.0-8080-exec-6] - com.apitest.service.ApiService.modifyApiService(ApiService.java:111) - 参数: Apis(id=null, url=/departments/{dpt_id}/tasks, createTime=2018-12-17 15:35:43.084, method=post, updateTime=2018-12-17 15:35:43.084, cookie=true, note=添加任务)
[2018-12-17 15:35:43] - [http-nio-0.0.0.0-8080-exec-6] - com.apitest.service.ApiService.modifyApiService(ApiService.java:146) - 返回结果: ServerResponse(status=1, message=修改接口成功, data=null)
[2018-12-17 15:35:43] - [http-nio-0.0.0.0-8080-exec-6] - com.apitest.service.ApiService.modifyApiService(ApiService.java:147) - 线程名: http-nio-0.0.0.0-8080-exec-6,线程id: 55,线程状态: RUNNABLE
[2018-12-17 15:35:43] - [http-nio-0.0.0.0-8080-exec-7] - com.apitest.service.ApiService.queryPageApiService(ApiService.java:90) - 返回结果: ServerResponse(status=1, message=查询接口成功, data=Page 1 of 5 containing com.apitest.entity.Apis instances)
[2018-12-17 15:35:43] - [http-nio-0.0.0.0-8080-exec-7] - com.apitest.service.ApiService.queryPageApiService(ApiService.java:91) - 线程名: http-nio-0.0.0.0-8080-exec-7,线程id: 56,线程状态: RUNNABLE
[2018-12-17 15:35:45] - [http-nio-0.0.0.0-8080-exec-8] - com.apitest.service.ApiService.queryPageApiService(ApiService.java:90) - 返回结果: ServerResponse(status=1, message=查询接口成功, data=Page 5 of 5 containing com.apitest.entity.Apis instances)
[2018-12-17 15:35:45] - [http-nio-0.0.0.0-8080-exec-8] - com.apitest.service.ApiService.queryPageApiService(ApiService.java:91) - 线程名: http-nio-0.0.0.0-8080-exec-8,线程id: 57,线程状态: RUNNABLE
[2018-12-17 15:36:51] - [http-nio-0.0.0.0-8080-exec-9] - com.apitest.service.ApiService.queryOneApiService(ApiService.java:104) - 返回结果: ServerResponse(status=1, message=查询接口成功, data=Optional[Apis(id=66, url=/departments/44/tasks, createTime=2018-12-11 14:50:05.0, method=put, updateTime=2018-12-11 15:34:56.0, cookie=true, note=更新任务)])
[2018-12-17 15:36:51] - [http-nio-0.0.0.0-8080-exec-9] - com.apitest.service.ApiService.queryOneApiService(ApiService.java:105) - 线程名: http-nio-0.0.0.0-8080-exec-9,线程id: 58,线程状态: RUNNABLE
[2018-12-17 15:36:58] - [http-nio-0.0.0.0-8080-exec-10] - com.apitest.service.ApiService.modifyApiService(ApiService.java:111) - 参数: Apis(id=null, url=/departments/{dpt_id}/tasks, createTime=2018-12-17 15:36:58.678, method=put, updateTime=2018-12-17 15:36:58.678, cookie=true, note=更新任务)
[2018-12-17 15:36:58] - [http-nio-0.0.0.0-8080-exec-10] - com.apitest.service.ApiService.modifyApiService(ApiService.java:146) - 返回结果: ServerResponse(status=1, message=修改接口成功, data=null)
[2018-12-17 15:36:58] - [http-nio-0.0.0.0-8080-exec-10] - com.apitest.service.ApiService.modifyApiService(ApiService.java:147) - 线程名: http-nio-0.0.0.0-8080-exec-10,线程id: 59,线程状态: RUNNABLE
[2018-12-17 15:36:58] - [http-nio-0.0.0.0-8080-exec-1] - com.apitest.service.ApiService.queryPageApiService(ApiService.java:90) - 返回结果: ServerResponse(status=1, message=查询接口成功, data=Page 1 of 5 containing com.apitest.entity.Apis instances)
[2018-12-17 15:36:58] - [http-nio-0.0.0.0-8080-exec-1] - com.apitest.service.ApiService.queryPageApiService(ApiService.java:91) - 线程名: http-nio-0.0.0.0-8080-exec-1,线程id: 50,线程状态: RUNNABLE
[2018-12-17 15:37:01] - [http-nio-0.0.0.0-8080-exec-2] - com.apitest.service.ApiService.queryPageApiService(ApiService.java:90) - 返回结果: ServerResponse(status=1, message=查询接口成功, data=Page 5 of 5 containing com.apitest.entity.Apis instances)
[2018-12-17 15:37:01] - [http-nio-0.0.0.0-8080-exec-2] - com.apitest.service.ApiService.queryPageApiService(ApiService.java:91) - 线程名: http-nio-0.0.0.0-8080-exec-2,线程id: 51,线程状态: RUNNABLE
[2018-12-17 15:37:07] - [http-nio-0.0.0.0-8080-exec-3] - com.apitest.service.ApiService.queryOneApiService(ApiService.java:104) - 返回结果: ServerResponse(status=1, message=查询接口成功, data=Optional[Apis(id=68, url=/departments/44/tasks/alert-conditions, createTime=2018-12-11 16:30:12.0, method=post, updateTime=2018-12-11 16:30:12.0, cookie=true, note=添加告警条件)])
[2018-12-17 15:37:07] - [http-nio-0.0.0.0-8080-exec-3] - com.apitest.service.ApiService.queryOneApiService(ApiService.java:105) - 线程名: http-nio-0.0.0.0-8080-exec-3,线程id: 52,线程状态: RUNNABLE
[2018-12-17 15:37:14] - [http-nio-0.0.0.0-8080-exec-4] - com.apitest.service.ApiService.modifyApiService(ApiService.java:111) - 参数: Apis(id=null, url=/departments/{dpt_id}/tasks/alert-conditions, createTime=2018-12-17 15:37:14.529, method=post, updateTime=2018-12-17 15:37:14.529, cookie=true, note=添加告警条件)
[2018-12-17 15:37:14] - [http-nio-0.0.0.0-8080-exec-4] - com.apitest.service.ApiService.modifyApiService(ApiService.java:146) - 返回结果: ServerResponse(status=1, message=修改接口成功, data=null)
[2018-12-17 15:37:14] - [http-nio-0.0.0.0-8080-exec-4] - com.apitest.service.ApiService.modifyApiService(ApiService.java:147) - 线程名: http-nio-0.0.0.0-8080-exec-4,线程id: 53,线程状态: RUNNABLE
[2018-12-17 15:37:14] - [http-nio-0.0.0.0-8080-exec-5] - com.apitest.service.ApiService.queryPageApiService(ApiService.java:90) - 返回结果: ServerResponse(status=1, message=查询接口成功, data=Page 1 of 5 containing com.apitest.entity.Apis instances)
[2018-12-17 15:37:14] - [http-nio-0.0.0.0-8080-exec-5] - com.apitest.service.ApiService.queryPageApiService(ApiService.java:91) - 线程名: http-nio-0.0.0.0-8080-exec-5,线程id: 54,线程状态: RUNNABLE
[2018-12-17 15:37:16] - [http-nio-0.0.0.0-8080-exec-6] - com.apitest.service.ApiService.queryPageApiService(ApiService.java:90) - 返回结果: ServerResponse(status=1, message=查询接口成功, data=Page 5 of 5 containing com.apitest.entity.Apis instances)
[2018-12-17 15:37:16] - [http-nio-0.0.0.0-8080-exec-6] - com.apitest.service.ApiService.queryPageApiService(ApiService.java:91) - 线程名: http-nio-0.0.0.0-8080-exec-6,线程id: 55,线程状态: RUNNABLE
[2018-12-17 15:37:25] - [http-nio-0.0.0.0-8080-exec-7] - com.apitest.service.ApiService.queryOneApiService(ApiService.java:104) - 返回结果: ServerResponse(status=1, message=查询接口成功, data=Optional[Apis(id=70, url=/reports/departments/44/alerts, createTime=2018-12-12 10:31:48.0, method=post, updateTime=2018-12-12 10:31:48.0, cookie=true, note=告警报表)])
[2018-12-17 15:37:25] - [http-nio-0.0.0.0-8080-exec-7] - com.apitest.service.ApiService.queryOneApiService(ApiService.java:105) - 线程名: http-nio-0.0.0.0-8080-exec-7,线程id: 56,线程状态: RUNNABLE
[2018-12-17 15:37:31] - [http-nio-0.0.0.0-8080-exec-8] - com.apitest.service.ApiService.modifyApiService(ApiService.java:111) - 参数: Apis(id=null, url=/reports/departments/{dpt_id}/alerts, createTime=2018-12-17 15:37:31.737, method=post, updateTime=2018-12-17 15:37:31.737, cookie=true, note=告警报表)
[2018-12-17 15:37:31] - [http-nio-0.0.0.0-8080-exec-8] - com.apitest.service.ApiService.modifyApiService(ApiService.java:146) - 返回结果: ServerResponse(status=1, message=修改接口成功, data=null)
[2018-12-17 15:37:31] - [http-nio-0.0.0.0-8080-exec-8] - com.apitest.service.ApiService.modifyApiService(ApiService.java:147) - 线程名: http-nio-0.0.0.0-8080-exec-8,线程id: 57,线程状态: RUNNABLE
[2018-12-17 15:37:31] - [http-nio-0.0.0.0-8080-exec-9] - com.apitest.service.ApiService.queryPageApiService(ApiService.java:90) - 返回结果: ServerResponse(status=1, message=查询接口成功, data=Page 1 of 5 containing com.apitest.entity.Apis instances)
[2018-12-17 15:37:31] - [http-nio-0.0.0.0-8080-exec-9] - com.apitest.service.ApiService.queryPageApiService(ApiService.java:91) - 线程名: http-nio-0.0.0.0-8080-exec-9,线程id: 58,线程状态: RUNNABLE
[2018-12-17 15:37:33] - [http-nio-0.0.0.0-8080-exec-10] - com.apitest.service.ApiService.queryPageApiService(ApiService.java:90) - 返回结果: ServerResponse(status=1, message=查询接口成功, data=Page 5 of 5 containing com.apitest.entity.Apis instances)
[2018-12-17 15:37:33] - [http-nio-0.0.0.0-8080-exec-10] - com.apitest.service.ApiService.queryPageApiService(ApiService.java:91) - 线程名: http-nio-0.0.0.0-8080-exec-10,线程id: 59,线程状态: RUNNABLE
[2018-12-17 15:37:37] - [http-nio-0.0.0.0-8080-exec-1] - com.apitest.service.CaseService.queryCaseByApiIdService(CaseService.java:58) - 返回结果: ServerResponse(status=1, message=查询用例成功, data=Page 1 of 1 containing com.apitest.entity.Cases instances)
[2018-12-17 15:37:37] - [http-nio-0.0.0.0-8080-exec-1] - com.apitest.service.CaseService.queryCaseByApiIdService(CaseService.java:59) - 线程名: http-nio-0.0.0.0-8080-exec-1,线程id: 50,线程状态: RUNNABLE
[2018-12-17 15:37:38] - [http-nio-0.0.0.0-8080-exec-2] - com.apitest.service.ApiService.queryPageApiService(ApiService.java:90) - 返回结果: ServerResponse(status=1, message=查询接口成功, data=Page 1 of 5 containing com.apitest.entity.Apis instances)
[2018-12-17 15:37:38] - [http-nio-0.0.0.0-8080-exec-2] - com.apitest.service.ApiService.queryPageApiService(ApiService.java:91) - 线程名: http-nio-0.0.0.0-8080-exec-2,线程id: 51,线程状态: RUNNABLE
[2018-12-17 15:37:40] - [http-nio-0.0.0.0-8080-exec-3] - com.apitest.service.ApiService.queryPageApiService(ApiService.java:90) - 返回结果: ServerResponse(status=1, message=查询接口成功, data=Page 5 of 5 containing com.apitest.entity.Apis instances)
[2018-12-17 15:37:40] - [http-nio-0.0.0.0-8080-exec-3] - com.apitest.service.ApiService.queryPageApiService(ApiService.java:91) - 线程名: http-nio-0.0.0.0-8080-exec-3,线程id: 52,线程状态: RUNNABLE
[2018-12-17 15:37:45] - [http-nio-0.0.0.0-8080-exec-4] - com.apitest.service.CaseService.queryCaseByApiIdService(CaseService.java:58) - 返回结果: ServerResponse(status=1, message=查询用例成功, data=Page 1 of 3 containing com.apitest.entity.Cases instances)
[2018-12-17 15:37:45] - [http-nio-0.0.0.0-8080-exec-4] - com.apitest.service.CaseService.queryCaseByApiIdService(CaseService.java:59) - 线程名: http-nio-0.0.0.0-8080-exec-4,线程id: 53,线程状态: RUNNABLE
[2018-12-17 15:37:45] - [http-nio-0.0.0.0-8080-exec-5] - com.apitest.service.ApiService.queryPageApiService(ApiService.java:90) - 返回结果: ServerResponse(status=1, message=查询接口成功, data=Page 1 of 5 containing com.apitest.entity.Apis instances)
[2018-12-17 15:37:45] - [http-nio-0.0.0.0-8080-exec-5] - com.apitest.service.ApiService.queryPageApiService(ApiService.java:91) - 线程名: http-nio-0.0.0.0-8080-exec-5,线程id: 54,线程状态: RUNNABLE
[2018-12-17 15:37:47] - [http-nio-0.0.0.0-8080-exec-6] - com.apitest.service.ApiService.queryPageApiService(ApiService.java:90) - 返回结果: ServerResponse(status=1, message=查询接口成功, data=Page 5 of 5 containing com.apitest.entity.Apis instances)
[2018-12-17 15:37:47] - [http-nio-0.0.0.0-8080-exec-6] - com.apitest.service.ApiService.queryPageApiService(ApiService.java:91) - 线程名: http-nio-0.0.0.0-8080-exec-6,线程id: 55,线程状态: RUNNABLE
[2018-12-17 15:37:50] - [http-nio-0.0.0.0-8080-exec-7] - com.apitest.service.CaseService.queryCaseByApiIdService(CaseService.java:58) - 返回结果: ServerResponse(status=1, message=查询用例成功, data=Page 1 of 1 containing com.apitest.entity.Cases instances)
[2018-12-17 15:37:50] - [http-nio-0.0.0.0-8080-exec-7] - com.apitest.service.CaseService.queryCaseByApiIdService(CaseService.java:59) - 线程名: http-nio-0.0.0.0-8080-exec-7,线程id: 56,线程状态: RUNNABLE
[2018-12-17 15:37:51] - [http-nio-0.0.0.0-8080-exec-8] - com.apitest.service.ApiService.queryPageApiService(ApiService.java:90) - 返回结果: ServerResponse(status=1, message=查询接口成功, data=Page 1 of 5 containing com.apitest.entity.Apis instances)
[2018-12-17 15:37:51] - [http-nio-0.0.0.0-8080-exec-8] - com.apitest.service.ApiService.queryPageApiService(ApiService.java:91) - 线程名: http-nio-0.0.0.0-8080-exec-8,线程id: 57,线程状态: RUNNABLE
[2018-12-17 15:37:55] - [http-nio-0.0.0.0-8080-exec-9] - com.apitest.service.ApiService.queryPageApiService(ApiService.java:90) - 返回结果: ServerResponse(status=1, message=查询接口成功, data=Page 5 of 5 containing com.apitest.entity.Apis instances)
[2018-12-17 15:37:55] - [http-nio-0.0.0.0-8080-exec-9] - com.apitest.service.ApiService.queryPageApiService(ApiService.java:91) - 线程名: http-nio-0.0.0.0-8080-exec-9,线程id: 58,线程状态: RUNNABLE
[2018-12-17 15:38:51] - [http-nio-0.0.0.0-8080-exec-10] - com.apitest.service.CaseService.queryCaseByApiIdService(CaseService.java:58) - 返回结果: ServerResponse(status=1, message=查询用例成功, data=Page 1 of 1 containing com.apitest.entity.Cases instances)
[2018-12-17 15:38:51] - [http-nio-0.0.0.0-8080-exec-10] - com.apitest.service.CaseService.queryCaseByApiIdService(CaseService.java:59) - 线程名: http-nio-0.0.0.0-8080-exec-10,线程id: 59,线程状态: RUNNABLE
[2018-12-17 15:38:55] - [http-nio-0.0.0.0-8080-exec-1] - com.apitest.service.ApiService.queryPageApiService(ApiService.java:90) - 返回结果: ServerResponse(status=1, message=查询接口成功, data=Page 1 of 5 containing com.apitest.entity.Apis instances)
[2018-12-17 15:38:55] - [http-nio-0.0.0.0-8080-exec-1] - com.apitest.service.ApiService.queryPageApiService(ApiService.java:91) - 线程名: http-nio-0.0.0.0-8080-exec-1,线程id: 50,线程状态: RUNNABLE
[2018-12-17 15:51:05] - [Thread-6] - org.springframework.scheduling.concurrent.ExecutorConfigurationSupport.shutdown(ExecutorConfigurationSupport.java:208) - Shutting down ExecutorService 'applicationTaskExecutor'
[2018-12-17 15:51:05] - [Thread-6] - org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.destroy(AbstractEntityManagerFactoryBean.java:597) - Closing JPA EntityManagerFactory for persistence unit 'default'
[2018-12-17 15:51:05] - [Thread-6] - com.zaxxer.hikari.HikariDataSource.close(HikariDataSource.java:350) - HikariPool-1 - Shutdown initiated...
[2018-12-17 15:51:05] - [Thread-6] - com.zaxxer.hikari.HikariDataSource.close(HikariDataSource.java:352) - HikariPool-1 - Shutdown completed.
[2018-12-17 15:51:11] - [main] - org.springframework.boot.StartupInfoLogger.logStarting(StartupInfoLogger.java:50) - Starting ApitestApplication on huangshayangdeMacBook-Pro.local with PID 1049 (/Users/huangshayang/IdeaProjects/SpringBootApiTest/target/classes started by huangshayang in /Users/huangshayang/IdeaProjects/SpringBootApiTest)
[2018-12-17 15:51:11] - [main] - org.springframework.boot.SpringApplication.logStartupProfileInfo(SpringApplication.java:675) - No active profile set, falling back to default profiles: default
[2018-12-17 15:51:12] - [main] - org.springframework.data.repository.config.RepositoryConfigurationDelegate.multipleStoresDetected(RepositoryConfigurationDelegate.java:244) - Multiple Spring Data modules found, entering strict repository configuration mode!
[2018-12-17 15:51:12] - [main] - org.springframework.data.repository.config.RepositoryConfigurationDelegate.registerRepositoriesIn(RepositoryConfigurationDelegate.java:126) - Bootstrapping Spring Data repositories in DEFAULT mode.
[2018-12-17 15:51:12] - [main] - org.springframework.data.repository.config.RepositoryConfigurationDelegate.registerRepositoriesIn(RepositoryConfigurationDelegate.java:182) - Finished Spring Data repository scanning in 105ms. Found 5 repository interfaces.
[2018-12-17 15:51:12] - [main] - org.springframework.data.repository.config.RepositoryConfigurationDelegate.multipleStoresDetected(RepositoryConfigurationDelegate.java:244) - Multiple Spring Data modules found, entering strict repository configuration mode!
[2018-12-17 15:51:12] - [main] - org.springframework.data.repository.config.RepositoryConfigurationDelegate.registerRepositoriesIn(RepositoryConfigurationDelegate.java:126) - Bootstrapping Spring Data repositories in DEFAULT mode.
[2018-12-17 15:51:12] - [main] - org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport.isStrictRepositoryCandidate(RepositoryConfigurationExtensionSupport.java:363) - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.apitest.repository.ApiRepository.
[2018-12-17 15:51:12] - [main] - org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport.isStrictRepositoryCandidate(RepositoryConfigurationExtensionSupport.java:363) - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.apitest.repository.CaseRepository.
[2018-12-17 15:51:12] - [main] - org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport.isStrictRepositoryCandidate(RepositoryConfigurationExtensionSupport.java:363) - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.apitest.repository.LogRepository.
[2018-12-17 15:51:12] - [main] - org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport.isStrictRepositoryCandidate(RepositoryConfigurationExtensionSupport.java:363) - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.apitest.repository.MailRepository.
[2018-12-17 15:51:12] - [main] - org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport.isStrictRepositoryCandidate(RepositoryConfigurationExtensionSupport.java:363) - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.apitest.repository.UserRepository.
[2018-12-17 15:51:12] - [main] - org.springframework.data.repository.config.RepositoryConfigurationDelegate.registerRepositoriesIn(RepositoryConfigurationDelegate.java:182) - Finished Spring Data repository scanning in 16ms. Found 0 repository interfaces.
[2018-12-17 15:51:13] - [main] - org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization(PostProcessorRegistrationDelegate.java:330) - Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$62d7f108] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2018-12-17 15:51:13] - [main] - org.springframework.boot.web.embedded.tomcat.TomcatWebServer.initialize(TomcatWebServer.java:90) - Tomcat initialized with port(s): 8080 (http)
[2018-12-17 15:51:13] - [main] - org.apache.juli.logging.DirectJDKLog.log(DirectJDKLog.java:173) - Initializing ProtocolHandler ["http-nio-0.0.0.0-8080"]
[2018-12-17 15:51:13] - [main] - org.apache.juli.logging.DirectJDKLog.log(DirectJDKLog.java:173) - Starting service [Tomcat]
[2018-12-17 15:51:13] - [main] - org.apache.juli.logging.DirectJDKLog.log(DirectJDKLog.java:173) - Starting Servlet Engine: Apache Tomcat/9.0.12
[2018-12-17 15:51:13] - [main] - org.apache.juli.logging.DirectJDKLog.log(DirectJDKLog.java:173) - The APR based Apache Tomcat Native library which allows optimal performance in production environments was not found on the java.library.path: [/Users/huangshayang/Library/Java/Extensions:/Library/Java/Extensions:/Network/Library/Java/Extensions:/System/Library/Java/Extensions:/usr/lib/java:.]
[2018-12-17 15:51:13] - [main] - org.apache.juli.logging.DirectJDKLog.log(DirectJDKLog.java:173) - Initializing Spring embedded WebApplicationContext
[2018-12-17 15:51:13] - [main] - org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.prepareWebApplicationContext(ServletWebServerApplicationContext.java:285) - Root WebApplicationContext: initialization completed in 2106 ms
[2018-12-17 15:51:13] - [main] - org.springframework.boot.web.servlet.AbstractFilterRegistrationBean.configure(AbstractFilterRegistrationBean.java:248) - Mapping filter: 'characterEncodingFilter' to: [/*]
[2018-12-17 15:51:13] - [main] - org.springframework.boot.web.servlet.AbstractFilterRegistrationBean.configure(AbstractFilterRegistrationBean.java:248) - Mapping filter: 'sessionRepositoryFilter' to: [/*]
[2018-12-17 15:51:13] - [main] - org.springframework.boot.web.servlet.AbstractFilterRegistrationBean.configure(AbstractFilterRegistrationBean.java:248) - Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
[2018-12-17 15:51:13] - [main] - org.springframework.boot.web.servlet.AbstractFilterRegistrationBean.configure(AbstractFilterRegistrationBean.java:248) - Mapping filter: 'formContentFilter' to: [/*]
[2018-12-17 15:51:13] - [main] - org.springframework.boot.web.servlet.AbstractFilterRegistrationBean.configure(AbstractFilterRegistrationBean.java:248) - Mapping filter: 'requestContextFilter' to: [/*]
[2018-12-17 15:51:13] - [main] - org.springframework.boot.web.servlet.ServletRegistrationBean.addRegistration(ServletRegistrationBean.java:186) - Servlet dispatcherServlet mapped to [/]
[2018-12-17 15:51:14] - [main] - com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:110) - HikariPool-1 - Starting...
[2018-12-17 15:51:14] - [main] - com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:123) - HikariPool-1 - Start completed.
[2018-12-17 15:51:14] - [main] - org.hibernate.Version.logVersion(Version.java:46) - HHH000412: Hibernate Core {5.3.7.Final}
[2018-12-17 15:51:14] - [main] - org.hibernate.cfg.Environment.<clinit>(Environment.java:213) - HHH000206: hibernate.properties not found
[2018-12-17 15:51:14] - [main] - org.hibernate.annotations.common.reflection.java.JavaReflectionManager.<clinit>(JavaReflectionManager.java:49) - HCANN000001: Hibernate Commons Annotations {5.0.4.Final}
[2018-12-17 15:51:14] - [main] - org.hibernate.dialect.Dialect.<init>(Dialect.java:157) - HHH000400: Using dialect: org.hibernate.dialect.MySQL5Dialect
[2018-12-17 15:51:15] - [main] - org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.buildNativeEntityManagerFactory(AbstractEntityManagerFactoryBean.java:415) - Initialized JPA EntityManagerFactory for persistence unit 'default'
[2018-12-17 15:51:15] - [main] - org.hibernate.hql.internal.QueryTranslatorFactoryInitiator.initiateService(QueryTranslatorFactoryInitiator.java:47) - HHH000397: Using ASTQueryTranslatorFactory
[2018-12-17 15:51:16] - [main] - io.netty.util.internal.logging.Slf4JLogger.info(Slf4JLogger.java:101) - Starting without optional epoll library
[2018-12-17 15:51:16] - [main] - io.netty.util.internal.logging.Slf4JLogger.info(Slf4JLogger.java:101) - Starting without optional kqueue library
[2018-12-17 15:51:16] - [main] - org.springframework.scheduling.concurrent.ExecutorConfigurationSupport.initialize(ExecutorConfigurationSupport.java:171) - Initializing ExecutorService 'applicationTaskExecutor'
[2018-12-17 15:51:17] - [main] - org.springframework.scheduling.annotation.ScheduledAnnotationBeanPostProcessor.finishRegistration(ScheduledAnnotationBeanPostProcessor.java:295) - No TaskScheduler/ScheduledExecutorService bean found for scheduled processing
[2018-12-17 15:51:17] - [main] - org.apache.juli.logging.DirectJDKLog.log(DirectJDKLog.java:173) - Starting ProtocolHandler ["http-nio-0.0.0.0-8080"]
[2018-12-17 15:51:17] - [main] - org.apache.juli.logging.DirectJDKLog.log(DirectJDKLog.java:173) - Using a shared selector for servlet write/read
[2018-12-17 15:51:17] - [main] - org.springframework.boot.web.embedded.tomcat.TomcatWebServer.start(TomcatWebServer.java:204) - Tomcat started on port(s): 8080 (http) with context path ''
[2018-12-17 15:51:17] - [main] - org.springframework.boot.StartupInfoLogger.logStarted(StartupInfoLogger.java:59) - Started ApitestApplication in 6.045 seconds (JVM running for 7.379)
[2018-12-17 15:51:24] - [http-nio-0.0.0.0-8080-exec-1] - org.apache.juli.logging.DirectJDKLog.log(DirectJDKLog.java:173) - Initializing Spring DispatcherServlet 'dispatcherServlet'
[2018-12-17 15:51:24] - [http-nio-0.0.0.0-8080-exec-1] - org.springframework.web.servlet.FrameworkServlet.initServletBean(FrameworkServlet.java:521) - Initializing Servlet 'dispatcherServlet'
[2018-12-17 15:51:24] - [http-nio-0.0.0.0-8080-exec-1] - org.springframework.web.servlet.FrameworkServlet.initServletBean(FrameworkServlet.java:543) - Completed initialization in 11 ms
[2018-12-17 15:51:30] - [http-nio-0.0.0.0-8080-exec-2] - com.apitest.service.LoginService.loginService(LoginService.java:38) - 用户名: admin
[2018-12-17 15:51:30] - [http-nio-0.0.0.0-8080-exec-2] - com.apitest.service.LoginService.loginService(LoginService.java:39) - 密码: 123456
[2018-12-17 15:51:31] - [http-nio-0.0.0.0-8080-exec-2] - com.apitest.service.LoginService.loginService(LoginService.java:61) - 返回结果: ServerResponse(status=1, message=登录成功, data=null)
[2018-12-17 15:51:31] - [http-nio-0.0.0.0-8080-exec-2] - com.apitest.service.LoginService.loginService(LoginService.java:62) - 线程名: http-nio-0.0.0.0-8080-exec-2,线程id: 52,线程状态: RUNNABLE
[2018-12-17 15:51:31] - [http-nio-0.0.0.0-8080-exec-3] - com.apitest.service.ApiService.queryPageApiService(ApiService.java:90) - 返回结果: ServerResponse(status=1, message=查询接口成功, data=Page 1 of 5 containing com.apitest.entity.Apis instances)
[2018-12-17 15:51:31] - [http-nio-0.0.0.0-8080-exec-3] - com.apitest.service.ApiService.queryPageApiService(ApiService.java:91) - 线程名: http-nio-0.0.0.0-8080-exec-3,线程id: 53,线程状态: RUNNABLE
[2018-12-17 15:51:32] - [http-nio-0.0.0.0-8080-exec-4] - com.apitest.service.LogService.queryPageLogByApiIdService(LogService.java:46) - 返回结果: ServerResponse(status=1, message=日志查询成功, data=Page 1 of 1 containing com.apitest.entity.Logs instances)
[2018-12-17 15:51:32] - [http-nio-0.0.0.0-8080-exec-4] - com.apitest.service.LogService.queryPageLogByApiIdService(LogService.java:47) - 线程名: http-nio-0.0.0.0-8080-exec-4,线程id: 54,线程状态: RUNNABLE
[2018-12-17 15:51:37] - [http-nio-0.0.0.0-8080-exec-5] - com.apitest.service.ApiService.queryPageApiService(ApiService.java:90) - 返回结果: ServerResponse(status=1, message=查询接口成功, data=Page 1 of 5 containing com.apitest.entity.Apis instances)
[2018-12-17 15:51:37] - [http-nio-0.0.0.0-8080-exec-5] - com.apitest.service.ApiService.queryPageApiService(ApiService.java:91) - 线程名: http-nio-0.0.0.0-8080-exec-5,线程id: 55,线程状态: RUNNABLE
[2018-12-17 15:51:38] - [http-nio-0.0.0.0-8080-exec-6] - com.apitest.service.CaseService.queryCaseByApiIdService(CaseService.java:58) - 返回结果: ServerResponse(status=1, message=查询用例成功, data=Page 1 of 2 containing com.apitest.entity.Cases instances)
[2018-12-17 15:51:38] - [http-nio-0.0.0.0-8080-exec-6] - com.apitest.service.CaseService.queryCaseByApiIdService(CaseService.java:59) - 线程名: http-nio-0.0.0.0-8080-exec-6,线程id: 56,线程状态: RUNNABLE
[2018-12-17 15:51:40] - [http-nio-0.0.0.0-8080-exec-7] - com.apitest.service.CaseService.queryOneCaseService(CaseService.java:72) - 返回结果: ServerResponse(status=1, message=查询用例成功, data=Optional[Cases(id=2, jsonData={"username":"16602811927","password":"1234567"}, paramsData=, contentType=, expectResult=, createTime=2018-10-11 00:00:00.0, updateTime=2018-12-14 16:06:40.0, apiId=1, note=username存在，但password错误, available=false)])
[2018-12-17 15:51:40] - [http-nio-0.0.0.0-8080-exec-7] - com.apitest.service.CaseService.queryOneCaseService(CaseService.java:73) - 线程名: http-nio-0.0.0.0-8080-exec-7,线程id: 57,线程状态: RUNNABLE
[2018-12-17 15:51:42] - [http-nio-0.0.0.0-8080-exec-8] - com.apitest.service.CaseService.modifyCaseService(CaseService.java:98) - 参数: Cases(id=null, jsonData={"username":"16602811927","password":"1234567"}, paramsData=, contentType=null, expectResult=, createTime=2018-12-17 15:51:42.579, updateTime=2018-12-17 15:51:42.579, apiId=null, note=username存在，但password错误, available=true)
[2018-12-17 15:51:42] - [http-nio-0.0.0.0-8080-exec-8] - com.apitest.service.CaseService.modifyCaseService(CaseService.java:122) - 返回结果: ServerResponse(status=1, message=修改用例成功, data=null)
[2018-12-17 15:51:42] - [http-nio-0.0.0.0-8080-exec-8] - com.apitest.service.CaseService.modifyCaseService(CaseService.java:123) - 线程名: http-nio-0.0.0.0-8080-exec-8,线程id: 58,线程状态: RUNNABLE
[2018-12-17 15:51:42] - [http-nio-0.0.0.0-8080-exec-9] - com.apitest.service.CaseService.queryCaseByApiIdService(CaseService.java:58) - 返回结果: ServerResponse(status=1, message=查询用例成功, data=Page 1 of 2 containing com.apitest.entity.Cases instances)
[2018-12-17 15:51:42] - [http-nio-0.0.0.0-8080-exec-9] - com.apitest.service.CaseService.queryCaseByApiIdService(CaseService.java:59) - 线程名: http-nio-0.0.0.0-8080-exec-9,线程id: 59,线程状态: RUNNABLE
[2018-12-17 15:51:44] - [http-nio-0.0.0.0-8080-exec-10] - com.apitest.service.CaseService.queryOneCaseService(CaseService.java:72) - 返回结果: ServerResponse(status=1, message=查询用例成功, data=Optional[Cases(id=3, jsonData={"username":"16602811927","password":"123"}, paramsData=, contentType=, expectResult=, createTime=2018-10-11 00:00:00.0, updateTime=2018-12-14 16:06:43.0, apiId=1, note=密码位数小于6位, available=false)])
[2018-12-17 15:51:44] - [http-nio-0.0.0.0-8080-exec-10] - com.apitest.service.CaseService.queryOneCaseService(CaseService.java:73) - 线程名: http-nio-0.0.0.0-8080-exec-10,线程id: 60,线程状态: RUNNABLE
[2018-12-17 15:51:46] - [http-nio-0.0.0.0-8080-exec-1] - com.apitest.service.CaseService.modifyCaseService(CaseService.java:98) - 参数: Cases(id=null, jsonData={"username":"16602811927","password":"123"}, paramsData=, contentType=null, expectResult=, createTime=2018-12-17 15:51:46.711, updateTime=2018-12-17 15:51:46.711, apiId=null, note=密码位数小于6位, available=true)
[2018-12-17 15:51:46] - [http-nio-0.0.0.0-8080-exec-1] - com.apitest.service.CaseService.modifyCaseService(CaseService.java:122) - 返回结果: ServerResponse(status=1, message=修改用例成功, data=null)
[2018-12-17 15:51:46] - [http-nio-0.0.0.0-8080-exec-1] - com.apitest.service.CaseService.modifyCaseService(CaseService.java:123) - 线程名: http-nio-0.0.0.0-8080-exec-1,线程id: 51,线程状态: RUNNABLE
[2018-12-17 15:51:46] - [http-nio-0.0.0.0-8080-exec-2] - com.apitest.service.CaseService.queryCaseByApiIdService(CaseService.java:58) - 返回结果: ServerResponse(status=1, message=查询用例成功, data=Page 1 of 2 containing com.apitest.entity.Cases instances)
[2018-12-17 15:51:46] - [http-nio-0.0.0.0-8080-exec-2] - com.apitest.service.CaseService.queryCaseByApiIdService(CaseService.java:59) - 线程名: http-nio-0.0.0.0-8080-exec-2,线程id: 52,线程状态: RUNNABLE
[2018-12-17 15:51:48] - [http-nio-0.0.0.0-8080-exec-3] - com.apitest.service.ApiService.queryPageApiService(ApiService.java:90) - 返回结果: ServerResponse(status=1, message=查询接口成功, data=Page 1 of 5 containing com.apitest.entity.Apis instances)
[2018-12-17 15:51:48] - [http-nio-0.0.0.0-8080-exec-3] - com.apitest.service.ApiService.queryPageApiService(ApiService.java:91) - 线程名: http-nio-0.0.0.0-8080-exec-3,线程id: 53,线程状态: RUNNABLE
[2018-12-17 15:51:49] - [http-nio-0.0.0.0-8080-exec-4] - com.apitest.service.ApiService.execApiService(ApiService.java:191) - 返回结果: ServerResponse(status=1, message=http请求执行成功, data=null)
[2018-12-17 15:51:49] - [http-nio-0.0.0.0-8080-exec-4] - com.apitest.service.ApiService.execApiService(ApiService.java:192) - 线程名: http-nio-0.0.0.0-8080-exec-4,线程id: 54,线程状态: RUNNABLE
[2018-12-17 15:51:49] - [Thread-7] - com.apitest.service.ApiService.apiCaseExecByLock(ApiService.java:225) - 线程名: Thread-7,线程id: 74,线程进入
[2018-12-17 15:51:49] - [Thread-9] - com.apitest.service.ApiService.apiCaseExecByLock(ApiService.java:225) - 线程名: Thread-9,线程id: 76,线程进入
[2018-12-17 15:51:49] - [Thread-8] - com.apitest.service.ApiService.apiCaseExecByLock(ApiService.java:225) - 线程名: Thread-8,线程id: 75,线程进入
[2018-12-17 15:51:49] - [Thread-7] - com.apitest.service.ApiService.apiCaseExecByLock(ApiService.java:228) - 线程名: Thread-7,线程id: 74,加锁成功
[2018-12-17 15:51:49] - [Thread-7] - com.apitest.rest.RestRequest.doPost(RestRequest.java:48) - uri: /login
[2018-12-17 15:51:49] - [Thread-7] - com.apitest.rest.RestRequest.doPost(RestRequest.java:49) - jsonData: {"username":"16602811927","password":"d7190eb194ff9494625514b6d178c87f99c5973e28c398969d2233f2960a573e"}
[2018-12-17 15:51:49] - [Thread-7] - com.apitest.rest.RestRequest.doPost(RestRequest.java:50) - paramsData: 
[2018-12-17 15:51:51] - [http-nio-0.0.0.0-8080-exec-5] - com.apitest.service.LogService.queryPageLogByApiIdService(LogService.java:46) - 返回结果: ServerResponse(status=1, message=日志查询成功, data=Page 1 of 1 containing com.apitest.entity.Logs instances)
[2018-12-17 15:51:51] - [http-nio-0.0.0.0-8080-exec-5] - com.apitest.service.LogService.queryPageLogByApiIdService(LogService.java:47) - 线程名: http-nio-0.0.0.0-8080-exec-5,线程id: 55,线程状态: RUNNABLE
[2018-12-17 15:55:15] - [Thread-6] - org.springframework.scheduling.concurrent.ExecutorConfigurationSupport.shutdown(ExecutorConfigurationSupport.java:208) - Shutting down ExecutorService 'applicationTaskExecutor'
[2018-12-17 15:55:15] - [Thread-6] - org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.destroy(AbstractEntityManagerFactoryBean.java:597) - Closing JPA EntityManagerFactory for persistence unit 'default'
[2018-12-17 15:55:15] - [Thread-6] - com.zaxxer.hikari.HikariDataSource.close(HikariDataSource.java:350) - HikariPool-1 - Shutdown initiated...
[2018-12-17 15:55:15] - [Thread-6] - com.zaxxer.hikari.HikariDataSource.close(HikariDataSource.java:352) - HikariPool-1 - Shutdown completed.
[2018-12-17 15:55:22] - [main] - org.springframework.boot.StartupInfoLogger.logStarting(StartupInfoLogger.java:50) - Starting ApitestApplication on huangshayangdeMacBook-Pro.local with PID 1063 (/Users/huangshayang/IdeaProjects/SpringBootApiTest/target/classes started by huangshayang in /Users/huangshayang/IdeaProjects/SpringBootApiTest)
[2018-12-17 15:55:22] - [main] - org.springframework.boot.SpringApplication.logStartupProfileInfo(SpringApplication.java:675) - No active profile set, falling back to default profiles: default
[2018-12-17 15:55:23] - [main] - org.springframework.data.repository.config.RepositoryConfigurationDelegate.multipleStoresDetected(RepositoryConfigurationDelegate.java:244) - Multiple Spring Data modules found, entering strict repository configuration mode!
[2018-12-17 15:55:23] - [main] - org.springframework.data.repository.config.RepositoryConfigurationDelegate.registerRepositoriesIn(RepositoryConfigurationDelegate.java:126) - Bootstrapping Spring Data repositories in DEFAULT mode.
[2018-12-17 15:55:23] - [main] - org.springframework.data.repository.config.RepositoryConfigurationDelegate.registerRepositoriesIn(RepositoryConfigurationDelegate.java:182) - Finished Spring Data repository scanning in 116ms. Found 5 repository interfaces.
[2018-12-17 15:55:23] - [main] - org.springframework.data.repository.config.RepositoryConfigurationDelegate.multipleStoresDetected(RepositoryConfigurationDelegate.java:244) - Multiple Spring Data modules found, entering strict repository configuration mode!
[2018-12-17 15:55:23] - [main] - org.springframework.data.repository.config.RepositoryConfigurationDelegate.registerRepositoriesIn(RepositoryConfigurationDelegate.java:126) - Bootstrapping Spring Data repositories in DEFAULT mode.
[2018-12-17 15:55:23] - [main] - org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport.isStrictRepositoryCandidate(RepositoryConfigurationExtensionSupport.java:363) - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.apitest.repository.ApiRepository.
[2018-12-17 15:55:23] - [main] - org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport.isStrictRepositoryCandidate(RepositoryConfigurationExtensionSupport.java:363) - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.apitest.repository.CaseRepository.
[2018-12-17 15:55:23] - [main] - org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport.isStrictRepositoryCandidate(RepositoryConfigurationExtensionSupport.java:363) - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.apitest.repository.LogRepository.
[2018-12-17 15:55:23] - [main] - org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport.isStrictRepositoryCandidate(RepositoryConfigurationExtensionSupport.java:363) - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.apitest.repository.MailRepository.
[2018-12-17 15:55:23] - [main] - org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport.isStrictRepositoryCandidate(RepositoryConfigurationExtensionSupport.java:363) - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.apitest.repository.UserRepository.
[2018-12-17 15:55:23] - [main] - org.springframework.data.repository.config.RepositoryConfigurationDelegate.registerRepositoriesIn(RepositoryConfigurationDelegate.java:182) - Finished Spring Data repository scanning in 18ms. Found 0 repository interfaces.
[2018-12-17 15:55:24] - [main] - org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization(PostProcessorRegistrationDelegate.java:330) - Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$7bebefd6] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2018-12-17 15:55:24] - [main] - org.springframework.boot.web.embedded.tomcat.TomcatWebServer.initialize(TomcatWebServer.java:90) - Tomcat initialized with port(s): 8080 (http)
[2018-12-17 15:55:24] - [main] - org.apache.juli.logging.DirectJDKLog.log(DirectJDKLog.java:173) - Initializing ProtocolHandler ["http-nio-0.0.0.0-8080"]
[2018-12-17 15:55:24] - [main] - org.apache.juli.logging.DirectJDKLog.log(DirectJDKLog.java:173) - Starting service [Tomcat]
[2018-12-17 15:55:24] - [main] - org.apache.juli.logging.DirectJDKLog.log(DirectJDKLog.java:173) - Starting Servlet Engine: Apache Tomcat/9.0.12
[2018-12-17 15:55:24] - [main] - org.apache.juli.logging.DirectJDKLog.log(DirectJDKLog.java:173) - The APR based Apache Tomcat Native library which allows optimal performance in production environments was not found on the java.library.path: [/Users/huangshayang/Library/Java/Extensions:/Library/Java/Extensions:/Network/Library/Java/Extensions:/System/Library/Java/Extensions:/usr/lib/java:.]
[2018-12-17 15:55:24] - [main] - org.apache.juli.logging.DirectJDKLog.log(DirectJDKLog.java:173) - Initializing Spring embedded WebApplicationContext
[2018-12-17 15:55:24] - [main] - org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.prepareWebApplicationContext(ServletWebServerApplicationContext.java:285) - Root WebApplicationContext: initialization completed in 2026 ms
[2018-12-17 15:55:24] - [main] - org.springframework.boot.web.servlet.AbstractFilterRegistrationBean.configure(AbstractFilterRegistrationBean.java:248) - Mapping filter: 'characterEncodingFilter' to: [/*]
[2018-12-17 15:55:24] - [main] - org.springframework.boot.web.servlet.AbstractFilterRegistrationBean.configure(AbstractFilterRegistrationBean.java:248) - Mapping filter: 'sessionRepositoryFilter' to: [/*]
[2018-12-17 15:55:24] - [main] - org.springframework.boot.web.servlet.AbstractFilterRegistrationBean.configure(AbstractFilterRegistrationBean.java:248) - Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
[2018-12-17 15:55:24] - [main] - org.springframework.boot.web.servlet.AbstractFilterRegistrationBean.configure(AbstractFilterRegistrationBean.java:248) - Mapping filter: 'formContentFilter' to: [/*]
[2018-12-17 15:55:24] - [main] - org.springframework.boot.web.servlet.AbstractFilterRegistrationBean.configure(AbstractFilterRegistrationBean.java:248) - Mapping filter: 'requestContextFilter' to: [/*]
[2018-12-17 15:55:24] - [main] - org.springframework.boot.web.servlet.ServletRegistrationBean.addRegistration(ServletRegistrationBean.java:186) - Servlet dispatcherServlet mapped to [/]
[2018-12-17 15:55:25] - [main] - com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:110) - HikariPool-1 - Starting...
[2018-12-17 15:55:25] - [main] - com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:123) - HikariPool-1 - Start completed.
[2018-12-17 15:55:25] - [main] - org.hibernate.Version.logVersion(Version.java:46) - HHH000412: Hibernate Core {5.3.7.Final}
[2018-12-17 15:55:25] - [main] - org.hibernate.cfg.Environment.<clinit>(Environment.java:213) - HHH000206: hibernate.properties not found
[2018-12-17 15:55:25] - [main] - org.hibernate.annotations.common.reflection.java.JavaReflectionManager.<clinit>(JavaReflectionManager.java:49) - HCANN000001: Hibernate Commons Annotations {5.0.4.Final}
[2018-12-17 15:55:25] - [main] - org.hibernate.dialect.Dialect.<init>(Dialect.java:157) - HHH000400: Using dialect: org.hibernate.dialect.MySQL5Dialect
[2018-12-17 15:55:26] - [main] - org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.buildNativeEntityManagerFactory(AbstractEntityManagerFactoryBean.java:415) - Initialized JPA EntityManagerFactory for persistence unit 'default'
[2018-12-17 15:55:26] - [main] - org.hibernate.hql.internal.QueryTranslatorFactoryInitiator.initiateService(QueryTranslatorFactoryInitiator.java:47) - HHH000397: Using ASTQueryTranslatorFactory
[2018-12-17 15:55:26] - [main] - io.netty.util.internal.logging.Slf4JLogger.info(Slf4JLogger.java:101) - Starting without optional epoll library
[2018-12-17 15:55:26] - [main] - io.netty.util.internal.logging.Slf4JLogger.info(Slf4JLogger.java:101) - Starting without optional kqueue library
[2018-12-17 15:55:27] - [main] - org.springframework.scheduling.concurrent.ExecutorConfigurationSupport.initialize(ExecutorConfigurationSupport.java:171) - Initializing ExecutorService 'applicationTaskExecutor'
[2018-12-17 15:55:27] - [main] - org.springframework.scheduling.annotation.ScheduledAnnotationBeanPostProcessor.finishRegistration(ScheduledAnnotationBeanPostProcessor.java:295) - No TaskScheduler/ScheduledExecutorService bean found for scheduled processing
[2018-12-17 15:55:27] - [main] - org.apache.juli.logging.DirectJDKLog.log(DirectJDKLog.java:173) - Starting ProtocolHandler ["http-nio-0.0.0.0-8080"]
[2018-12-17 15:55:27] - [main] - org.apache.juli.logging.DirectJDKLog.log(DirectJDKLog.java:173) - Using a shared selector for servlet write/read
[2018-12-17 15:55:27] - [main] - org.springframework.boot.web.embedded.tomcat.TomcatWebServer.start(TomcatWebServer.java:204) - Tomcat started on port(s): 8080 (http) with context path ''
[2018-12-17 15:55:27] - [main] - org.springframework.boot.StartupInfoLogger.logStarted(StartupInfoLogger.java:59) - Started ApitestApplication in 5.67 seconds (JVM running for 6.997)
[2018-12-17 15:55:43] - [http-nio-0.0.0.0-8080-exec-1] - org.apache.juli.logging.DirectJDKLog.log(DirectJDKLog.java:173) - Initializing Spring DispatcherServlet 'dispatcherServlet'
[2018-12-17 15:55:43] - [http-nio-0.0.0.0-8080-exec-1] - org.springframework.web.servlet.FrameworkServlet.initServletBean(FrameworkServlet.java:521) - Initializing Servlet 'dispatcherServlet'
[2018-12-17 15:55:43] - [http-nio-0.0.0.0-8080-exec-1] - org.springframework.web.servlet.FrameworkServlet.initServletBean(FrameworkServlet.java:543) - Completed initialization in 10 ms
[2018-12-17 15:55:43] - [http-nio-0.0.0.0-8080-exec-1] - com.apitest.service.ApiService.queryPageApiService(ApiService.java:90) - 返回结果: ServerResponse(status=1, message=查询接口成功, data=Page 1 of 5 containing com.apitest.entity.Apis instances)
[2018-12-17 15:55:43] - [http-nio-0.0.0.0-8080-exec-1] - com.apitest.service.ApiService.queryPageApiService(ApiService.java:91) - 线程名: http-nio-0.0.0.0-8080-exec-1,线程id: 50,线程状态: RUNNABLE
[2018-12-17 15:55:44] - [http-nio-0.0.0.0-8080-exec-2] - com.apitest.service.ApiService.execApiService(ApiService.java:191) - 返回结果: ServerResponse(status=1, message=http请求执行成功, data=null)
[2018-12-17 15:55:44] - [http-nio-0.0.0.0-8080-exec-2] - com.apitest.service.ApiService.execApiService(ApiService.java:192) - 线程名: http-nio-0.0.0.0-8080-exec-2,线程id: 51,线程状态: RUNNABLE
[2018-12-17 15:55:44] - [Thread-8] - com.apitest.service.ApiService.apiCaseExecByLock(ApiService.java:225) - 线程名: Thread-8,线程id: 75,线程进入
[2018-12-17 15:55:44] - [Thread-9] - com.apitest.service.ApiService.apiCaseExecByLock(ApiService.java:225) - 线程名: Thread-9,线程id: 76,线程进入
[2018-12-17 15:55:44] - [Thread-7] - com.apitest.service.ApiService.apiCaseExecByLock(ApiService.java:225) - 线程名: Thread-7,线程id: 74,线程进入
[2018-12-17 15:55:44] - [Thread-8] - com.apitest.service.ApiService.apiCaseExecByLock(ApiService.java:228) - 线程名: Thread-8,线程id: 75,加锁成功
[2018-12-17 15:55:45] - [Thread-8] - com.apitest.rest.RestRequest.doPost(RestRequest.java:51) - uri: /login
[2018-12-17 15:55:45] - [Thread-8] - com.apitest.rest.RestRequest.doPost(RestRequest.java:52) - jsonData: {"username":"16602811927","password":"1234567"}
[2018-12-17 15:55:45] - [Thread-8] - com.apitest.rest.RestRequest.doPost(RestRequest.java:53) - paramsData: 
[2018-12-17 15:55:46] - [http-nio-0.0.0.0-8080-exec-3] - com.apitest.service.LogService.queryPageLogByApiIdService(LogService.java:46) - 返回结果: ServerResponse(status=1, message=日志查询成功, data=Page 1 of 1 containing com.apitest.entity.Logs instances)
[2018-12-17 15:55:46] - [http-nio-0.0.0.0-8080-exec-3] - com.apitest.service.LogService.queryPageLogByApiIdService(LogService.java:47) - 线程名: http-nio-0.0.0.0-8080-exec-3,线程id: 52,线程状态: RUNNABLE
