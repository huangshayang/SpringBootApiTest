[2019-04-17 15:57:08] - [main] - org.springframework.boot.StartupInfoLogger.logStarting(StartupInfoLogger.java:50) - Starting ApitestApplication on huangshayangdeMacBook-Pro.local with PID 31236 (/Users/huangshayang/IdeaProjects/SpringBootApiTest/target/classes started by huangshayang in /Users/huangshayang/IdeaProjects/SpringBootApiTest)
[2019-04-17 15:57:08] - [main] - org.springframework.boot.SpringApplication.logStartupProfileInfo(SpringApplication.java:675) - No active profile set, falling back to default profiles: default
[2019-04-17 15:57:10] - [main] - org.springframework.data.repository.config.RepositoryConfigurationDelegate.multipleStoresDetected(RepositoryConfigurationDelegate.java:244) - Multiple Spring Data modules found, entering strict repository configuration mode!
[2019-04-17 15:57:10] - [main] - org.springframework.data.repository.config.RepositoryConfigurationDelegate.registerRepositoriesIn(RepositoryConfigurationDelegate.java:126) - Bootstrapping Spring Data repositories in DEFAULT mode.
[2019-04-17 15:57:10] - [main] - org.springframework.data.repository.config.RepositoryConfigurationDelegate.registerRepositoriesIn(RepositoryConfigurationDelegate.java:182) - Finished Spring Data repository scanning in 30ms. Found 0 repository interfaces.
[2019-04-17 15:57:11] - [main] - org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization(PostProcessorRegistrationDelegate.java:330) - Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$959016ef] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2019-04-17 15:57:11] - [main] - org.springframework.boot.web.embedded.tomcat.TomcatWebServer.initialize(TomcatWebServer.java:90) - Tomcat initialized with port(s): 8080 (http)
[2019-04-17 15:57:11] - [main] - org.apache.juli.logging.DirectJDKLog.log(DirectJDKLog.java:173) - Initializing ProtocolHandler ["http-nio-0.0.0.0-8080"]
[2019-04-17 15:57:11] - [main] - org.apache.juli.logging.DirectJDKLog.log(DirectJDKLog.java:173) - Starting service [Tomcat]
[2019-04-17 15:57:11] - [main] - org.apache.juli.logging.DirectJDKLog.log(DirectJDKLog.java:173) - Starting Servlet engine: [Apache Tomcat/9.0.17]
[2019-04-17 15:57:11] - [main] - org.apache.juli.logging.DirectJDKLog.log(DirectJDKLog.java:173) - Initializing Spring embedded WebApplicationContext
[2019-04-17 15:57:11] - [main] - org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.prepareWebApplicationContext(ServletWebServerApplicationContext.java:296) - Root WebApplicationContext: initialization completed in 2786 ms
[2019-04-17 15:57:12] - [main] - org.quartz.impl.StdSchedulerFactory.instantiate(StdSchedulerFactory.java:1208) - Using default implementation for ThreadExecutor
[2019-04-17 15:57:12] - [main] - org.quartz.simpl.SimpleThreadPool.initialize(SimpleThreadPool.java:268) - Job execution threads will use class loader of thread: main
[2019-04-17 15:57:12] - [main] - org.quartz.core.SchedulerSignalerImpl.<init>(SchedulerSignalerImpl.java:61) - Initialized Scheduler Signaller of type: class org.quartz.core.SchedulerSignalerImpl
[2019-04-17 15:57:12] - [main] - org.quartz.core.QuartzScheduler.<init>(QuartzScheduler.java:229) - Quartz Scheduler v.2.3.0 created.
[2019-04-17 15:57:12] - [main] - org.quartz.simpl.RAMJobStore.initialize(RAMJobStore.java:155) - RAMJobStore initialized.
[2019-04-17 15:57:12] - [main] - org.quartz.core.QuartzScheduler.initialize(QuartzScheduler.java:294) - Scheduler meta-data: Quartz Scheduler (v2.3.0) 'DefaultQuartzScheduler' with instanceId 'NON_CLUSTERED'
  Scheduler class: 'org.quartz.core.QuartzScheduler' - running locally.
  NOT STARTED.
  Currently in standby mode.
  Number of jobs executed: 0
  Using thread pool 'org.quartz.simpl.SimpleThreadPool' - with 10 threads.
  Using job-store 'org.quartz.simpl.RAMJobStore' - which does not support persistence. and is not clustered.

[2019-04-17 15:57:12] - [main] - org.quartz.impl.StdSchedulerFactory.instantiate(StdSchedulerFactory.java:1362) - Quartz scheduler 'DefaultQuartzScheduler' initialized from default resource file in Quartz package: 'quartz.properties'
[2019-04-17 15:57:12] - [main] - org.quartz.impl.StdSchedulerFactory.instantiate(StdSchedulerFactory.java:1366) - Quartz scheduler version: 2.3.0
[2019-04-17 15:57:12] - [main] - org.quartz.core.QuartzScheduler.start(QuartzScheduler.java:547) - Scheduler DefaultQuartzScheduler_$_NON_CLUSTERED started.
[2019-04-17 15:57:12] - [main] - io.lettuce.core.EpollProvider.<clinit>(EpollProvider.java:68) - Starting without optional epoll library
[2019-04-17 15:57:12] - [main] - io.lettuce.core.KqueueProvider.<clinit>(KqueueProvider.java:70) - Starting without optional kqueue library
[2019-04-17 15:57:13] - [main] - org.springframework.scheduling.concurrent.ExecutorConfigurationSupport.initialize(ExecutorConfigurationSupport.java:171) - Initializing ExecutorService 'applicationTaskExecutor'
[2019-04-17 15:57:13] - [main] - com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:110) - HikariPool-1 - Starting...
[2019-04-17 15:57:13] - [main] - com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:123) - HikariPool-1 - Start completed.
[2019-04-17 15:57:13] - [main] - org.quartz.impl.StdSchedulerFactory.instantiate(StdSchedulerFactory.java:1208) - Using default implementation for ThreadExecutor
[2019-04-17 15:57:13] - [main] - org.quartz.core.SchedulerSignalerImpl.<init>(SchedulerSignalerImpl.java:61) - Initialized Scheduler Signaller of type: class org.quartz.core.SchedulerSignalerImpl
[2019-04-17 15:57:13] - [main] - org.quartz.core.QuartzScheduler.<init>(QuartzScheduler.java:229) - Quartz Scheduler v.2.3.0 created.
[2019-04-17 15:57:13] - [main] - org.quartz.simpl.RAMJobStore.initialize(RAMJobStore.java:155) - RAMJobStore initialized.
[2019-04-17 15:57:13] - [main] - org.quartz.core.QuartzScheduler.initialize(QuartzScheduler.java:294) - Scheduler meta-data: Quartz Scheduler (v2.3.0) 'quartzScheduler' with instanceId 'NON_CLUSTERED'
  Scheduler class: 'org.quartz.core.QuartzScheduler' - running locally.
  NOT STARTED.
  Currently in standby mode.
  Number of jobs executed: 0
  Using thread pool 'org.quartz.simpl.SimpleThreadPool' - with 10 threads.
  Using job-store 'org.quartz.simpl.RAMJobStore' - which does not support persistence. and is not clustered.

[2019-04-17 15:57:13] - [main] - org.quartz.impl.StdSchedulerFactory.instantiate(StdSchedulerFactory.java:1362) - Quartz scheduler 'quartzScheduler' initialized from an externally provided properties instance.
[2019-04-17 15:57:13] - [main] - org.quartz.impl.StdSchedulerFactory.instantiate(StdSchedulerFactory.java:1366) - Quartz scheduler version: 2.3.0
[2019-04-17 15:57:13] - [main] - org.quartz.core.QuartzScheduler.setJobFactory(QuartzScheduler.java:2287) - JobFactory set to: org.springframework.scheduling.quartz.SpringBeanJobFactory@3cb173db
[2019-04-17 15:57:14] - [main] - org.springframework.scheduling.quartz.SchedulerFactoryBean.startScheduler(SchedulerFactoryBean.java:726) - Starting Quartz Scheduler now
[2019-04-17 15:57:14] - [main] - org.quartz.core.QuartzScheduler.start(QuartzScheduler.java:547) - Scheduler quartzScheduler_$_NON_CLUSTERED started.
[2019-04-17 15:57:14] - [main] - org.springframework.scheduling.annotation.ScheduledAnnotationBeanPostProcessor.finishRegistration(ScheduledAnnotationBeanPostProcessor.java:295) - No TaskScheduler/ScheduledExecutorService bean found for scheduled processing
[2019-04-17 15:57:14] - [main] - org.apache.juli.logging.DirectJDKLog.log(DirectJDKLog.java:173) - Starting ProtocolHandler ["http-nio-0.0.0.0-8080"]
[2019-04-17 15:57:14] - [main] - org.springframework.boot.web.embedded.tomcat.TomcatWebServer.start(TomcatWebServer.java:204) - Tomcat started on port(s): 8080 (http) with context path ''
[2019-04-17 15:57:14] - [main] - org.springframework.boot.StartupInfoLogger.logStarted(StartupInfoLogger.java:59) - Started ApitestApplication in 6.336 seconds (JVM running for 9.072)
[2019-04-17 15:58:43] - [http-nio-0.0.0.0-8080-exec-1] - org.apache.juli.logging.DirectJDKLog.log(DirectJDKLog.java:173) - Initializing Spring DispatcherServlet 'dispatcherServlet'
[2019-04-17 15:58:43] - [http-nio-0.0.0.0-8080-exec-1] - org.springframework.web.servlet.FrameworkServlet.initServletBean(FrameworkServlet.java:524) - Initializing Servlet 'dispatcherServlet'
[2019-04-17 15:58:43] - [http-nio-0.0.0.0-8080-exec-1] - org.springframework.web.servlet.FrameworkServlet.initServletBean(FrameworkServlet.java:546) - Completed initialization in 34 ms
[2019-04-17 15:58:43] - [http-nio-0.0.0.0-8080-exec-1] - com.apitest.api.impl.LoginServiceImpl.loginService(LoginServiceImpl.java:35) - 用户名: admin
[2019-04-17 15:58:43] - [http-nio-0.0.0.0-8080-exec-1] - com.apitest.api.impl.LoginServiceImpl.loginService(LoginServiceImpl.java:36) - 密码: 123456
[2019-04-17 15:58:43] - [http-nio-0.0.0.0-8080-exec-1] - com.apitest.api.impl.LoginServiceImpl.loginService(LoginServiceImpl.java:58) - 返回结果: ServerResponse(status=1, message=登录成功, data=User(id=1, username=admin, email=shayang.huang@dbjtech.com, password=$2a$10$2YxN79EDB.D1RD724JLBE.3G6RoM8c9XftS4jB/TpTwM5Co6AIIrm, createTime=1542618646, updateTime=1547546860))
[2019-04-17 15:58:43] - [http-nio-0.0.0.0-8080-exec-1] - com.apitest.api.impl.LoginServiceImpl.loginService(LoginServiceImpl.java:59) - 线程名: http-nio-0.0.0.0-8080-exec-1,线程id: 55,线程状态: RUNNABLE
[2019-04-17 15:58:45] - [http-nio-0.0.0.0-8080-exec-2] - com.apitest.api.impl.ApiServiceImpl.queryAllApiService(ApiServiceImpl.java:80) - 返回结果: ServerResponse(status=1, message=查询接口成功, data=PageInfo{pageNum=1, pageSize=10, size=10, startRow=1, endRow=10, total=49, pages=5, list=Page{count=true, pageNum=1, pageSize=10, startRow=0, endRow=10, total=49, pages=5, reasonable=false, pageSizeZero=false}[Apis(id=1, url=/login, createTime=1539792000, method=post, envId=1, updateTime=1555063890, cookie=false, name=登录), Apis(id=3, url=/profile, createTime=1539187200, method=get, envId=1, updateTime=1555063925, cookie=true, name=获取用户资料), Apis(id=4, url=/profile, createTime=1539187200, method=put, envId=1, updateTime=1544597466, cookie=true, name=修改用户资料), Apis(id=5, url=/notification-methods, createTime=1539187200, method=get, envId=1, updateTime=1551260173, cookie=true, name=获取通知方式), Apis(id=6, url=/notification-methods, createTime=1539187200, method=put, envId=0, updateTime=1539792000, cookie=true, name=修改通知方式), Apis(id=7, url=/organizations, createTime=1539187200, method=get, envId=0, updateTime=1539792000, cookie=true, name=获取组织), Apis(id=8, url=/organizations, createTime=1539187200, method=post, envId=1, updateTime=1539792000, cookie=true, name=创建组织), Apis(id=9, url=/organizations/{org_id}/members, createTime=1539187200, method=get, envId=0, updateTime=1540483200, cookie=true, name=获取组织下的成员列表), Apis(id=10, url=/organizations/{org_id}/departments, createTime=1539187200, method=get, envId=0, updateTime=1540483200, cookie=true, name=获取组织下的部门), Apis(id=11, url=/organizations/{org_id}/departments, createTime=1539187200, method=post, envId=0, updateTime=1545031378, cookie=true, name=新建部门)], prePage=0, nextPage=2, isFirstPage=true, isLastPage=false, hasPreviousPage=false, hasNextPage=true, navigatePages=8, navigateFirstPage=1, navigateLastPage=5, navigatepageNums=[1, 2, 3, 4, 5]})
[2019-04-17 15:58:45] - [http-nio-0.0.0.0-8080-exec-2] - com.apitest.api.impl.ApiServiceImpl.queryAllApiService(ApiServiceImpl.java:81) - 线程名: http-nio-0.0.0.0-8080-exec-2,线程id: 56,线程状态: RUNNABLE
[2019-04-17 15:59:07] - [http-nio-0.0.0.0-8080-exec-3] - com.apitest.api.impl.ApiServiceImpl.queryAllApiService(ApiServiceImpl.java:80) - 返回结果: ServerResponse(status=1, message=查询接口成功, data=PageInfo{pageNum=5, pageSize=10, size=9, startRow=41, endRow=49, total=49, pages=5, list=Page{count=true, pageNum=5, pageSize=10, startRow=40, endRow=50, total=49, pages=5, reasonable=false, pageSizeZero=false}[Apis(id=62, url=/maintenance-plans/14, createTime=1544170030, method=put, envId=0, updateTime=1544170033, cookie=true, name=修改保养计划), Apis(id=63, url=/maintenance-plans/{id}, createTime=1544170060, method=delete, envId=0, updateTime=1544170062, cookie=true, name=删除保养), Apis(id=64, url=/departments/{dept_id}/tasks, createTime=1544495281, method=get, envId=0, updateTime=1544517027, cookie=true, name=获取任务列表), Apis(id=65, url=/departments/{dpt_id}/tasks, createTime=1544495635, method=post, envId=0, updateTime=1545032143, cookie=true, name=添加任务), Apis(id=66, url=/departments/{dpt_id}/tasks, createTime=1544511005, method=put, envId=0, updateTime=1545032219, cookie=true, name=更新任务), Apis(id=67, url=/departments/{dept_id}/tasks/alert-conditions?task_id=a6ffccfb-35bc-4d8f-8de0-9f17da7fd58f, createTime=1544516802, method=get, envId=0, updateTime=1544519827, cookie=true, name=获取告警条件列表), Apis(id=68, url=/departments/{dpt_id}/tasks/alert-conditions, createTime=1544517012, method=post, envId=0, updateTime=1545032235, cookie=true, name=添加告警条件), Apis(id=69, url=/departments/44/tasks/alert-conditions?task_id=a6ffccfb-35bc-4d8f-8de0-9f17da7fd58f, createTime=1544518911, method=delete, envId=0, updateTime=1544520926, cookie=true, name=删除告警条件), Apis(id=70, url=/reports/departments/{dpt_id}/alerts, createTime=1544581908, method=post, envId=0, updateTime=1545032252, cookie=true, name=告警报表)], prePage=4, nextPage=0, isFirstPage=false, isLastPage=true, hasPreviousPage=true, hasNextPage=false, navigatePages=8, navigateFirstPage=1, navigateLastPage=5, navigatepageNums=[1, 2, 3, 4, 5]})
[2019-04-17 15:59:07] - [http-nio-0.0.0.0-8080-exec-3] - com.apitest.api.impl.ApiServiceImpl.queryAllApiService(ApiServiceImpl.java:81) - 线程名: http-nio-0.0.0.0-8080-exec-3,线程id: 57,线程状态: RUNNABLE
[2019-04-17 15:59:26] - [http-nio-0.0.0.0-8080-exec-4] - com.apitest.api.impl.EnvServiceImpl.queryAllEnvService(EnvServiceImpl.java:123) - 返回结果: ServerResponse(status=1, message=查询环境成功, data=[Enviroment(id=1, name=车联网测试网, username=18899998888, password=ac60beae8c5cb8afc5ea8adb8c7ccdf85d7905d6e27830ae85bf13b3749c5adb, domain=http://alpha.smart-iov.net/api/v1, createTime=1545705356, updateTime=1555061022), Enviroment(id=2, name=车联网现网, username=16602811927, password=123456, domain=http://smart-iov.net/api/v1, createTime=1545705460, updateTime=1555061014), Enviroment(id=3, name=AccuGPS测试网, username=shayang.huang@dbjtech.com, password=tracm315, domain=http://i-alpha.accugps.com/api/v1, createTime=1555060946, updateTime=1555061033)])
[2019-04-17 15:59:26] - [http-nio-0.0.0.0-8080-exec-4] - com.apitest.api.impl.EnvServiceImpl.queryAllEnvService(EnvServiceImpl.java:124) - 线程名: http-nio-0.0.0.0-8080-exec-4,线程id: 58,线程状态: RUNNABLE
[2019-04-17 15:59:39] - [http-nio-0.0.0.0-8080-exec-5] - com.apitest.api.impl.ApiServiceImpl.addApiService(ApiServiceImpl.java:38) - 参数: Apis(id=null, url=/login, createTime=1555487979, method=post, envId=3, updateTime=1555487979, cookie=false, name=登录)
[2019-04-17 15:59:39] - [http-nio-0.0.0.0-8080-exec-5] - com.apitest.api.impl.ApiServiceImpl.addApiService(ApiServiceImpl.java:60) - 返回结果: ServerResponse(status=1, message=添加接口成功, data=null)
[2019-04-17 15:59:39] - [http-nio-0.0.0.0-8080-exec-5] - com.apitest.api.impl.ApiServiceImpl.addApiService(ApiServiceImpl.java:61) - 线程名: http-nio-0.0.0.0-8080-exec-5,线程id: 59,线程状态: RUNNABLE
[2019-04-17 15:59:43] - [http-nio-0.0.0.0-8080-exec-6] - com.apitest.api.impl.ApiServiceImpl.queryAllApiService(ApiServiceImpl.java:80) - 返回结果: ServerResponse(status=1, message=查询接口成功, data=PageInfo{pageNum=4, pageSize=10, size=10, startRow=31, endRow=40, total=50, pages=5, list=Page{count=true, pageNum=4, pageSize=10, startRow=30, endRow=40, total=50, pages=5, reasonable=false, pageSizeZero=false}[Apis(id=49, url=/departments/{dpt_id}/fences, createTime=1542960524, method=get, envId=0, updateTime=1542960526, cookie=true, name=获取部门围栏列表), Apis(id=50, url=/departments/27/fences, createTime=1542960549, method=post, envId=0, updateTime=1542960551, cookie=true, name=创建部门围栏), Apis(id=51, url=/fences/{id}, createTime=1542960572, method=get, envId=0, updateTime=1542960574, cookie=true, name=获取围栏详情), Apis(id=52, url=/fences/16, createTime=1542960597, method=put, envId=0, updateTime=1542960600, cookie=true, name=修改围栏), Apis(id=53, url=/fences/{fence_id}, createTime=1542960622, method=delete, envId=0, updateTime=1542960624, cookie=true, name=删除围栏), Apis(id=57, url=/vehicles/{id}/fences, createTime=1544169815, method=get, envId=0, updateTime=1544169818, cookie=true, name=获取车辆关联的围栏), Apis(id=58, url=/vehicles/{id}/fences, createTime=1544169853, method=put, envId=0, updateTime=1544169858, cookie=true, name=修改车辆关联围栏), Apis(id=59, url=/departments/{dpt_id}/maintenance-plans, createTime=1544169883, method=get, envId=0, updateTime=1544169885, cookie=true, name=获取部门保养列表), Apis(id=60, url=/departments/27/maintenance-plans, createTime=1544169965, method=post, envId=0, updateTime=1544169976, cookie=true, name=创建保养计划), Apis(id=61, url=/maintenance-plans/{id}, createTime=1544169999, method=get, envId=0, updateTime=1544170003, cookie=true, name=获取保养计划详情)], prePage=3, nextPage=5, isFirstPage=false, isLastPage=false, hasPreviousPage=true, hasNextPage=true, navigatePages=8, navigateFirstPage=1, navigateLastPage=5, navigatepageNums=[1, 2, 3, 4, 5]})
[2019-04-17 15:59:43] - [http-nio-0.0.0.0-8080-exec-6] - com.apitest.api.impl.ApiServiceImpl.queryAllApiService(ApiServiceImpl.java:81) - 线程名: http-nio-0.0.0.0-8080-exec-6,线程id: 60,线程状态: RUNNABLE
[2019-04-17 15:59:45] - [http-nio-0.0.0.0-8080-exec-7] - com.apitest.api.impl.ApiServiceImpl.queryAllApiService(ApiServiceImpl.java:80) - 返回结果: ServerResponse(status=1, message=查询接口成功, data=PageInfo{pageNum=5, pageSize=10, size=10, startRow=41, endRow=50, total=50, pages=5, list=Page{count=true, pageNum=5, pageSize=10, startRow=40, endRow=50, total=50, pages=5, reasonable=false, pageSizeZero=false}[Apis(id=62, url=/maintenance-plans/14, createTime=1544170030, method=put, envId=0, updateTime=1544170033, cookie=true, name=修改保养计划), Apis(id=63, url=/maintenance-plans/{id}, createTime=1544170060, method=delete, envId=0, updateTime=1544170062, cookie=true, name=删除保养), Apis(id=64, url=/departments/{dept_id}/tasks, createTime=1544495281, method=get, envId=0, updateTime=1544517027, cookie=true, name=获取任务列表), Apis(id=65, url=/departments/{dpt_id}/tasks, createTime=1544495635, method=post, envId=0, updateTime=1545032143, cookie=true, name=添加任务), Apis(id=66, url=/departments/{dpt_id}/tasks, createTime=1544511005, method=put, envId=0, updateTime=1545032219, cookie=true, name=更新任务), Apis(id=67, url=/departments/{dept_id}/tasks/alert-conditions?task_id=a6ffccfb-35bc-4d8f-8de0-9f17da7fd58f, createTime=1544516802, method=get, envId=0, updateTime=1544519827, cookie=true, name=获取告警条件列表), Apis(id=68, url=/departments/{dpt_id}/tasks/alert-conditions, createTime=1544517012, method=post, envId=0, updateTime=1545032235, cookie=true, name=添加告警条件), Apis(id=69, url=/departments/44/tasks/alert-conditions?task_id=a6ffccfb-35bc-4d8f-8de0-9f17da7fd58f, createTime=1544518911, method=delete, envId=0, updateTime=1544520926, cookie=true, name=删除告警条件), Apis(id=70, url=/reports/departments/{dpt_id}/alerts, createTime=1544581908, method=post, envId=0, updateTime=1545032252, cookie=true, name=告警报表), Apis(id=86, url=/login, createTime=1555487979, method=post, envId=3, updateTime=1555487979, cookie=false, name=登录)], prePage=4, nextPage=0, isFirstPage=false, isLastPage=true, hasPreviousPage=true, hasNextPage=false, navigatePages=8, navigateFirstPage=1, navigateLastPage=5, navigatepageNums=[1, 2, 3, 4, 5]})
[2019-04-17 15:59:45] - [http-nio-0.0.0.0-8080-exec-7] - com.apitest.api.impl.ApiServiceImpl.queryAllApiService(ApiServiceImpl.java:81) - 线程名: http-nio-0.0.0.0-8080-exec-7,线程id: 61,线程状态: RUNNABLE
[2019-04-17 15:59:50] - [http-nio-0.0.0.0-8080-exec-8] - com.apitest.api.impl.CaseServiceImpl.queryAllCaseService(CaseServiceImpl.java:52) - 返回结果: ServerResponse(status=1, message=查询用例成功, data=PageInfo{pageNum=1, pageSize=10, size=10, startRow=1, endRow=10, total=112, pages=12, list=Page{count=true, pageNum=1, pageSize=10, startRow=0, endRow=10, total=112, pages=12, reasonable=false, pageSizeZero=false}[Cases(id=1, jsonData={"username":"16602811927","password":"d7190eb194ff9494625514b6d178c87f99c5973e28c398969d2233f2960a573e"}, paramsData=, createTime=1539187200, updateTime=1551941029, apiId=1, name=正确的账号密码, available=true, expectResult={"status":200,"message":"请求成功"}), Cases(id=2, jsonData={"username":"16602811927","password":"1234567"}, paramsData=, createTime=1539187200, updateTime=1545033103, apiId=1, name=username存在，但password错误, available=false, expectResult=), Cases(id=3, jsonData={"username":"16602811927","password":"123"}, paramsData=, createTime=1539187200, updateTime=1545033933, apiId=1, name=密码位数小于6位, available=false, expectResult=), Cases(id=4, jsonData={"username":"16602811927","password":""}, paramsData=, createTime=1539187200, updateTime=1544774806, apiId=1, name=密码为空, available=false, expectResult=), Cases(id=5, jsonData={"username":"16602811927","password":null}, paramsData=, createTime=1539187200, updateTime=1544774810, apiId=1, name=password为null, available=false, expectResult=), Cases(id=6, jsonData={"username":"16602811927"}, paramsData=, createTime=1539187200, updateTime=1544774813, apiId=1, name=不传password, available=false, expectResult=), Cases(id=7, jsonData={"password":"123456"}, paramsData=, createTime=1539187200, updateTime=1539187200, apiId=1, name=不传username, available=false, expectResult=), Cases(id=8, jsonData={"username":null,"password":"123456"}, paramsData=, createTime=1539187200, updateTime=1539187200, apiId=1, name=username为null, available=false, expectResult=), Cases(id=9, jsonData=, paramsData=, createTime=1539187200, updateTime=1539187200, apiId=1, name=无参数, available=false, expectResult=), Cases(id=10, jsonData={"username":"jshdjasd","password":"123456"}, paramsData=, createTime=1539187200, updateTime=1539187200, apiId=1, name=username为非手机号, available=false, expectResult=)], prePage=0, nextPage=2, isFirstPage=true, isLastPage=false, hasPreviousPage=false, hasNextPage=true, navigatePages=8, navigateFirstPage=1, navigateLastPage=8, navigatepageNums=[1, 2, 3, 4, 5, 6, 7, 8]})
[2019-04-17 15:59:50] - [http-nio-0.0.0.0-8080-exec-8] - com.apitest.api.impl.CaseServiceImpl.queryAllCaseService(CaseServiceImpl.java:53) - 线程名: http-nio-0.0.0.0-8080-exec-8,线程id: 62,线程状态: RUNNABLE
