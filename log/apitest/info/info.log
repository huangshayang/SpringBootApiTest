[2019-03-05 17:03:59] - [http-nio-0.0.0.0-8080-exec-1] - org.apache.juli.logging.DirectJDKLog.log(DirectJDKLog.java:173) - Initializing Spring DispatcherServlet 'dispatcherServlet'
[2019-03-05 17:03:59] - [http-nio-0.0.0.0-8080-exec-1] - org.springframework.web.servlet.FrameworkServlet.initServletBean(FrameworkServlet.java:524) - Initializing Servlet 'dispatcherServlet'
[2019-03-05 17:03:59] - [http-nio-0.0.0.0-8080-exec-1] - org.springframework.web.servlet.FrameworkServlet.initServletBean(FrameworkServlet.java:546) - Completed initialization in 9 ms
[2019-03-05 17:04:00] - [http-nio-0.0.0.0-8080-exec-1] - com.apitest.api.impl.LoginServiceImpl.loginService(LoginServiceImpl.java:35) - 用户名: admin
[2019-03-05 17:04:00] - [http-nio-0.0.0.0-8080-exec-1] - com.apitest.api.impl.LoginServiceImpl.loginService(LoginServiceImpl.java:36) - 密码: 123456
[2019-03-05 17:07:05] - [Thread-2] - org.quartz.core.QuartzScheduler.standby(QuartzScheduler.java:585) - Scheduler quartzScheduler_$_NON_CLUSTERED paused.
[2019-03-05 17:07:05] - [Thread-2] - org.springframework.scheduling.quartz.SchedulerFactoryBean.destroy(SchedulerFactoryBean.java:844) - Shutting down Quartz Scheduler
[2019-03-05 17:07:05] - [Thread-2] - org.quartz.core.QuartzScheduler.shutdown(QuartzScheduler.java:666) - Scheduler quartzScheduler_$_NON_CLUSTERED shutting down.
[2019-03-05 17:07:05] - [Thread-2] - org.quartz.core.QuartzScheduler.standby(QuartzScheduler.java:585) - Scheduler quartzScheduler_$_NON_CLUSTERED paused.
[2019-03-05 17:07:05] - [Thread-2] - org.quartz.core.QuartzScheduler.shutdown(QuartzScheduler.java:740) - Scheduler quartzScheduler_$_NON_CLUSTERED shutdown complete.
[2019-03-05 17:07:05] - [Thread-2] - org.springframework.scheduling.concurrent.ExecutorConfigurationSupport.shutdown(ExecutorConfigurationSupport.java:208) - Shutting down ExecutorService 'applicationTaskExecutor'
[2019-03-05 17:07:05] - [Thread-2] - com.zaxxer.hikari.HikariDataSource.close(HikariDataSource.java:350) - HikariPool-1 - Shutdown initiated...
[2019-03-05 17:07:05] - [Thread-2] - com.zaxxer.hikari.HikariDataSource.close(HikariDataSource.java:352) - HikariPool-1 - Shutdown completed.
[2019-03-05 17:07:12] - [main] - org.springframework.boot.StartupInfoLogger.logStarting(StartupInfoLogger.java:50) - Starting ApitestApplication on huangshayangdeMacBook-Pro.local with PID 34563 (/Users/huangshayang/IdeaProjects/SpringBootApiTest/target/classes started by huangshayang in /Users/huangshayang/IdeaProjects/SpringBootApiTest)
[2019-03-05 17:07:12] - [main] - org.springframework.boot.SpringApplication.logStartupProfileInfo(SpringApplication.java:675) - No active profile set, falling back to default profiles: default
[2019-03-05 17:07:13] - [main] - org.springframework.data.repository.config.RepositoryConfigurationDelegate.multipleStoresDetected(RepositoryConfigurationDelegate.java:244) - Multiple Spring Data modules found, entering strict repository configuration mode!
[2019-03-05 17:07:13] - [main] - org.springframework.data.repository.config.RepositoryConfigurationDelegate.registerRepositoriesIn(RepositoryConfigurationDelegate.java:126) - Bootstrapping Spring Data repositories in DEFAULT mode.
[2019-03-05 17:07:13] - [main] - org.springframework.data.repository.config.RepositoryConfigurationDelegate.registerRepositoriesIn(RepositoryConfigurationDelegate.java:182) - Finished Spring Data repository scanning in 43ms. Found 0 repository interfaces.
[2019-03-05 17:07:14] - [main] - org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization(PostProcessorRegistrationDelegate.java:330) - Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$a1deb433] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2019-03-05 17:07:14] - [main] - org.springframework.boot.web.embedded.tomcat.TomcatWebServer.initialize(TomcatWebServer.java:90) - Tomcat initialized with port(s): 8080 (http)
[2019-03-05 17:07:14] - [main] - org.apache.juli.logging.DirectJDKLog.log(DirectJDKLog.java:173) - Initializing ProtocolHandler ["http-nio-0.0.0.0-8080"]
[2019-03-05 17:07:14] - [main] - org.apache.juli.logging.DirectJDKLog.log(DirectJDKLog.java:173) - Starting service [Tomcat]
[2019-03-05 17:07:14] - [main] - org.apache.juli.logging.DirectJDKLog.log(DirectJDKLog.java:173) - Starting Servlet engine: [Apache Tomcat/9.0.16]
[2019-03-05 17:07:14] - [main] - org.apache.juli.logging.DirectJDKLog.log(DirectJDKLog.java:173) - The APR based Apache Tomcat Native library which allows optimal performance in production environments was not found on the java.library.path: [/Users/huangshayang/Library/Java/Extensions:/Library/Java/Extensions:/Network/Library/Java/Extensions:/System/Library/Java/Extensions:/usr/lib/java:.]
[2019-03-05 17:07:14] - [main] - org.apache.juli.logging.DirectJDKLog.log(DirectJDKLog.java:173) - Initializing Spring embedded WebApplicationContext
[2019-03-05 17:07:14] - [main] - org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.prepareWebApplicationContext(ServletWebServerApplicationContext.java:296) - Root WebApplicationContext: initialization completed in 2066 ms
[2019-03-05 17:07:14] - [main] - org.quartz.impl.StdSchedulerFactory.instantiate(StdSchedulerFactory.java:1208) - Using default implementation for ThreadExecutor
[2019-03-05 17:07:14] - [main] - org.quartz.simpl.SimpleThreadPool.initialize(SimpleThreadPool.java:268) - Job execution threads will use class loader of thread: main
[2019-03-05 17:07:14] - [main] - org.quartz.core.SchedulerSignalerImpl.<init>(SchedulerSignalerImpl.java:61) - Initialized Scheduler Signaller of type: class org.quartz.core.SchedulerSignalerImpl
[2019-03-05 17:07:14] - [main] - org.quartz.core.QuartzScheduler.<init>(QuartzScheduler.java:229) - Quartz Scheduler v.2.3.0 created.
[2019-03-05 17:07:14] - [main] - org.quartz.simpl.RAMJobStore.initialize(RAMJobStore.java:155) - RAMJobStore initialized.
[2019-03-05 17:07:14] - [main] - org.quartz.core.QuartzScheduler.initialize(QuartzScheduler.java:294) - Scheduler meta-data: Quartz Scheduler (v2.3.0) 'DefaultQuartzScheduler' with instanceId 'NON_CLUSTERED'
  Scheduler class: 'org.quartz.core.QuartzScheduler' - running locally.
  NOT STARTED.
  Currently in standby mode.
  Number of jobs executed: 0
  Using thread pool 'org.quartz.simpl.SimpleThreadPool' - with 10 threads.
  Using job-store 'org.quartz.simpl.RAMJobStore' - which does not support persistence. and is not clustered.

[2019-03-05 17:07:14] - [main] - org.quartz.impl.StdSchedulerFactory.instantiate(StdSchedulerFactory.java:1362) - Quartz scheduler 'DefaultQuartzScheduler' initialized from default resource file in Quartz package: 'quartz.properties'
[2019-03-05 17:07:14] - [main] - org.quartz.impl.StdSchedulerFactory.instantiate(StdSchedulerFactory.java:1366) - Quartz scheduler version: 2.3.0
[2019-03-05 17:07:14] - [main] - org.quartz.core.QuartzScheduler.start(QuartzScheduler.java:547) - Scheduler DefaultQuartzScheduler_$_NON_CLUSTERED started.
[2019-03-05 17:07:15] - [main] - io.lettuce.core.EpollProvider.<clinit>(EpollProvider.java:68) - Starting without optional epoll library
[2019-03-05 17:07:15] - [main] - io.lettuce.core.KqueueProvider.<clinit>(KqueueProvider.java:70) - Starting without optional kqueue library
[2019-03-05 17:07:15] - [main] - org.springframework.scheduling.concurrent.ExecutorConfigurationSupport.initialize(ExecutorConfigurationSupport.java:171) - Initializing ExecutorService 'applicationTaskExecutor'
[2019-03-05 17:07:15] - [main] - com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:110) - HikariPool-1 - Starting...
[2019-03-05 17:07:15] - [main] - com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:123) - HikariPool-1 - Start completed.
[2019-03-05 17:07:15] - [main] - org.quartz.impl.StdSchedulerFactory.instantiate(StdSchedulerFactory.java:1208) - Using default implementation for ThreadExecutor
[2019-03-05 17:07:15] - [main] - org.quartz.core.SchedulerSignalerImpl.<init>(SchedulerSignalerImpl.java:61) - Initialized Scheduler Signaller of type: class org.quartz.core.SchedulerSignalerImpl
[2019-03-05 17:07:15] - [main] - org.quartz.core.QuartzScheduler.<init>(QuartzScheduler.java:229) - Quartz Scheduler v.2.3.0 created.
[2019-03-05 17:07:15] - [main] - org.quartz.simpl.RAMJobStore.initialize(RAMJobStore.java:155) - RAMJobStore initialized.
[2019-03-05 17:07:15] - [main] - org.quartz.core.QuartzScheduler.initialize(QuartzScheduler.java:294) - Scheduler meta-data: Quartz Scheduler (v2.3.0) 'quartzScheduler' with instanceId 'NON_CLUSTERED'
  Scheduler class: 'org.quartz.core.QuartzScheduler' - running locally.
  NOT STARTED.
  Currently in standby mode.
  Number of jobs executed: 0
  Using thread pool 'org.quartz.simpl.SimpleThreadPool' - with 10 threads.
  Using job-store 'org.quartz.simpl.RAMJobStore' - which does not support persistence. and is not clustered.

[2019-03-05 17:07:15] - [main] - org.quartz.impl.StdSchedulerFactory.instantiate(StdSchedulerFactory.java:1362) - Quartz scheduler 'quartzScheduler' initialized from an externally provided properties instance.
[2019-03-05 17:07:15] - [main] - org.quartz.impl.StdSchedulerFactory.instantiate(StdSchedulerFactory.java:1366) - Quartz scheduler version: 2.3.0
[2019-03-05 17:07:15] - [main] - org.quartz.core.QuartzScheduler.setJobFactory(QuartzScheduler.java:2287) - JobFactory set to: org.springframework.scheduling.quartz.SpringBeanJobFactory@16d4024e
[2019-03-05 17:07:16] - [main] - org.springframework.scheduling.quartz.SchedulerFactoryBean.startScheduler(SchedulerFactoryBean.java:726) - Starting Quartz Scheduler now
[2019-03-05 17:07:16] - [main] - org.quartz.core.QuartzScheduler.start(QuartzScheduler.java:547) - Scheduler quartzScheduler_$_NON_CLUSTERED started.
[2019-03-05 17:07:16] - [main] - org.springframework.scheduling.annotation.ScheduledAnnotationBeanPostProcessor.finishRegistration(ScheduledAnnotationBeanPostProcessor.java:295) - No TaskScheduler/ScheduledExecutorService bean found for scheduled processing
[2019-03-05 17:07:16] - [main] - org.apache.juli.logging.DirectJDKLog.log(DirectJDKLog.java:173) - Starting ProtocolHandler ["http-nio-0.0.0.0-8080"]
[2019-03-05 17:07:16] - [main] - org.springframework.boot.web.embedded.tomcat.TomcatWebServer.start(TomcatWebServer.java:204) - Tomcat started on port(s): 8080 (http) with context path ''
[2019-03-05 17:07:16] - [main] - org.springframework.boot.StartupInfoLogger.logStarted(StartupInfoLogger.java:59) - Started ApitestApplication in 4.527 seconds (JVM running for 5.928)
[2019-03-05 17:07:22] - [http-nio-0.0.0.0-8080-exec-1] - org.apache.juli.logging.DirectJDKLog.log(DirectJDKLog.java:173) - Initializing Spring DispatcherServlet 'dispatcherServlet'
[2019-03-05 17:07:22] - [http-nio-0.0.0.0-8080-exec-1] - org.springframework.web.servlet.FrameworkServlet.initServletBean(FrameworkServlet.java:524) - Initializing Servlet 'dispatcherServlet'
[2019-03-05 17:07:22] - [http-nio-0.0.0.0-8080-exec-1] - org.springframework.web.servlet.FrameworkServlet.initServletBean(FrameworkServlet.java:546) - Completed initialization in 8 ms
[2019-03-05 17:07:22] - [http-nio-0.0.0.0-8080-exec-1] - com.apitest.api.impl.LoginServiceImpl.loginService(LoginServiceImpl.java:35) - 用户名: admin
[2019-03-05 17:07:22] - [http-nio-0.0.0.0-8080-exec-1] - com.apitest.api.impl.LoginServiceImpl.loginService(LoginServiceImpl.java:36) - 密码: 123456
[2019-03-05 17:07:22] - [http-nio-0.0.0.0-8080-exec-1] - com.apitest.api.impl.LoginServiceImpl.loginService(LoginServiceImpl.java:58) - 返回结果: ServerResponse(status=1, message=登录成功, data=User(id=1, username=admin, email=shayang.huang@dbjtech.com, password=$2a$10$2YxN79EDB.D1RD724JLBE.3G6RoM8c9XftS4jB/TpTwM5Co6AIIrm, createTime=2019-03-05 17:07:22.571, updateTime=2019-03-05 17:07:22.571))
[2019-03-05 17:07:22] - [http-nio-0.0.0.0-8080-exec-1] - com.apitest.api.impl.LoginServiceImpl.loginService(LoginServiceImpl.java:59) - 线程名: http-nio-0.0.0.0-8080-exec-1,线程id: 67,线程状态: RUNNABLE
[2019-03-05 17:08:10] - [http-nio-0.0.0.0-8080-exec-5] - com.apitest.api.impl.ApiServiceImpl.queryAllApiService(ApiServiceImpl.java:81) - 返回结果: ServerResponse(status=1, message=查询接口成功, data=PageInfo{pageNum=1, pageSize=10, size=10, startRow=1, endRow=10, total=49, pages=5, list=Page{count=true, pageNum=1, pageSize=10, startRow=0, endRow=10, total=49, pages=5, reasonable=true, pageSizeZero=true}[Apis(id=1, url=/login, createTime=2019-03-05 17:08:10.378, method=post, envId=null, updateTime=2019-03-05 17:08:10.378, cookie=false, name=登录), Apis(id=3, url=/profile, createTime=2019-03-05 17:08:10.379, method=get, envId=null, updateTime=2019-03-05 17:08:10.379, cookie=true, name=获取用户资料), Apis(id=4, url=/profile, createTime=2019-03-05 17:08:10.379, method=put, envId=null, updateTime=2019-03-05 17:08:10.379, cookie=true, name=修改用户资料), Apis(id=5, url=/notification-methods, createTime=2019-03-05 17:08:10.379, method=get, envId=null, updateTime=2019-03-05 17:08:10.379, cookie=true, name=获取通知方式), Apis(id=6, url=/notification-methods, createTime=2019-03-05 17:08:10.38, method=put, envId=null, updateTime=2019-03-05 17:08:10.38, cookie=true, name=修改通知方式), Apis(id=7, url=/organizations, createTime=2019-03-05 17:08:10.381, method=get, envId=null, updateTime=2019-03-05 17:08:10.381, cookie=true, name=获取组织), Apis(id=8, url=/organizations, createTime=2019-03-05 17:08:10.381, method=post, envId=null, updateTime=2019-03-05 17:08:10.381, cookie=true, name=创建组织), Apis(id=9, url=/organizations/{org_id}/members, createTime=2019-03-05 17:08:10.381, method=get, envId=null, updateTime=2019-03-05 17:08:10.381, cookie=true, name=获取组织下的成员列表), Apis(id=10, url=/organizations/{org_id}/departments, createTime=2019-03-05 17:08:10.381, method=get, envId=null, updateTime=2019-03-05 17:08:10.381, cookie=true, name=获取组织下的部门), Apis(id=11, url=/organizations/{org_id}/departments, createTime=2019-03-05 17:08:10.381, method=post, envId=null, updateTime=2019-03-05 17:08:10.381, cookie=true, name=新建部门)], prePage=0, nextPage=2, isFirstPage=true, isLastPage=false, hasPreviousPage=false, hasNextPage=true, navigatePages=8, navigateFirstPage=1, navigateLastPage=5, navigatepageNums=[1, 2, 3, 4, 5]})
[2019-03-05 17:08:10] - [http-nio-0.0.0.0-8080-exec-5] - com.apitest.api.impl.ApiServiceImpl.queryAllApiService(ApiServiceImpl.java:82) - 线程名: http-nio-0.0.0.0-8080-exec-5,线程id: 71,线程状态: RUNNABLE
[2019-03-05 17:08:21] - [http-nio-0.0.0.0-8080-exec-6] - com.apitest.api.impl.ApiServiceImpl.queryAllApiService(ApiServiceImpl.java:81) - 返回结果: ServerResponse(status=1, message=查询接口成功, data=PageInfo{pageNum=1, pageSize=10, size=10, startRow=1, endRow=10, total=49, pages=5, list=Page{count=true, pageNum=1, pageSize=10, startRow=0, endRow=10, total=49, pages=5, reasonable=true, pageSizeZero=true}[Apis(id=1, url=/login, createTime=2019-03-05 17:08:21.145, method=post, envId=null, updateTime=2019-03-05 17:08:21.145, cookie=false, name=登录), Apis(id=3, url=/profile, createTime=2019-03-05 17:08:21.145, method=get, envId=null, updateTime=2019-03-05 17:08:21.145, cookie=true, name=获取用户资料), Apis(id=4, url=/profile, createTime=2019-03-05 17:08:21.146, method=put, envId=null, updateTime=2019-03-05 17:08:21.146, cookie=true, name=修改用户资料), Apis(id=5, url=/notification-methods, createTime=2019-03-05 17:08:21.146, method=get, envId=null, updateTime=2019-03-05 17:08:21.146, cookie=true, name=获取通知方式), Apis(id=6, url=/notification-methods, createTime=2019-03-05 17:08:21.146, method=put, envId=null, updateTime=2019-03-05 17:08:21.146, cookie=true, name=修改通知方式), Apis(id=7, url=/organizations, createTime=2019-03-05 17:08:21.147, method=get, envId=null, updateTime=2019-03-05 17:08:21.147, cookie=true, name=获取组织), Apis(id=8, url=/organizations, createTime=2019-03-05 17:08:21.148, method=post, envId=null, updateTime=2019-03-05 17:08:21.148, cookie=true, name=创建组织), Apis(id=9, url=/organizations/{org_id}/members, createTime=2019-03-05 17:08:21.148, method=get, envId=null, updateTime=2019-03-05 17:08:21.148, cookie=true, name=获取组织下的成员列表), Apis(id=10, url=/organizations/{org_id}/departments, createTime=2019-03-05 17:08:21.148, method=get, envId=null, updateTime=2019-03-05 17:08:21.148, cookie=true, name=获取组织下的部门), Apis(id=11, url=/organizations/{org_id}/departments, createTime=2019-03-05 17:08:21.148, method=post, envId=null, updateTime=2019-03-05 17:08:21.148, cookie=true, name=新建部门)], prePage=0, nextPage=2, isFirstPage=true, isLastPage=false, hasPreviousPage=false, hasNextPage=true, navigatePages=8, navigateFirstPage=1, navigateLastPage=5, navigatepageNums=[1, 2, 3, 4, 5]})
[2019-03-05 17:08:21] - [http-nio-0.0.0.0-8080-exec-6] - com.apitest.api.impl.ApiServiceImpl.queryAllApiService(ApiServiceImpl.java:82) - 线程名: http-nio-0.0.0.0-8080-exec-6,线程id: 72,线程状态: RUNNABLE
[2019-03-05 17:08:38] - [http-nio-0.0.0.0-8080-exec-7] - com.apitest.api.impl.ApiServiceImpl.queryAllApiService(ApiServiceImpl.java:81) - 返回结果: ServerResponse(status=1, message=查询接口成功, data=PageInfo{pageNum=2, pageSize=10, size=10, startRow=11, endRow=20, total=49, pages=5, list=Page{count=true, pageNum=2, pageSize=10, startRow=10, endRow=20, total=49, pages=5, reasonable=true, pageSizeZero=true}[Apis(id=12, url=/alert-rule-patterns, createTime=2019-03-05 17:08:38.164, method=get, envId=null, updateTime=2019-03-05 17:08:38.164, cookie=true, name=获取告警规则的模块), Apis(id=13, url=/departments/{dpt_id}/members, createTime=2019-03-05 17:08:38.165, method=get, envId=null, updateTime=2019-03-05 17:08:38.165, cookie=true, name=获取部门所有成员), Apis(id=14, url=/departments/4/members, createTime=2019-03-05 17:08:38.165, method=post, envId=null, updateTime=2019-03-05 17:08:38.165, cookie=true, name=添加部门成员), Apis(id=15, url=/departments/{dpt_id}/members/{member_id}, createTime=2019-03-05 17:08:38.165, method=get, envId=null, updateTime=2019-03-05 17:08:38.165, cookie=true, name=获取单个部门成员), Apis(id=16, url=/vehicles/{vehicle-id}/cooler, createTime=2019-03-05 17:08:38.165, method=get, envId=null, updateTime=2019-03-05 17:08:38.165, cookie=true, name=获取空调主机信息), Apis(id=17, url=/vehicles/{vehicle-id}/cooler/log, createTime=2019-03-05 17:08:38.165, method=get, envId=null, updateTime=2019-03-05 17:08:38.165, cookie=true, name=获取空调主机信息变更记录), Apis(id=26, url=/departments/27/members/4, createTime=2019-03-05 17:08:38.165, method=put, envId=null, updateTime=2019-03-05 17:08:38.165, cookie=true, name=编辑部门成员), Apis(id=27, url=/departments/{dpt_id}/members/{member_id}, createTime=2019-03-05 17:08:38.165, method=delete, envId=null, updateTime=2019-03-05 17:08:38.165, cookie=true, name=删除部门成员), Apis(id=28, url=/departments/27/members/4/message, createTime=2019-03-05 17:08:38.165, method=post, envId=null, updateTime=2019-03-05 17:08:38.165, cookie=true, name=给部门成员发送消息), Apis(id=29, url=/organizations/{org_id}/join-requests/pendings, createTime=2019-03-05 17:08:38.165, method=get, envId=null, updateTime=2019-03-05 17:08:38.165, cookie=true, name=获取未处理申请数量)], prePage=1, nextPage=3, isFirstPage=false, isLastPage=false, hasPreviousPage=true, hasNextPage=true, navigatePages=8, navigateFirstPage=1, navigateLastPage=5, navigatepageNums=[1, 2, 3, 4, 5]})
[2019-03-05 17:08:38] - [http-nio-0.0.0.0-8080-exec-7] - com.apitest.api.impl.ApiServiceImpl.queryAllApiService(ApiServiceImpl.java:82) - 线程名: http-nio-0.0.0.0-8080-exec-7,线程id: 73,线程状态: RUNNABLE
[2019-03-05 17:08:44] - [http-nio-0.0.0.0-8080-exec-8] - com.apitest.api.impl.ApiServiceImpl.queryAllApiService(ApiServiceImpl.java:81) - 返回结果: ServerResponse(status=1, message=查询接口成功, data=PageInfo{pageNum=3, pageSize=10, size=10, startRow=21, endRow=30, total=49, pages=5, list=Page{count=true, pageNum=3, pageSize=10, startRow=20, endRow=30, total=49, pages=5, reasonable=true, pageSizeZero=true}[Apis(id=30, url=/organizations/2/members/3, createTime=2019-03-05 17:08:44.66, method=put, envId=null, updateTime=2019-03-05 17:08:44.66, cookie=true, name=修改组织成员), Apis(id=40, url=/organizations/{org_id}/members/{member_id}, createTime=2019-03-05 17:08:44.66, method=delete, envId=null, updateTime=2019-03-05 17:08:44.66, cookie=true, name=删除组织成员), Apis(id=41, url=/organizations/{org_id}/join-requests, createTime=2019-03-05 17:08:44.66, method=get, envId=null, updateTime=2019-03-05 17:08:44.66, cookie=true, name=获取审核列表), Apis(id=42, url=/members/{member_id}/punch-infos, createTime=2019-03-05 17:08:44.66, method=get, envId=null, updateTime=2019-03-05 17:08:44.66, cookie=true, name=获取驾驶员用车历史), Apis(id=43, url=/departments/{id}/vehicles?label_ids={label_ids}, createTime=2019-03-05 17:08:44.66, method=get, envId=null, updateTime=2019-03-05 17:08:44.66, cookie=true, name=获取部门下车辆列表), Apis(id=44, url=/departments/{dpt_id}/labels, createTime=2019-03-05 17:08:44.66, method=get, envId=null, updateTime=2019-03-05 17:08:44.66, cookie=true, name=获取标签列表), Apis(id=45, url=/departments/27/labels, createTime=2019-03-05 17:08:44.66, method=post, envId=null, updateTime=2019-03-05 17:08:44.66, cookie=true, name=创建标签), Apis(id=46, url=/labels/233, createTime=2019-03-05 17:08:44.661, method=put, envId=null, updateTime=2019-03-05 17:08:44.661, cookie=true, name=修改单个标签), Apis(id=47, url=/labels/{label_id}, createTime=2019-03-05 17:08:44.661, method=delete, envId=null, updateTime=2019-03-05 17:08:44.661, cookie=true, name=删除标签), Apis(id=48, url=/vehicles/labels, createTime=2019-03-05 17:08:44.661, method=put, envId=null, updateTime=2019-03-05 17:08:44.661, cookie=true, name=批量车辆标签设置)], prePage=2, nextPage=4, isFirstPage=false, isLastPage=false, hasPreviousPage=true, hasNextPage=true, navigatePages=8, navigateFirstPage=1, navigateLastPage=5, navigatepageNums=[1, 2, 3, 4, 5]})
[2019-03-05 17:08:44] - [http-nio-0.0.0.0-8080-exec-8] - com.apitest.api.impl.ApiServiceImpl.queryAllApiService(ApiServiceImpl.java:82) - 线程名: http-nio-0.0.0.0-8080-exec-8,线程id: 74,线程状态: RUNNABLE
[2019-03-05 17:08:50] - [http-nio-0.0.0.0-8080-exec-9] - com.apitest.api.impl.ApiServiceImpl.queryAllApiService(ApiServiceImpl.java:81) - 返回结果: ServerResponse(status=1, message=查询接口成功, data=PageInfo{pageNum=4, pageSize=10, size=10, startRow=31, endRow=40, total=49, pages=5, list=Page{count=true, pageNum=4, pageSize=10, startRow=30, endRow=40, total=49, pages=5, reasonable=true, pageSizeZero=true}[Apis(id=49, url=/departments/{dpt_id}/fences, createTime=2019-03-05 17:08:50.224, method=get, envId=null, updateTime=2019-03-05 17:08:50.224, cookie=true, name=获取部门围栏列表), Apis(id=50, url=/departments/27/fences, createTime=2019-03-05 17:08:50.225, method=post, envId=null, updateTime=2019-03-05 17:08:50.225, cookie=true, name=创建部门围栏), Apis(id=51, url=/fences/{id}, createTime=2019-03-05 17:08:50.225, method=get, envId=null, updateTime=2019-03-05 17:08:50.225, cookie=true, name=获取围栏详情), Apis(id=52, url=/fences/16, createTime=2019-03-05 17:08:50.225, method=put, envId=null, updateTime=2019-03-05 17:08:50.225, cookie=true, name=修改围栏), Apis(id=53, url=/fences/{fence_id}, createTime=2019-03-05 17:08:50.225, method=delete, envId=null, updateTime=2019-03-05 17:08:50.225, cookie=true, name=删除围栏), Apis(id=57, url=/vehicles/{id}/fences, createTime=2019-03-05 17:08:50.225, method=get, envId=null, updateTime=2019-03-05 17:08:50.225, cookie=true, name=获取车辆关联的围栏), Apis(id=58, url=/vehicles/{id}/fences, createTime=2019-03-05 17:08:50.225, method=put, envId=null, updateTime=2019-03-05 17:08:50.225, cookie=true, name=修改车辆关联围栏), Apis(id=59, url=/departments/{dpt_id}/maintenance-plans, createTime=2019-03-05 17:08:50.225, method=get, envId=null, updateTime=2019-03-05 17:08:50.225, cookie=true, name=获取部门保养列表), Apis(id=60, url=/departments/27/maintenance-plans, createTime=2019-03-05 17:08:50.225, method=post, envId=null, updateTime=2019-03-05 17:08:50.225, cookie=true, name=创建保养计划), Apis(id=61, url=/maintenance-plans/{id}, createTime=2019-03-05 17:08:50.225, method=get, envId=null, updateTime=2019-03-05 17:08:50.225, cookie=true, name=获取保养计划详情)], prePage=3, nextPage=5, isFirstPage=false, isLastPage=false, hasPreviousPage=true, hasNextPage=true, navigatePages=8, navigateFirstPage=1, navigateLastPage=5, navigatepageNums=[1, 2, 3, 4, 5]})
[2019-03-05 17:08:50] - [http-nio-0.0.0.0-8080-exec-9] - com.apitest.api.impl.ApiServiceImpl.queryAllApiService(ApiServiceImpl.java:82) - 线程名: http-nio-0.0.0.0-8080-exec-9,线程id: 75,线程状态: RUNNABLE
[2019-03-05 17:08:55] - [http-nio-0.0.0.0-8080-exec-10] - com.apitest.api.impl.ApiServiceImpl.queryAllApiService(ApiServiceImpl.java:81) - 返回结果: ServerResponse(status=1, message=查询接口成功, data=PageInfo{pageNum=5, pageSize=10, size=9, startRow=41, endRow=49, total=49, pages=5, list=Page{count=true, pageNum=5, pageSize=10, startRow=40, endRow=50, total=49, pages=5, reasonable=true, pageSizeZero=true}[Apis(id=62, url=/maintenance-plans/14, createTime=2019-03-05 17:08:55.579, method=put, envId=null, updateTime=2019-03-05 17:08:55.579, cookie=true, name=修改保养计划), Apis(id=63, url=/maintenance-plans/{id}, createTime=2019-03-05 17:08:55.579, method=delete, envId=null, updateTime=2019-03-05 17:08:55.579, cookie=true, name=删除保养), Apis(id=64, url=/departments/{dept_id}/tasks, createTime=2019-03-05 17:08:55.579, method=get, envId=null, updateTime=2019-03-05 17:08:55.579, cookie=true, name=获取任务列表), Apis(id=65, url=/departments/{dpt_id}/tasks, createTime=2019-03-05 17:08:55.579, method=post, envId=null, updateTime=2019-03-05 17:08:55.579, cookie=true, name=添加任务), Apis(id=66, url=/departments/{dpt_id}/tasks, createTime=2019-03-05 17:08:55.579, method=put, envId=null, updateTime=2019-03-05 17:08:55.579, cookie=true, name=更新任务), Apis(id=67, url=/departments/{dept_id}/tasks/alert-conditions?task_id=a6ffccfb-35bc-4d8f-8de0-9f17da7fd58f, createTime=2019-03-05 17:08:55.579, method=get, envId=null, updateTime=2019-03-05 17:08:55.579, cookie=true, name=获取告警条件列表), Apis(id=68, url=/departments/{dpt_id}/tasks/alert-conditions, createTime=2019-03-05 17:08:55.58, method=post, envId=null, updateTime=2019-03-05 17:08:55.58, cookie=true, name=添加告警条件), Apis(id=69, url=/departments/44/tasks/alert-conditions?task_id=a6ffccfb-35bc-4d8f-8de0-9f17da7fd58f, createTime=2019-03-05 17:08:55.58, method=delete, envId=null, updateTime=2019-03-05 17:08:55.58, cookie=true, name=删除告警条件), Apis(id=70, url=/reports/departments/{dpt_id}/alerts, createTime=2019-03-05 17:08:55.58, method=post, envId=null, updateTime=2019-03-05 17:08:55.58, cookie=true, name=告警报表)], prePage=4, nextPage=0, isFirstPage=false, isLastPage=true, hasPreviousPage=true, hasNextPage=false, navigatePages=8, navigateFirstPage=1, navigateLastPage=5, navigatepageNums=[1, 2, 3, 4, 5]})
[2019-03-05 17:08:55] - [http-nio-0.0.0.0-8080-exec-10] - com.apitest.api.impl.ApiServiceImpl.queryAllApiService(ApiServiceImpl.java:82) - 线程名: http-nio-0.0.0.0-8080-exec-10,线程id: 76,线程状态: RUNNABLE
[2019-03-05 17:09:00] - [http-nio-0.0.0.0-8080-exec-2] - com.apitest.api.impl.ApiServiceImpl.queryAllApiService(ApiServiceImpl.java:81) - 返回结果: ServerResponse(status=1, message=查询接口成功, data=PageInfo{pageNum=5, pageSize=10, size=9, startRow=41, endRow=49, total=49, pages=5, list=Page{count=true, pageNum=5, pageSize=10, startRow=40, endRow=50, total=49, pages=5, reasonable=true, pageSizeZero=true}[Apis(id=62, url=/maintenance-plans/14, createTime=2019-03-05 17:09:00.19, method=put, envId=null, updateTime=2019-03-05 17:09:00.19, cookie=true, name=修改保养计划), Apis(id=63, url=/maintenance-plans/{id}, createTime=2019-03-05 17:09:00.19, method=delete, envId=null, updateTime=2019-03-05 17:09:00.19, cookie=true, name=删除保养), Apis(id=64, url=/departments/{dept_id}/tasks, createTime=2019-03-05 17:09:00.191, method=get, envId=null, updateTime=2019-03-05 17:09:00.191, cookie=true, name=获取任务列表), Apis(id=65, url=/departments/{dpt_id}/tasks, createTime=2019-03-05 17:09:00.191, method=post, envId=null, updateTime=2019-03-05 17:09:00.191, cookie=true, name=添加任务), Apis(id=66, url=/departments/{dpt_id}/tasks, createTime=2019-03-05 17:09:00.191, method=put, envId=null, updateTime=2019-03-05 17:09:00.191, cookie=true, name=更新任务), Apis(id=67, url=/departments/{dept_id}/tasks/alert-conditions?task_id=a6ffccfb-35bc-4d8f-8de0-9f17da7fd58f, createTime=2019-03-05 17:09:00.191, method=get, envId=null, updateTime=2019-03-05 17:09:00.191, cookie=true, name=获取告警条件列表), Apis(id=68, url=/departments/{dpt_id}/tasks/alert-conditions, createTime=2019-03-05 17:09:00.191, method=post, envId=null, updateTime=2019-03-05 17:09:00.191, cookie=true, name=添加告警条件), Apis(id=69, url=/departments/44/tasks/alert-conditions?task_id=a6ffccfb-35bc-4d8f-8de0-9f17da7fd58f, createTime=2019-03-05 17:09:00.191, method=delete, envId=null, updateTime=2019-03-05 17:09:00.191, cookie=true, name=删除告警条件), Apis(id=70, url=/reports/departments/{dpt_id}/alerts, createTime=2019-03-05 17:09:00.191, method=post, envId=null, updateTime=2019-03-05 17:09:00.191, cookie=true, name=告警报表)], prePage=4, nextPage=0, isFirstPage=false, isLastPage=true, hasPreviousPage=true, hasNextPage=false, navigatePages=8, navigateFirstPage=1, navigateLastPage=5, navigatepageNums=[1, 2, 3, 4, 5]})
[2019-03-05 17:09:00] - [http-nio-0.0.0.0-8080-exec-2] - com.apitest.api.impl.ApiServiceImpl.queryAllApiService(ApiServiceImpl.java:82) - 线程名: http-nio-0.0.0.0-8080-exec-2,线程id: 68,线程状态: RUNNABLE
[2019-03-05 17:09:06] - [http-nio-0.0.0.0-8080-exec-1] - com.apitest.api.impl.ApiServiceImpl.queryAllApiService(ApiServiceImpl.java:81) - 返回结果: ServerResponse(status=1, message=查询接口成功, data=PageInfo{pageNum=5, pageSize=10, size=9, startRow=41, endRow=49, total=49, pages=5, list=Page{count=true, pageNum=5, pageSize=10, startRow=40, endRow=50, total=49, pages=5, reasonable=true, pageSizeZero=true}[Apis(id=62, url=/maintenance-plans/14, createTime=2019-03-05 17:09:06.341, method=put, envId=null, updateTime=2019-03-05 17:09:06.341, cookie=true, name=修改保养计划), Apis(id=63, url=/maintenance-plans/{id}, createTime=2019-03-05 17:09:06.341, method=delete, envId=null, updateTime=2019-03-05 17:09:06.341, cookie=true, name=删除保养), Apis(id=64, url=/departments/{dept_id}/tasks, createTime=2019-03-05 17:09:06.341, method=get, envId=null, updateTime=2019-03-05 17:09:06.341, cookie=true, name=获取任务列表), Apis(id=65, url=/departments/{dpt_id}/tasks, createTime=2019-03-05 17:09:06.341, method=post, envId=null, updateTime=2019-03-05 17:09:06.341, cookie=true, name=添加任务), Apis(id=66, url=/departments/{dpt_id}/tasks, createTime=2019-03-05 17:09:06.341, method=put, envId=null, updateTime=2019-03-05 17:09:06.341, cookie=true, name=更新任务), Apis(id=67, url=/departments/{dept_id}/tasks/alert-conditions?task_id=a6ffccfb-35bc-4d8f-8de0-9f17da7fd58f, createTime=2019-03-05 17:09:06.341, method=get, envId=null, updateTime=2019-03-05 17:09:06.341, cookie=true, name=获取告警条件列表), Apis(id=68, url=/departments/{dpt_id}/tasks/alert-conditions, createTime=2019-03-05 17:09:06.341, method=post, envId=null, updateTime=2019-03-05 17:09:06.341, cookie=true, name=添加告警条件), Apis(id=69, url=/departments/44/tasks/alert-conditions?task_id=a6ffccfb-35bc-4d8f-8de0-9f17da7fd58f, createTime=2019-03-05 17:09:06.341, method=delete, envId=null, updateTime=2019-03-05 17:09:06.341, cookie=true, name=删除告警条件), Apis(id=70, url=/reports/departments/{dpt_id}/alerts, createTime=2019-03-05 17:09:06.341, method=post, envId=null, updateTime=2019-03-05 17:09:06.341, cookie=true, name=告警报表)], prePage=4, nextPage=0, isFirstPage=false, isLastPage=true, hasPreviousPage=true, hasNextPage=false, navigatePages=8, navigateFirstPage=1, navigateLastPage=5, navigatepageNums=[1, 2, 3, 4, 5]})
[2019-03-05 17:09:06] - [http-nio-0.0.0.0-8080-exec-1] - com.apitest.api.impl.ApiServiceImpl.queryAllApiService(ApiServiceImpl.java:82) - 线程名: http-nio-0.0.0.0-8080-exec-1,线程id: 67,线程状态: RUNNABLE
[2019-03-05 17:09:15] - [http-nio-0.0.0.0-8080-exec-3] - com.apitest.api.impl.ApiServiceImpl.queryAllApiService(ApiServiceImpl.java:81) - 返回结果: ServerResponse(status=1, message=查询接口成功, data=PageInfo{pageNum=5, pageSize=10, size=9, startRow=41, endRow=49, total=49, pages=5, list=Page{count=true, pageNum=5, pageSize=10, startRow=40, endRow=50, total=49, pages=5, reasonable=true, pageSizeZero=true}[Apis(id=62, url=/maintenance-plans/14, createTime=2019-03-05 17:09:15.065, method=put, envId=null, updateTime=2019-03-05 17:09:15.065, cookie=true, name=修改保养计划), Apis(id=63, url=/maintenance-plans/{id}, createTime=2019-03-05 17:09:15.065, method=delete, envId=null, updateTime=2019-03-05 17:09:15.065, cookie=true, name=删除保养), Apis(id=64, url=/departments/{dept_id}/tasks, createTime=2019-03-05 17:09:15.065, method=get, envId=null, updateTime=2019-03-05 17:09:15.065, cookie=true, name=获取任务列表), Apis(id=65, url=/departments/{dpt_id}/tasks, createTime=2019-03-05 17:09:15.065, method=post, envId=null, updateTime=2019-03-05 17:09:15.065, cookie=true, name=添加任务), Apis(id=66, url=/departments/{dpt_id}/tasks, createTime=2019-03-05 17:09:15.065, method=put, envId=null, updateTime=2019-03-05 17:09:15.065, cookie=true, name=更新任务), Apis(id=67, url=/departments/{dept_id}/tasks/alert-conditions?task_id=a6ffccfb-35bc-4d8f-8de0-9f17da7fd58f, createTime=2019-03-05 17:09:15.065, method=get, envId=null, updateTime=2019-03-05 17:09:15.065, cookie=true, name=获取告警条件列表), Apis(id=68, url=/departments/{dpt_id}/tasks/alert-conditions, createTime=2019-03-05 17:09:15.065, method=post, envId=null, updateTime=2019-03-05 17:09:15.065, cookie=true, name=添加告警条件), Apis(id=69, url=/departments/44/tasks/alert-conditions?task_id=a6ffccfb-35bc-4d8f-8de0-9f17da7fd58f, createTime=2019-03-05 17:09:15.065, method=delete, envId=null, updateTime=2019-03-05 17:09:15.065, cookie=true, name=删除告警条件), Apis(id=70, url=/reports/departments/{dpt_id}/alerts, createTime=2019-03-05 17:09:15.065, method=post, envId=null, updateTime=2019-03-05 17:09:15.065, cookie=true, name=告警报表)], prePage=4, nextPage=0, isFirstPage=false, isLastPage=true, hasPreviousPage=true, hasNextPage=false, navigatePages=8, navigateFirstPage=1, navigateLastPage=5, navigatepageNums=[1, 2, 3, 4, 5]})
[2019-03-05 17:09:15] - [http-nio-0.0.0.0-8080-exec-3] - com.apitest.api.impl.ApiServiceImpl.queryAllApiService(ApiServiceImpl.java:82) - 线程名: http-nio-0.0.0.0-8080-exec-3,线程id: 69,线程状态: RUNNABLE
[2019-03-05 17:12:13] - [Thread-2] - org.quartz.core.QuartzScheduler.standby(QuartzScheduler.java:585) - Scheduler quartzScheduler_$_NON_CLUSTERED paused.
[2019-03-05 17:12:13] - [Thread-2] - org.springframework.scheduling.quartz.SchedulerFactoryBean.destroy(SchedulerFactoryBean.java:844) - Shutting down Quartz Scheduler
[2019-03-05 17:12:13] - [Thread-2] - org.quartz.core.QuartzScheduler.shutdown(QuartzScheduler.java:666) - Scheduler quartzScheduler_$_NON_CLUSTERED shutting down.
[2019-03-05 17:12:13] - [Thread-2] - org.quartz.core.QuartzScheduler.standby(QuartzScheduler.java:585) - Scheduler quartzScheduler_$_NON_CLUSTERED paused.
[2019-03-05 17:12:13] - [Thread-2] - org.quartz.core.QuartzScheduler.shutdown(QuartzScheduler.java:740) - Scheduler quartzScheduler_$_NON_CLUSTERED shutdown complete.
[2019-03-05 17:12:13] - [Thread-2] - org.springframework.scheduling.concurrent.ExecutorConfigurationSupport.shutdown(ExecutorConfigurationSupport.java:208) - Shutting down ExecutorService 'applicationTaskExecutor'
[2019-03-05 17:12:13] - [Thread-2] - com.zaxxer.hikari.HikariDataSource.close(HikariDataSource.java:350) - HikariPool-1 - Shutdown initiated...
[2019-03-05 17:12:13] - [Thread-2] - com.zaxxer.hikari.HikariDataSource.close(HikariDataSource.java:352) - HikariPool-1 - Shutdown completed.
[2019-03-05 17:13:53] - [main] - org.springframework.boot.StartupInfoLogger.logStarting(StartupInfoLogger.java:50) - Starting ApitestApplication on huangshayangdeMacBook-Pro.local with PID 34627 (/Users/huangshayang/IdeaProjects/SpringBootApiTest/target/classes started by huangshayang in /Users/huangshayang/IdeaProjects/SpringBootApiTest)
[2019-03-05 17:13:53] - [main] - org.springframework.boot.SpringApplication.logStartupProfileInfo(SpringApplication.java:675) - No active profile set, falling back to default profiles: default
[2019-03-05 17:13:54] - [main] - org.springframework.data.repository.config.RepositoryConfigurationDelegate.multipleStoresDetected(RepositoryConfigurationDelegate.java:244) - Multiple Spring Data modules found, entering strict repository configuration mode!
[2019-03-05 17:13:54] - [main] - org.springframework.data.repository.config.RepositoryConfigurationDelegate.registerRepositoriesIn(RepositoryConfigurationDelegate.java:126) - Bootstrapping Spring Data repositories in DEFAULT mode.
[2019-03-05 17:13:54] - [main] - org.springframework.data.repository.config.RepositoryConfigurationDelegate.registerRepositoriesIn(RepositoryConfigurationDelegate.java:182) - Finished Spring Data repository scanning in 19ms. Found 0 repository interfaces.
[2019-03-05 17:13:54] - [main] - org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization(PostProcessorRegistrationDelegate.java:330) - Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$c490e24a] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2019-03-05 17:13:55] - [main] - org.springframework.boot.web.embedded.tomcat.TomcatWebServer.initialize(TomcatWebServer.java:90) - Tomcat initialized with port(s): 8080 (http)
[2019-03-05 17:13:55] - [main] - org.apache.juli.logging.DirectJDKLog.log(DirectJDKLog.java:173) - Initializing ProtocolHandler ["http-nio-0.0.0.0-8080"]
[2019-03-05 17:13:55] - [main] - org.apache.juli.logging.DirectJDKLog.log(DirectJDKLog.java:173) - Starting service [Tomcat]
[2019-03-05 17:13:55] - [main] - org.apache.juli.logging.DirectJDKLog.log(DirectJDKLog.java:173) - Starting Servlet engine: [Apache Tomcat/9.0.16]
[2019-03-05 17:13:55] - [main] - org.apache.juli.logging.DirectJDKLog.log(DirectJDKLog.java:173) - The APR based Apache Tomcat Native library which allows optimal performance in production environments was not found on the java.library.path: [/Users/huangshayang/Library/Java/Extensions:/Library/Java/Extensions:/Network/Library/Java/Extensions:/System/Library/Java/Extensions:/usr/lib/java:.]
[2019-03-05 17:13:55] - [main] - org.apache.juli.logging.DirectJDKLog.log(DirectJDKLog.java:173) - Initializing Spring embedded WebApplicationContext
[2019-03-05 17:13:55] - [main] - org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.prepareWebApplicationContext(ServletWebServerApplicationContext.java:296) - Root WebApplicationContext: initialization completed in 1801 ms
[2019-03-05 17:13:55] - [main] - org.quartz.impl.StdSchedulerFactory.instantiate(StdSchedulerFactory.java:1208) - Using default implementation for ThreadExecutor
[2019-03-05 17:13:55] - [main] - org.quartz.simpl.SimpleThreadPool.initialize(SimpleThreadPool.java:268) - Job execution threads will use class loader of thread: main
[2019-03-05 17:13:55] - [main] - org.quartz.core.SchedulerSignalerImpl.<init>(SchedulerSignalerImpl.java:61) - Initialized Scheduler Signaller of type: class org.quartz.core.SchedulerSignalerImpl
[2019-03-05 17:13:55] - [main] - org.quartz.core.QuartzScheduler.<init>(QuartzScheduler.java:229) - Quartz Scheduler v.2.3.0 created.
[2019-03-05 17:13:55] - [main] - org.quartz.simpl.RAMJobStore.initialize(RAMJobStore.java:155) - RAMJobStore initialized.
[2019-03-05 17:13:55] - [main] - org.quartz.core.QuartzScheduler.initialize(QuartzScheduler.java:294) - Scheduler meta-data: Quartz Scheduler (v2.3.0) 'DefaultQuartzScheduler' with instanceId 'NON_CLUSTERED'
  Scheduler class: 'org.quartz.core.QuartzScheduler' - running locally.
  NOT STARTED.
  Currently in standby mode.
  Number of jobs executed: 0
  Using thread pool 'org.quartz.simpl.SimpleThreadPool' - with 10 threads.
  Using job-store 'org.quartz.simpl.RAMJobStore' - which does not support persistence. and is not clustered.

[2019-03-05 17:13:55] - [main] - org.quartz.impl.StdSchedulerFactory.instantiate(StdSchedulerFactory.java:1362) - Quartz scheduler 'DefaultQuartzScheduler' initialized from default resource file in Quartz package: 'quartz.properties'
[2019-03-05 17:13:55] - [main] - org.quartz.impl.StdSchedulerFactory.instantiate(StdSchedulerFactory.java:1366) - Quartz scheduler version: 2.3.0
[2019-03-05 17:13:55] - [main] - org.quartz.core.QuartzScheduler.start(QuartzScheduler.java:547) - Scheduler DefaultQuartzScheduler_$_NON_CLUSTERED started.
[2019-03-05 17:13:56] - [main] - io.lettuce.core.EpollProvider.<clinit>(EpollProvider.java:68) - Starting without optional epoll library
[2019-03-05 17:13:56] - [main] - io.lettuce.core.KqueueProvider.<clinit>(KqueueProvider.java:70) - Starting without optional kqueue library
[2019-03-05 17:13:56] - [main] - org.springframework.scheduling.concurrent.ExecutorConfigurationSupport.initialize(ExecutorConfigurationSupport.java:171) - Initializing ExecutorService 'applicationTaskExecutor'
[2019-03-05 17:13:56] - [main] - com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:110) - HikariPool-1 - Starting...
[2019-03-05 17:13:56] - [main] - com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:123) - HikariPool-1 - Start completed.
[2019-03-05 17:13:56] - [main] - org.quartz.impl.StdSchedulerFactory.instantiate(StdSchedulerFactory.java:1208) - Using default implementation for ThreadExecutor
[2019-03-05 17:13:56] - [main] - org.quartz.core.SchedulerSignalerImpl.<init>(SchedulerSignalerImpl.java:61) - Initialized Scheduler Signaller of type: class org.quartz.core.SchedulerSignalerImpl
[2019-03-05 17:13:56] - [main] - org.quartz.core.QuartzScheduler.<init>(QuartzScheduler.java:229) - Quartz Scheduler v.2.3.0 created.
[2019-03-05 17:13:56] - [main] - org.quartz.simpl.RAMJobStore.initialize(RAMJobStore.java:155) - RAMJobStore initialized.
[2019-03-05 17:13:56] - [main] - org.quartz.core.QuartzScheduler.initialize(QuartzScheduler.java:294) - Scheduler meta-data: Quartz Scheduler (v2.3.0) 'quartzScheduler' with instanceId 'NON_CLUSTERED'
  Scheduler class: 'org.quartz.core.QuartzScheduler' - running locally.
  NOT STARTED.
  Currently in standby mode.
  Number of jobs executed: 0
  Using thread pool 'org.quartz.simpl.SimpleThreadPool' - with 10 threads.
  Using job-store 'org.quartz.simpl.RAMJobStore' - which does not support persistence. and is not clustered.

[2019-03-05 17:13:56] - [main] - org.quartz.impl.StdSchedulerFactory.instantiate(StdSchedulerFactory.java:1362) - Quartz scheduler 'quartzScheduler' initialized from an externally provided properties instance.
[2019-03-05 17:13:56] - [main] - org.quartz.impl.StdSchedulerFactory.instantiate(StdSchedulerFactory.java:1366) - Quartz scheduler version: 2.3.0
[2019-03-05 17:13:56] - [main] - org.quartz.core.QuartzScheduler.setJobFactory(QuartzScheduler.java:2287) - JobFactory set to: org.springframework.scheduling.quartz.SpringBeanJobFactory@13d1f898
[2019-03-05 17:13:57] - [main] - org.springframework.scheduling.quartz.SchedulerFactoryBean.startScheduler(SchedulerFactoryBean.java:726) - Starting Quartz Scheduler now
[2019-03-05 17:13:57] - [main] - org.quartz.core.QuartzScheduler.start(QuartzScheduler.java:547) - Scheduler quartzScheduler_$_NON_CLUSTERED started.
[2019-03-05 17:13:57] - [main] - org.springframework.scheduling.annotation.ScheduledAnnotationBeanPostProcessor.finishRegistration(ScheduledAnnotationBeanPostProcessor.java:295) - No TaskScheduler/ScheduledExecutorService bean found for scheduled processing
[2019-03-05 17:13:57] - [main] - org.apache.juli.logging.DirectJDKLog.log(DirectJDKLog.java:173) - Starting ProtocolHandler ["http-nio-0.0.0.0-8080"]
[2019-03-05 17:13:57] - [main] - org.springframework.boot.web.embedded.tomcat.TomcatWebServer.start(TomcatWebServer.java:204) - Tomcat started on port(s): 8080 (http) with context path ''
[2019-03-05 17:13:57] - [main] - org.springframework.boot.StartupInfoLogger.logStarted(StartupInfoLogger.java:59) - Started ApitestApplication in 4.226 seconds (JVM running for 5.289)
[2019-03-05 17:14:05] - [http-nio-0.0.0.0-8080-exec-1] - org.apache.juli.logging.DirectJDKLog.log(DirectJDKLog.java:173) - Initializing Spring DispatcherServlet 'dispatcherServlet'
[2019-03-05 17:14:05] - [http-nio-0.0.0.0-8080-exec-1] - org.springframework.web.servlet.FrameworkServlet.initServletBean(FrameworkServlet.java:524) - Initializing Servlet 'dispatcherServlet'
[2019-03-05 17:14:05] - [http-nio-0.0.0.0-8080-exec-1] - org.springframework.web.servlet.FrameworkServlet.initServletBean(FrameworkServlet.java:546) - Completed initialization in 10 ms
[2019-03-05 17:14:05] - [http-nio-0.0.0.0-8080-exec-1] - com.apitest.api.impl.LoginServiceImpl.loginService(LoginServiceImpl.java:35) - 用户名: admin
[2019-03-05 17:14:05] - [http-nio-0.0.0.0-8080-exec-1] - com.apitest.api.impl.LoginServiceImpl.loginService(LoginServiceImpl.java:36) - 密码: 123456
[2019-03-05 17:14:05] - [http-nio-0.0.0.0-8080-exec-1] - com.apitest.api.impl.LoginServiceImpl.loginService(LoginServiceImpl.java:58) - 返回结果: ServerResponse(status=1, message=登录成功, data=User(id=1, username=admin, email=shayang.huang@dbjtech.com, password=$2a$10$2YxN79EDB.D1RD724JLBE.3G6RoM8c9XftS4jB/TpTwM5Co6AIIrm, createTime=2019-03-05 17:14:05.536, updateTime=2019-03-05 17:14:05.536))
[2019-03-05 17:14:05] - [http-nio-0.0.0.0-8080-exec-1] - com.apitest.api.impl.LoginServiceImpl.loginService(LoginServiceImpl.java:59) - 线程名: http-nio-0.0.0.0-8080-exec-1,线程id: 55,线程状态: RUNNABLE
[2019-03-05 17:16:19] - [Thread-2] - org.quartz.core.QuartzScheduler.standby(QuartzScheduler.java:585) - Scheduler quartzScheduler_$_NON_CLUSTERED paused.
[2019-03-05 17:16:19] - [Thread-2] - org.springframework.scheduling.quartz.SchedulerFactoryBean.destroy(SchedulerFactoryBean.java:844) - Shutting down Quartz Scheduler
[2019-03-05 17:16:19] - [Thread-2] - org.quartz.core.QuartzScheduler.shutdown(QuartzScheduler.java:666) - Scheduler quartzScheduler_$_NON_CLUSTERED shutting down.
[2019-03-05 17:16:19] - [Thread-2] - org.quartz.core.QuartzScheduler.standby(QuartzScheduler.java:585) - Scheduler quartzScheduler_$_NON_CLUSTERED paused.
[2019-03-05 17:16:19] - [Thread-2] - org.quartz.core.QuartzScheduler.shutdown(QuartzScheduler.java:740) - Scheduler quartzScheduler_$_NON_CLUSTERED shutdown complete.
[2019-03-05 17:16:19] - [Thread-2] - org.springframework.scheduling.concurrent.ExecutorConfigurationSupport.shutdown(ExecutorConfigurationSupport.java:208) - Shutting down ExecutorService 'applicationTaskExecutor'
[2019-03-05 17:16:19] - [Thread-2] - com.zaxxer.hikari.HikariDataSource.close(HikariDataSource.java:350) - HikariPool-1 - Shutdown initiated...
[2019-03-05 17:16:19] - [Thread-2] - com.zaxxer.hikari.HikariDataSource.close(HikariDataSource.java:352) - HikariPool-1 - Shutdown completed.
[2019-03-05 17:27:31] - [main] - org.springframework.boot.StartupInfoLogger.logStarting(StartupInfoLogger.java:50) - Starting ApitestApplication on huangshayangdeMacBook-Pro.local with PID 34703 (/Users/huangshayang/IdeaProjects/SpringBootApiTest/target/classes started by huangshayang in /Users/huangshayang/IdeaProjects/SpringBootApiTest)
[2019-03-05 17:27:31] - [main] - org.springframework.boot.SpringApplication.logStartupProfileInfo(SpringApplication.java:675) - No active profile set, falling back to default profiles: default
[2019-03-05 17:27:32] - [main] - org.springframework.data.repository.config.RepositoryConfigurationDelegate.multipleStoresDetected(RepositoryConfigurationDelegate.java:244) - Multiple Spring Data modules found, entering strict repository configuration mode!
[2019-03-05 17:27:32] - [main] - org.springframework.data.repository.config.RepositoryConfigurationDelegate.registerRepositoriesIn(RepositoryConfigurationDelegate.java:126) - Bootstrapping Spring Data repositories in DEFAULT mode.
[2019-03-05 17:27:32] - [main] - org.springframework.data.repository.config.RepositoryConfigurationDelegate.registerRepositoriesIn(RepositoryConfigurationDelegate.java:182) - Finished Spring Data repository scanning in 17ms. Found 0 repository interfaces.
[2019-03-05 17:27:32] - [main] - org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization(PostProcessorRegistrationDelegate.java:330) - Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$196ae186] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2019-03-05 17:27:32] - [main] - org.springframework.boot.web.embedded.tomcat.TomcatWebServer.initialize(TomcatWebServer.java:90) - Tomcat initialized with port(s): 8080 (http)
[2019-03-05 17:27:32] - [main] - org.apache.juli.logging.DirectJDKLog.log(DirectJDKLog.java:173) - Initializing ProtocolHandler ["http-nio-0.0.0.0-8080"]
[2019-03-05 17:27:32] - [main] - org.apache.juli.logging.DirectJDKLog.log(DirectJDKLog.java:173) - Starting service [Tomcat]
[2019-03-05 17:27:32] - [main] - org.apache.juli.logging.DirectJDKLog.log(DirectJDKLog.java:173) - Starting Servlet engine: [Apache Tomcat/9.0.16]
[2019-03-05 17:27:32] - [main] - org.apache.juli.logging.DirectJDKLog.log(DirectJDKLog.java:173) - The APR based Apache Tomcat Native library which allows optimal performance in production environments was not found on the java.library.path: [/Users/huangshayang/Library/Java/Extensions:/Library/Java/Extensions:/Network/Library/Java/Extensions:/System/Library/Java/Extensions:/usr/lib/java:.]
[2019-03-05 17:27:32] - [main] - org.apache.juli.logging.DirectJDKLog.log(DirectJDKLog.java:173) - Initializing Spring embedded WebApplicationContext
[2019-03-05 17:27:32] - [main] - org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.prepareWebApplicationContext(ServletWebServerApplicationContext.java:296) - Root WebApplicationContext: initialization completed in 1431 ms
[2019-03-05 17:27:33] - [main] - org.quartz.impl.StdSchedulerFactory.instantiate(StdSchedulerFactory.java:1208) - Using default implementation for ThreadExecutor
[2019-03-05 17:27:33] - [main] - org.quartz.simpl.SimpleThreadPool.initialize(SimpleThreadPool.java:268) - Job execution threads will use class loader of thread: main
[2019-03-05 17:27:33] - [main] - org.quartz.core.SchedulerSignalerImpl.<init>(SchedulerSignalerImpl.java:61) - Initialized Scheduler Signaller of type: class org.quartz.core.SchedulerSignalerImpl
[2019-03-05 17:27:33] - [main] - org.quartz.core.QuartzScheduler.<init>(QuartzScheduler.java:229) - Quartz Scheduler v.2.3.0 created.
[2019-03-05 17:27:33] - [main] - org.quartz.simpl.RAMJobStore.initialize(RAMJobStore.java:155) - RAMJobStore initialized.
[2019-03-05 17:27:33] - [main] - org.quartz.core.QuartzScheduler.initialize(QuartzScheduler.java:294) - Scheduler meta-data: Quartz Scheduler (v2.3.0) 'DefaultQuartzScheduler' with instanceId 'NON_CLUSTERED'
  Scheduler class: 'org.quartz.core.QuartzScheduler' - running locally.
  NOT STARTED.
  Currently in standby mode.
  Number of jobs executed: 0
  Using thread pool 'org.quartz.simpl.SimpleThreadPool' - with 10 threads.
  Using job-store 'org.quartz.simpl.RAMJobStore' - which does not support persistence. and is not clustered.

[2019-03-05 17:27:33] - [main] - org.quartz.impl.StdSchedulerFactory.instantiate(StdSchedulerFactory.java:1362) - Quartz scheduler 'DefaultQuartzScheduler' initialized from default resource file in Quartz package: 'quartz.properties'
[2019-03-05 17:27:33] - [main] - org.quartz.impl.StdSchedulerFactory.instantiate(StdSchedulerFactory.java:1366) - Quartz scheduler version: 2.3.0
[2019-03-05 17:27:33] - [main] - org.quartz.core.QuartzScheduler.start(QuartzScheduler.java:547) - Scheduler DefaultQuartzScheduler_$_NON_CLUSTERED started.
[2019-03-05 17:27:33] - [main] - io.lettuce.core.EpollProvider.<clinit>(EpollProvider.java:68) - Starting without optional epoll library
[2019-03-05 17:27:33] - [main] - io.lettuce.core.KqueueProvider.<clinit>(KqueueProvider.java:70) - Starting without optional kqueue library
[2019-03-05 17:27:33] - [main] - org.springframework.scheduling.concurrent.ExecutorConfigurationSupport.initialize(ExecutorConfigurationSupport.java:171) - Initializing ExecutorService 'applicationTaskExecutor'
[2019-03-05 17:27:34] - [main] - com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:110) - HikariPool-1 - Starting...
[2019-03-05 17:27:34] - [main] - com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:123) - HikariPool-1 - Start completed.
[2019-03-05 17:27:34] - [main] - org.quartz.impl.StdSchedulerFactory.instantiate(StdSchedulerFactory.java:1208) - Using default implementation for ThreadExecutor
[2019-03-05 17:27:34] - [main] - org.quartz.core.SchedulerSignalerImpl.<init>(SchedulerSignalerImpl.java:61) - Initialized Scheduler Signaller of type: class org.quartz.core.SchedulerSignalerImpl
[2019-03-05 17:27:34] - [main] - org.quartz.core.QuartzScheduler.<init>(QuartzScheduler.java:229) - Quartz Scheduler v.2.3.0 created.
[2019-03-05 17:27:34] - [main] - org.quartz.simpl.RAMJobStore.initialize(RAMJobStore.java:155) - RAMJobStore initialized.
[2019-03-05 17:27:34] - [main] - org.quartz.core.QuartzScheduler.initialize(QuartzScheduler.java:294) - Scheduler meta-data: Quartz Scheduler (v2.3.0) 'quartzScheduler' with instanceId 'NON_CLUSTERED'
  Scheduler class: 'org.quartz.core.QuartzScheduler' - running locally.
  NOT STARTED.
  Currently in standby mode.
  Number of jobs executed: 0
  Using thread pool 'org.quartz.simpl.SimpleThreadPool' - with 10 threads.
  Using job-store 'org.quartz.simpl.RAMJobStore' - which does not support persistence. and is not clustered.

[2019-03-05 17:27:34] - [main] - org.quartz.impl.StdSchedulerFactory.instantiate(StdSchedulerFactory.java:1362) - Quartz scheduler 'quartzScheduler' initialized from an externally provided properties instance.
[2019-03-05 17:27:34] - [main] - org.quartz.impl.StdSchedulerFactory.instantiate(StdSchedulerFactory.java:1366) - Quartz scheduler version: 2.3.0
[2019-03-05 17:27:34] - [main] - org.quartz.core.QuartzScheduler.setJobFactory(QuartzScheduler.java:2287) - JobFactory set to: org.springframework.scheduling.quartz.SpringBeanJobFactory@45cb5307
[2019-03-05 17:27:34] - [main] - org.springframework.scheduling.quartz.SchedulerFactoryBean.startScheduler(SchedulerFactoryBean.java:726) - Starting Quartz Scheduler now
[2019-03-05 17:27:34] - [main] - org.quartz.core.QuartzScheduler.start(QuartzScheduler.java:547) - Scheduler quartzScheduler_$_NON_CLUSTERED started.
[2019-03-05 17:27:34] - [main] - org.springframework.scheduling.annotation.ScheduledAnnotationBeanPostProcessor.finishRegistration(ScheduledAnnotationBeanPostProcessor.java:295) - No TaskScheduler/ScheduledExecutorService bean found for scheduled processing
[2019-03-05 17:27:34] - [main] - org.apache.juli.logging.DirectJDKLog.log(DirectJDKLog.java:173) - Starting ProtocolHandler ["http-nio-0.0.0.0-8080"]
[2019-03-05 17:27:34] - [main] - org.springframework.boot.web.embedded.tomcat.TomcatWebServer.start(TomcatWebServer.java:204) - Tomcat started on port(s): 8080 (http) with context path ''
[2019-03-05 17:27:34] - [main] - org.springframework.boot.StartupInfoLogger.logStarted(StartupInfoLogger.java:59) - Started ApitestApplication in 3.955 seconds (JVM running for 5.761)
[2019-03-05 17:27:50] - [http-nio-0.0.0.0-8080-exec-2] - org.apache.juli.logging.DirectJDKLog.log(DirectJDKLog.java:173) - Initializing Spring DispatcherServlet 'dispatcherServlet'
[2019-03-05 17:27:50] - [http-nio-0.0.0.0-8080-exec-2] - org.springframework.web.servlet.FrameworkServlet.initServletBean(FrameworkServlet.java:524) - Initializing Servlet 'dispatcherServlet'
[2019-03-05 17:27:50] - [http-nio-0.0.0.0-8080-exec-2] - org.springframework.web.servlet.FrameworkServlet.initServletBean(FrameworkServlet.java:546) - Completed initialization in 9 ms
[2019-03-05 17:27:50] - [http-nio-0.0.0.0-8080-exec-2] - com.apitest.api.impl.LoginServiceImpl.loginService(LoginServiceImpl.java:35) - 用户名: admin
[2019-03-05 17:27:50] - [http-nio-0.0.0.0-8080-exec-2] - com.apitest.api.impl.LoginServiceImpl.loginService(LoginServiceImpl.java:36) - 密码: 123456
[2019-03-05 17:27:50] - [http-nio-0.0.0.0-8080-exec-2] - com.apitest.api.impl.LoginServiceImpl.loginService(LoginServiceImpl.java:58) - 返回结果: ServerResponse(status=1, message=登录成功, data=User(id=1, username=admin, email=shayang.huang@dbjtech.com, password=$2a$10$2YxN79EDB.D1RD724JLBE.3G6RoM8c9XftS4jB/TpTwM5Co6AIIrm, createTime=2019-03-05 17:27:50.793, updateTime=2019-03-05 17:27:50.793))
[2019-03-05 17:27:50] - [http-nio-0.0.0.0-8080-exec-2] - com.apitest.api.impl.LoginServiceImpl.loginService(LoginServiceImpl.java:59) - 线程名: http-nio-0.0.0.0-8080-exec-2,线程id: 67,线程状态: RUNNABLE
[2019-03-05 17:30:31] - [Thread-2] - org.quartz.core.QuartzScheduler.standby(QuartzScheduler.java:585) - Scheduler quartzScheduler_$_NON_CLUSTERED paused.
[2019-03-05 17:30:31] - [Thread-2] - org.springframework.scheduling.quartz.SchedulerFactoryBean.destroy(SchedulerFactoryBean.java:844) - Shutting down Quartz Scheduler
[2019-03-05 17:30:31] - [Thread-2] - org.quartz.core.QuartzScheduler.shutdown(QuartzScheduler.java:666) - Scheduler quartzScheduler_$_NON_CLUSTERED shutting down.
[2019-03-05 17:30:31] - [Thread-2] - org.quartz.core.QuartzScheduler.standby(QuartzScheduler.java:585) - Scheduler quartzScheduler_$_NON_CLUSTERED paused.
[2019-03-05 17:30:31] - [Thread-2] - org.quartz.core.QuartzScheduler.shutdown(QuartzScheduler.java:740) - Scheduler quartzScheduler_$_NON_CLUSTERED shutdown complete.
[2019-03-05 17:30:31] - [Thread-2] - org.springframework.scheduling.concurrent.ExecutorConfigurationSupport.shutdown(ExecutorConfigurationSupport.java:208) - Shutting down ExecutorService 'applicationTaskExecutor'
[2019-03-05 17:30:31] - [Thread-2] - com.zaxxer.hikari.HikariDataSource.close(HikariDataSource.java:350) - HikariPool-1 - Shutdown initiated...
[2019-03-05 17:30:31] - [Thread-2] - com.zaxxer.hikari.HikariDataSource.close(HikariDataSource.java:352) - HikariPool-1 - Shutdown completed.
[2019-03-05 17:31:04] - [main] - org.springframework.boot.StartupInfoLogger.logStarting(StartupInfoLogger.java:50) - Starting ApitestApplication on huangshayangdeMacBook-Pro.local with PID 34712 (/Users/huangshayang/IdeaProjects/SpringBootApiTest/target/classes started by huangshayang in /Users/huangshayang/IdeaProjects/SpringBootApiTest)
[2019-03-05 17:31:04] - [main] - org.springframework.boot.SpringApplication.logStartupProfileInfo(SpringApplication.java:675) - No active profile set, falling back to default profiles: default
[2019-03-05 17:31:04] - [main] - org.springframework.data.repository.config.RepositoryConfigurationDelegate.multipleStoresDetected(RepositoryConfigurationDelegate.java:244) - Multiple Spring Data modules found, entering strict repository configuration mode!
[2019-03-05 17:31:04] - [main] - org.springframework.data.repository.config.RepositoryConfigurationDelegate.registerRepositoriesIn(RepositoryConfigurationDelegate.java:126) - Bootstrapping Spring Data repositories in DEFAULT mode.
[2019-03-05 17:31:04] - [main] - org.springframework.data.repository.config.RepositoryConfigurationDelegate.registerRepositoriesIn(RepositoryConfigurationDelegate.java:182) - Finished Spring Data repository scanning in 14ms. Found 0 repository interfaces.
[2019-03-05 17:31:05] - [main] - org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization(PostProcessorRegistrationDelegate.java:330) - Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$a1bb41fc] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2019-03-05 17:31:05] - [main] - org.springframework.boot.web.embedded.tomcat.TomcatWebServer.initialize(TomcatWebServer.java:90) - Tomcat initialized with port(s): 8080 (http)
[2019-03-05 17:31:05] - [main] - org.apache.juli.logging.DirectJDKLog.log(DirectJDKLog.java:173) - Initializing ProtocolHandler ["http-nio-0.0.0.0-8080"]
[2019-03-05 17:31:05] - [main] - org.apache.juli.logging.DirectJDKLog.log(DirectJDKLog.java:173) - Starting service [Tomcat]
[2019-03-05 17:31:05] - [main] - org.apache.juli.logging.DirectJDKLog.log(DirectJDKLog.java:173) - Starting Servlet engine: [Apache Tomcat/9.0.16]
[2019-03-05 17:31:05] - [main] - org.apache.juli.logging.DirectJDKLog.log(DirectJDKLog.java:173) - The APR based Apache Tomcat Native library which allows optimal performance in production environments was not found on the java.library.path: [/Users/huangshayang/Library/Java/Extensions:/Library/Java/Extensions:/Network/Library/Java/Extensions:/System/Library/Java/Extensions:/usr/lib/java:.]
[2019-03-05 17:31:05] - [main] - org.apache.juli.logging.DirectJDKLog.log(DirectJDKLog.java:173) - Initializing Spring embedded WebApplicationContext
[2019-03-05 17:31:05] - [main] - org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.prepareWebApplicationContext(ServletWebServerApplicationContext.java:296) - Root WebApplicationContext: initialization completed in 1238 ms
[2019-03-05 17:31:05] - [main] - org.quartz.impl.StdSchedulerFactory.instantiate(StdSchedulerFactory.java:1208) - Using default implementation for ThreadExecutor
[2019-03-05 17:31:05] - [main] - org.quartz.simpl.SimpleThreadPool.initialize(SimpleThreadPool.java:268) - Job execution threads will use class loader of thread: main
[2019-03-05 17:31:05] - [main] - org.quartz.core.SchedulerSignalerImpl.<init>(SchedulerSignalerImpl.java:61) - Initialized Scheduler Signaller of type: class org.quartz.core.SchedulerSignalerImpl
[2019-03-05 17:31:05] - [main] - org.quartz.core.QuartzScheduler.<init>(QuartzScheduler.java:229) - Quartz Scheduler v.2.3.0 created.
[2019-03-05 17:31:05] - [main] - org.quartz.simpl.RAMJobStore.initialize(RAMJobStore.java:155) - RAMJobStore initialized.
[2019-03-05 17:31:05] - [main] - org.quartz.core.QuartzScheduler.initialize(QuartzScheduler.java:294) - Scheduler meta-data: Quartz Scheduler (v2.3.0) 'DefaultQuartzScheduler' with instanceId 'NON_CLUSTERED'
  Scheduler class: 'org.quartz.core.QuartzScheduler' - running locally.
  NOT STARTED.
  Currently in standby mode.
  Number of jobs executed: 0
  Using thread pool 'org.quartz.simpl.SimpleThreadPool' - with 10 threads.
  Using job-store 'org.quartz.simpl.RAMJobStore' - which does not support persistence. and is not clustered.

[2019-03-05 17:31:05] - [main] - org.quartz.impl.StdSchedulerFactory.instantiate(StdSchedulerFactory.java:1362) - Quartz scheduler 'DefaultQuartzScheduler' initialized from default resource file in Quartz package: 'quartz.properties'
[2019-03-05 17:31:05] - [main] - org.quartz.impl.StdSchedulerFactory.instantiate(StdSchedulerFactory.java:1366) - Quartz scheduler version: 2.3.0
[2019-03-05 17:31:05] - [main] - org.quartz.core.QuartzScheduler.start(QuartzScheduler.java:547) - Scheduler DefaultQuartzScheduler_$_NON_CLUSTERED started.
[2019-03-05 17:31:06] - [main] - io.lettuce.core.EpollProvider.<clinit>(EpollProvider.java:68) - Starting without optional epoll library
[2019-03-05 17:31:06] - [main] - io.lettuce.core.KqueueProvider.<clinit>(KqueueProvider.java:70) - Starting without optional kqueue library
[2019-03-05 17:31:06] - [main] - org.springframework.scheduling.concurrent.ExecutorConfigurationSupport.initialize(ExecutorConfigurationSupport.java:171) - Initializing ExecutorService 'applicationTaskExecutor'
[2019-03-05 17:31:06] - [main] - com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:110) - HikariPool-1 - Starting...
[2019-03-05 17:31:06] - [main] - com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:123) - HikariPool-1 - Start completed.
[2019-03-05 17:31:06] - [main] - org.quartz.impl.StdSchedulerFactory.instantiate(StdSchedulerFactory.java:1208) - Using default implementation for ThreadExecutor
[2019-03-05 17:31:06] - [main] - org.quartz.core.SchedulerSignalerImpl.<init>(SchedulerSignalerImpl.java:61) - Initialized Scheduler Signaller of type: class org.quartz.core.SchedulerSignalerImpl
[2019-03-05 17:31:06] - [main] - org.quartz.core.QuartzScheduler.<init>(QuartzScheduler.java:229) - Quartz Scheduler v.2.3.0 created.
[2019-03-05 17:31:06] - [main] - org.quartz.simpl.RAMJobStore.initialize(RAMJobStore.java:155) - RAMJobStore initialized.
[2019-03-05 17:31:06] - [main] - org.quartz.core.QuartzScheduler.initialize(QuartzScheduler.java:294) - Scheduler meta-data: Quartz Scheduler (v2.3.0) 'quartzScheduler' with instanceId 'NON_CLUSTERED'
  Scheduler class: 'org.quartz.core.QuartzScheduler' - running locally.
  NOT STARTED.
  Currently in standby mode.
  Number of jobs executed: 0
  Using thread pool 'org.quartz.simpl.SimpleThreadPool' - with 10 threads.
  Using job-store 'org.quartz.simpl.RAMJobStore' - which does not support persistence. and is not clustered.

[2019-03-05 17:31:06] - [main] - org.quartz.impl.StdSchedulerFactory.instantiate(StdSchedulerFactory.java:1362) - Quartz scheduler 'quartzScheduler' initialized from an externally provided properties instance.
[2019-03-05 17:31:06] - [main] - org.quartz.impl.StdSchedulerFactory.instantiate(StdSchedulerFactory.java:1366) - Quartz scheduler version: 2.3.0
[2019-03-05 17:31:06] - [main] - org.quartz.core.QuartzScheduler.setJobFactory(QuartzScheduler.java:2287) - JobFactory set to: org.springframework.scheduling.quartz.SpringBeanJobFactory@2c0a3826
[2019-03-05 17:31:07] - [main] - org.springframework.scheduling.quartz.SchedulerFactoryBean.startScheduler(SchedulerFactoryBean.java:726) - Starting Quartz Scheduler now
[2019-03-05 17:31:07] - [main] - org.quartz.core.QuartzScheduler.start(QuartzScheduler.java:547) - Scheduler quartzScheduler_$_NON_CLUSTERED started.
[2019-03-05 17:31:07] - [main] - org.springframework.scheduling.annotation.ScheduledAnnotationBeanPostProcessor.finishRegistration(ScheduledAnnotationBeanPostProcessor.java:295) - No TaskScheduler/ScheduledExecutorService bean found for scheduled processing
[2019-03-05 17:31:07] - [main] - org.apache.juli.logging.DirectJDKLog.log(DirectJDKLog.java:173) - Starting ProtocolHandler ["http-nio-0.0.0.0-8080"]
[2019-03-05 17:31:07] - [main] - org.springframework.boot.web.embedded.tomcat.TomcatWebServer.start(TomcatWebServer.java:204) - Tomcat started on port(s): 8080 (http) with context path ''
[2019-03-05 17:31:07] - [main] - org.springframework.boot.StartupInfoLogger.logStarted(StartupInfoLogger.java:59) - Started ApitestApplication in 3.663 seconds (JVM running for 5.277)
[2019-03-05 17:31:15] - [http-nio-0.0.0.0-8080-exec-2] - org.apache.juli.logging.DirectJDKLog.log(DirectJDKLog.java:173) - Initializing Spring DispatcherServlet 'dispatcherServlet'
[2019-03-05 17:31:15] - [http-nio-0.0.0.0-8080-exec-2] - org.springframework.web.servlet.FrameworkServlet.initServletBean(FrameworkServlet.java:524) - Initializing Servlet 'dispatcherServlet'
[2019-03-05 17:31:15] - [http-nio-0.0.0.0-8080-exec-2] - org.springframework.web.servlet.FrameworkServlet.initServletBean(FrameworkServlet.java:546) - Completed initialization in 11 ms
[2019-03-05 17:31:33] - [http-nio-0.0.0.0-8080-exec-6] - com.apitest.api.impl.ApiServiceImpl.queryAllApiService(ApiServiceImpl.java:81) - 返回结果: ServerResponse(status=1, message=查询接口成功, data=PageInfo{pageNum=1, pageSize=10, size=10, startRow=1, endRow=10, total=49, pages=5, list=Page{count=true, pageNum=1, pageSize=10, startRow=0, endRow=10, total=49, pages=5, reasonable=true, pageSizeZero=true}[Apis(id=1, url=/login, createTime=2019-03-05 17:31:33.11, method=post, envId=null, updateTime=2019-03-05 17:31:33.11, cookie=false, name=登录), Apis(id=3, url=/profile, createTime=2019-03-05 17:31:33.111, method=get, envId=null, updateTime=2019-03-05 17:31:33.111, cookie=true, name=获取用户资料), Apis(id=4, url=/profile, createTime=2019-03-05 17:31:33.111, method=put, envId=null, updateTime=2019-03-05 17:31:33.111, cookie=true, name=修改用户资料), Apis(id=5, url=/notification-methods, createTime=2019-03-05 17:31:33.111, method=get, envId=null, updateTime=2019-03-05 17:31:33.111, cookie=true, name=获取通知方式), Apis(id=6, url=/notification-methods, createTime=2019-03-05 17:31:33.111, method=put, envId=null, updateTime=2019-03-05 17:31:33.111, cookie=true, name=修改通知方式), Apis(id=7, url=/organizations, createTime=2019-03-05 17:31:33.111, method=get, envId=null, updateTime=2019-03-05 17:31:33.111, cookie=true, name=获取组织), Apis(id=8, url=/organizations, createTime=2019-03-05 17:31:33.112, method=post, envId=null, updateTime=2019-03-05 17:31:33.112, cookie=true, name=创建组织), Apis(id=9, url=/organizations/{org_id}/members, createTime=2019-03-05 17:31:33.112, method=get, envId=null, updateTime=2019-03-05 17:31:33.112, cookie=true, name=获取组织下的成员列表), Apis(id=10, url=/organizations/{org_id}/departments, createTime=2019-03-05 17:31:33.112, method=get, envId=null, updateTime=2019-03-05 17:31:33.112, cookie=true, name=获取组织下的部门), Apis(id=11, url=/organizations/{org_id}/departments, createTime=2019-03-05 17:31:33.112, method=post, envId=null, updateTime=2019-03-05 17:31:33.112, cookie=true, name=新建部门)], prePage=0, nextPage=2, isFirstPage=true, isLastPage=false, hasPreviousPage=false, hasNextPage=true, navigatePages=8, navigateFirstPage=1, navigateLastPage=5, navigatepageNums=[1, 2, 3, 4, 5]})
[2019-03-05 17:31:33] - [http-nio-0.0.0.0-8080-exec-6] - com.apitest.api.impl.ApiServiceImpl.queryAllApiService(ApiServiceImpl.java:82) - 线程名: http-nio-0.0.0.0-8080-exec-6,线程id: 71,线程状态: RUNNABLE
[2019-03-05 17:31:38] - [http-nio-0.0.0.0-8080-exec-7] - com.apitest.api.impl.ApiServiceImpl.queryAllApiService(ApiServiceImpl.java:81) - 返回结果: ServerResponse(status=1, message=查询接口成功, data=PageInfo{pageNum=1, pageSize=100, size=49, startRow=1, endRow=49, total=49, pages=1, list=Page{count=true, pageNum=1, pageSize=100, startRow=0, endRow=100, total=49, pages=1, reasonable=true, pageSizeZero=true}[Apis(id=1, url=/login, createTime=2019-03-05 17:31:38.944, method=post, envId=null, updateTime=2019-03-05 17:31:38.944, cookie=false, name=登录), Apis(id=3, url=/profile, createTime=2019-03-05 17:31:38.944, method=get, envId=null, updateTime=2019-03-05 17:31:38.944, cookie=true, name=获取用户资料), Apis(id=4, url=/profile, createTime=2019-03-05 17:31:38.944, method=put, envId=null, updateTime=2019-03-05 17:31:38.944, cookie=true, name=修改用户资料), Apis(id=5, url=/notification-methods, createTime=2019-03-05 17:31:38.945, method=get, envId=null, updateTime=2019-03-05 17:31:38.945, cookie=true, name=获取通知方式), Apis(id=6, url=/notification-methods, createTime=2019-03-05 17:31:38.945, method=put, envId=null, updateTime=2019-03-05 17:31:38.945, cookie=true, name=修改通知方式), Apis(id=7, url=/organizations, createTime=2019-03-05 17:31:38.945, method=get, envId=null, updateTime=2019-03-05 17:31:38.945, cookie=true, name=获取组织), Apis(id=8, url=/organizations, createTime=2019-03-05 17:31:38.947, method=post, envId=null, updateTime=2019-03-05 17:31:38.947, cookie=true, name=创建组织), Apis(id=9, url=/organizations/{org_id}/members, createTime=2019-03-05 17:31:38.947, method=get, envId=null, updateTime=2019-03-05 17:31:38.947, cookie=true, name=获取组织下的成员列表), Apis(id=10, url=/organizations/{org_id}/departments, createTime=2019-03-05 17:31:38.947, method=get, envId=null, updateTime=2019-03-05 17:31:38.947, cookie=true, name=获取组织下的部门), Apis(id=11, url=/organizations/{org_id}/departments, createTime=2019-03-05 17:31:38.947, method=post, envId=null, updateTime=2019-03-05 17:31:38.947, cookie=true, name=新建部门), Apis(id=12, url=/alert-rule-patterns, createTime=2019-03-05 17:31:38.947, method=get, envId=null, updateTime=2019-03-05 17:31:38.947, cookie=true, name=获取告警规则的模块), Apis(id=13, url=/departments/{dpt_id}/members, createTime=2019-03-05 17:31:38.947, method=get, envId=null, updateTime=2019-03-05 17:31:38.947, cookie=true, name=获取部门所有成员), Apis(id=14, url=/departments/4/members, createTime=2019-03-05 17:31:38.947, method=post, envId=null, updateTime=2019-03-05 17:31:38.947, cookie=true, name=添加部门成员), Apis(id=15, url=/departments/{dpt_id}/members/{member_id}, createTime=2019-03-05 17:31:38.947, method=get, envId=null, updateTime=2019-03-05 17:31:38.947, cookie=true, name=获取单个部门成员), Apis(id=16, url=/vehicles/{vehicle-id}/cooler, createTime=2019-03-05 17:31:38.947, method=get, envId=null, updateTime=2019-03-05 17:31:38.947, cookie=true, name=获取空调主机信息), Apis(id=17, url=/vehicles/{vehicle-id}/cooler/log, createTime=2019-03-05 17:31:38.948, method=get, envId=null, updateTime=2019-03-05 17:31:38.948, cookie=true, name=获取空调主机信息变更记录), Apis(id=26, url=/departments/27/members/4, createTime=2019-03-05 17:31:38.948, method=put, envId=null, updateTime=2019-03-05 17:31:38.948, cookie=true, name=编辑部门成员), Apis(id=27, url=/departments/{dpt_id}/members/{member_id}, createTime=2019-03-05 17:31:38.948, method=delete, envId=null, updateTime=2019-03-05 17:31:38.948, cookie=true, name=删除部门成员), Apis(id=28, url=/departments/27/members/4/message, createTime=2019-03-05 17:31:38.948, method=post, envId=null, updateTime=2019-03-05 17:31:38.948, cookie=true, name=给部门成员发送消息), Apis(id=29, url=/organizations/{org_id}/join-requests/pendings, createTime=2019-03-05 17:31:38.948, method=get, envId=null, updateTime=2019-03-05 17:31:38.948, cookie=true, name=获取未处理申请数量), Apis(id=30, url=/organizations/2/members/3, createTime=2019-03-05 17:31:38.948, method=put, envId=null, updateTime=2019-03-05 17:31:38.948, cookie=true, name=修改组织成员), Apis(id=40, url=/organizations/{org_id}/members/{member_id}, createTime=2019-03-05 17:31:38.948, method=delete, envId=null, updateTime=2019-03-05 17:31:38.948, cookie=true, name=删除组织成员), Apis(id=41, url=/organizations/{org_id}/join-requests, createTime=2019-03-05 17:31:38.949, method=get, envId=null, updateTime=2019-03-05 17:31:38.949, cookie=true, name=获取审核列表), Apis(id=42, url=/members/{member_id}/punch-infos, createTime=2019-03-05 17:31:38.949, method=get, envId=null, updateTime=2019-03-05 17:31:38.949, cookie=true, name=获取驾驶员用车历史), Apis(id=43, url=/departments/{id}/vehicles?label_ids={label_ids}, createTime=2019-03-05 17:31:38.949, method=get, envId=null, updateTime=2019-03-05 17:31:38.949, cookie=true, name=获取部门下车辆列表), Apis(id=44, url=/departments/{dpt_id}/labels, createTime=2019-03-05 17:31:38.949, method=get, envId=null, updateTime=2019-03-05 17:31:38.949, cookie=true, name=获取标签列表), Apis(id=45, url=/departments/27/labels, createTime=2019-03-05 17:31:38.949, method=post, envId=null, updateTime=2019-03-05 17:31:38.949, cookie=true, name=创建标签), Apis(id=46, url=/labels/233, createTime=2019-03-05 17:31:38.949, method=put, envId=null, updateTime=2019-03-05 17:31:38.949, cookie=true, name=修改单个标签), Apis(id=47, url=/labels/{label_id}, createTime=2019-03-05 17:31:38.949, method=delete, envId=null, updateTime=2019-03-05 17:31:38.949, cookie=true, name=删除标签), Apis(id=48, url=/vehicles/labels, createTime=2019-03-05 17:31:38.949, method=put, envId=null, updateTime=2019-03-05 17:31:38.949, cookie=true, name=批量车辆标签设置), Apis(id=49, url=/departments/{dpt_id}/fences, createTime=2019-03-05 17:31:38.95, method=get, envId=null, updateTime=2019-03-05 17:31:38.95, cookie=true, name=获取部门围栏列表), Apis(id=50, url=/departments/27/fences, createTime=2019-03-05 17:31:38.95, method=post, envId=null, updateTime=2019-03-05 17:31:38.95, cookie=true, name=创建部门围栏), Apis(id=51, url=/fences/{id}, createTime=2019-03-05 17:31:38.95, method=get, envId=null, updateTime=2019-03-05 17:31:38.95, cookie=true, name=获取围栏详情), Apis(id=52, url=/fences/16, createTime=2019-03-05 17:31:38.95, method=put, envId=null, updateTime=2019-03-05 17:31:38.95, cookie=true, name=修改围栏), Apis(id=53, url=/fences/{fence_id}, createTime=2019-03-05 17:31:38.95, method=delete, envId=null, updateTime=2019-03-05 17:31:38.95, cookie=true, name=删除围栏), Apis(id=57, url=/vehicles/{id}/fences, createTime=2019-03-05 17:31:38.95, method=get, envId=null, updateTime=2019-03-05 17:31:38.95, cookie=true, name=获取车辆关联的围栏), Apis(id=58, url=/vehicles/{id}/fences, createTime=2019-03-05 17:31:38.95, method=put, envId=null, updateTime=2019-03-05 17:31:38.95, cookie=true, name=修改车辆关联围栏), Apis(id=59, url=/departments/{dpt_id}/maintenance-plans, createTime=2019-03-05 17:31:38.95, method=get, envId=null, updateTime=2019-03-05 17:31:38.95, cookie=true, name=获取部门保养列表), Apis(id=60, url=/departments/27/maintenance-plans, createTime=2019-03-05 17:31:38.951, method=post, envId=null, updateTime=2019-03-05 17:31:38.951, cookie=true, name=创建保养计划), Apis(id=61, url=/maintenance-plans/{id}, createTime=2019-03-05 17:31:38.951, method=get, envId=null, updateTime=2019-03-05 17:31:38.951, cookie=true, name=获取保养计划详情), Apis(id=62, url=/maintenance-plans/14, createTime=2019-03-05 17:31:38.951, method=put, envId=null, updateTime=2019-03-05 17:31:38.951, cookie=true, name=修改保养计划), Apis(id=63, url=/maintenance-plans/{id}, createTime=2019-03-05 17:31:38.951, method=delete, envId=null, updateTime=2019-03-05 17:31:38.951, cookie=true, name=删除保养), Apis(id=64, url=/departments/{dept_id}/tasks, createTime=2019-03-05 17:31:38.951, method=get, envId=null, updateTime=2019-03-05 17:31:38.951, cookie=true, name=获取任务列表), Apis(id=65, url=/departments/{dpt_id}/tasks, createTime=2019-03-05 17:31:38.951, method=post, envId=null, updateTime=2019-03-05 17:31:38.951, cookie=true, name=添加任务), Apis(id=66, url=/departments/{dpt_id}/tasks, createTime=2019-03-05 17:31:38.951, method=put, envId=null, updateTime=2019-03-05 17:31:38.951, cookie=true, name=更新任务), Apis(id=67, url=/departments/{dept_id}/tasks/alert-conditions?task_id=a6ffccfb-35bc-4d8f-8de0-9f17da7fd58f, createTime=2019-03-05 17:31:38.951, method=get, envId=null, updateTime=2019-03-05 17:31:38.951, cookie=true, name=获取告警条件列表), Apis(id=68, url=/departments/{dpt_id}/tasks/alert-conditions, createTime=2019-03-05 17:31:38.952, method=post, envId=null, updateTime=2019-03-05 17:31:38.952, cookie=true, name=添加告警条件), Apis(id=69, url=/departments/44/tasks/alert-conditions?task_id=a6ffccfb-35bc-4d8f-8de0-9f17da7fd58f, createTime=2019-03-05 17:31:38.952, method=delete, envId=null, updateTime=2019-03-05 17:31:38.952, cookie=true, name=删除告警条件), Apis(id=70, url=/reports/departments/{dpt_id}/alerts, createTime=2019-03-05 17:31:38.952, method=post, envId=null, updateTime=2019-03-05 17:31:38.952, cookie=true, name=告警报表)], prePage=0, nextPage=0, isFirstPage=true, isLastPage=true, hasPreviousPage=false, hasNextPage=false, navigatePages=8, navigateFirstPage=1, navigateLastPage=1, navigatepageNums=[1]})
[2019-03-05 17:31:38] - [http-nio-0.0.0.0-8080-exec-7] - com.apitest.api.impl.ApiServiceImpl.queryAllApiService(ApiServiceImpl.java:82) - 线程名: http-nio-0.0.0.0-8080-exec-7,线程id: 72,线程状态: RUNNABLE
[2019-03-05 17:33:21] - [Thread-2] - org.quartz.core.QuartzScheduler.standby(QuartzScheduler.java:585) - Scheduler quartzScheduler_$_NON_CLUSTERED paused.
[2019-03-05 17:33:21] - [Thread-2] - org.springframework.scheduling.quartz.SchedulerFactoryBean.destroy(SchedulerFactoryBean.java:844) - Shutting down Quartz Scheduler
[2019-03-05 17:33:21] - [Thread-2] - org.quartz.core.QuartzScheduler.shutdown(QuartzScheduler.java:666) - Scheduler quartzScheduler_$_NON_CLUSTERED shutting down.
[2019-03-05 17:33:21] - [Thread-2] - org.quartz.core.QuartzScheduler.standby(QuartzScheduler.java:585) - Scheduler quartzScheduler_$_NON_CLUSTERED paused.
[2019-03-05 17:33:21] - [Thread-2] - org.quartz.core.QuartzScheduler.shutdown(QuartzScheduler.java:740) - Scheduler quartzScheduler_$_NON_CLUSTERED shutdown complete.
[2019-03-05 17:33:21] - [Thread-2] - org.springframework.scheduling.concurrent.ExecutorConfigurationSupport.shutdown(ExecutorConfigurationSupport.java:208) - Shutting down ExecutorService 'applicationTaskExecutor'
[2019-03-05 17:33:21] - [Thread-2] - com.zaxxer.hikari.HikariDataSource.close(HikariDataSource.java:350) - HikariPool-1 - Shutdown initiated...
[2019-03-05 17:33:21] - [Thread-2] - com.zaxxer.hikari.HikariDataSource.close(HikariDataSource.java:352) - HikariPool-1 - Shutdown completed.
[2019-03-05 17:33:26] - [main] - org.springframework.boot.StartupInfoLogger.logStarting(StartupInfoLogger.java:50) - Starting ApitestApplication on huangshayangdeMacBook-Pro.local with PID 34722 (/Users/huangshayang/IdeaProjects/SpringBootApiTest/target/classes started by huangshayang in /Users/huangshayang/IdeaProjects/SpringBootApiTest)
[2019-03-05 17:33:26] - [main] - org.springframework.boot.SpringApplication.logStartupProfileInfo(SpringApplication.java:675) - No active profile set, falling back to default profiles: default
[2019-03-05 17:33:26] - [main] - org.springframework.data.repository.config.RepositoryConfigurationDelegate.multipleStoresDetected(RepositoryConfigurationDelegate.java:244) - Multiple Spring Data modules found, entering strict repository configuration mode!
[2019-03-05 17:33:26] - [main] - org.springframework.data.repository.config.RepositoryConfigurationDelegate.registerRepositoriesIn(RepositoryConfigurationDelegate.java:126) - Bootstrapping Spring Data repositories in DEFAULT mode.
[2019-03-05 17:33:26] - [main] - org.springframework.data.repository.config.RepositoryConfigurationDelegate.registerRepositoriesIn(RepositoryConfigurationDelegate.java:182) - Finished Spring Data repository scanning in 16ms. Found 0 repository interfaces.
[2019-03-05 17:33:27] - [main] - org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization(PostProcessorRegistrationDelegate.java:330) - Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$6b6ada42] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2019-03-05 17:33:27] - [main] - org.springframework.boot.web.embedded.tomcat.TomcatWebServer.initialize(TomcatWebServer.java:90) - Tomcat initialized with port(s): 8080 (http)
[2019-03-05 17:33:27] - [main] - org.apache.juli.logging.DirectJDKLog.log(DirectJDKLog.java:173) - Initializing ProtocolHandler ["http-nio-0.0.0.0-8080"]
[2019-03-05 17:33:27] - [main] - org.apache.juli.logging.DirectJDKLog.log(DirectJDKLog.java:173) - Starting service [Tomcat]
[2019-03-05 17:33:27] - [main] - org.apache.juli.logging.DirectJDKLog.log(DirectJDKLog.java:173) - Starting Servlet engine: [Apache Tomcat/9.0.16]
[2019-03-05 17:33:27] - [main] - org.apache.juli.logging.DirectJDKLog.log(DirectJDKLog.java:173) - The APR based Apache Tomcat Native library which allows optimal performance in production environments was not found on the java.library.path: [/Users/huangshayang/Library/Java/Extensions:/Library/Java/Extensions:/Network/Library/Java/Extensions:/System/Library/Java/Extensions:/usr/lib/java:.]
[2019-03-05 17:33:27] - [main] - org.apache.juli.logging.DirectJDKLog.log(DirectJDKLog.java:173) - Initializing Spring embedded WebApplicationContext
[2019-03-05 17:33:27] - [main] - org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.prepareWebApplicationContext(ServletWebServerApplicationContext.java:296) - Root WebApplicationContext: initialization completed in 1352 ms
[2019-03-05 17:33:28] - [main] - org.quartz.impl.StdSchedulerFactory.instantiate(StdSchedulerFactory.java:1208) - Using default implementation for ThreadExecutor
[2019-03-05 17:33:28] - [main] - org.quartz.simpl.SimpleThreadPool.initialize(SimpleThreadPool.java:268) - Job execution threads will use class loader of thread: main
[2019-03-05 17:33:28] - [main] - org.quartz.core.SchedulerSignalerImpl.<init>(SchedulerSignalerImpl.java:61) - Initialized Scheduler Signaller of type: class org.quartz.core.SchedulerSignalerImpl
[2019-03-05 17:33:28] - [main] - org.quartz.core.QuartzScheduler.<init>(QuartzScheduler.java:229) - Quartz Scheduler v.2.3.0 created.
[2019-03-05 17:33:28] - [main] - org.quartz.simpl.RAMJobStore.initialize(RAMJobStore.java:155) - RAMJobStore initialized.
[2019-03-05 17:33:28] - [main] - org.quartz.core.QuartzScheduler.initialize(QuartzScheduler.java:294) - Scheduler meta-data: Quartz Scheduler (v2.3.0) 'DefaultQuartzScheduler' with instanceId 'NON_CLUSTERED'
  Scheduler class: 'org.quartz.core.QuartzScheduler' - running locally.
  NOT STARTED.
  Currently in standby mode.
  Number of jobs executed: 0
  Using thread pool 'org.quartz.simpl.SimpleThreadPool' - with 10 threads.
  Using job-store 'org.quartz.simpl.RAMJobStore' - which does not support persistence. and is not clustered.

[2019-03-05 17:33:28] - [main] - org.quartz.impl.StdSchedulerFactory.instantiate(StdSchedulerFactory.java:1362) - Quartz scheduler 'DefaultQuartzScheduler' initialized from default resource file in Quartz package: 'quartz.properties'
[2019-03-05 17:33:28] - [main] - org.quartz.impl.StdSchedulerFactory.instantiate(StdSchedulerFactory.java:1366) - Quartz scheduler version: 2.3.0
[2019-03-05 17:33:28] - [main] - org.quartz.core.QuartzScheduler.start(QuartzScheduler.java:547) - Scheduler DefaultQuartzScheduler_$_NON_CLUSTERED started.
[2019-03-05 17:33:28] - [main] - io.lettuce.core.EpollProvider.<clinit>(EpollProvider.java:68) - Starting without optional epoll library
[2019-03-05 17:33:28] - [main] - io.lettuce.core.KqueueProvider.<clinit>(KqueueProvider.java:70) - Starting without optional kqueue library
[2019-03-05 17:33:28] - [main] - org.springframework.scheduling.concurrent.ExecutorConfigurationSupport.initialize(ExecutorConfigurationSupport.java:171) - Initializing ExecutorService 'applicationTaskExecutor'
[2019-03-05 17:33:28] - [main] - com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:110) - HikariPool-1 - Starting...
[2019-03-05 17:33:28] - [main] - com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:123) - HikariPool-1 - Start completed.
[2019-03-05 17:33:28] - [main] - org.quartz.impl.StdSchedulerFactory.instantiate(StdSchedulerFactory.java:1208) - Using default implementation for ThreadExecutor
[2019-03-05 17:33:28] - [main] - org.quartz.core.SchedulerSignalerImpl.<init>(SchedulerSignalerImpl.java:61) - Initialized Scheduler Signaller of type: class org.quartz.core.SchedulerSignalerImpl
[2019-03-05 17:33:28] - [main] - org.quartz.core.QuartzScheduler.<init>(QuartzScheduler.java:229) - Quartz Scheduler v.2.3.0 created.
[2019-03-05 17:33:28] - [main] - org.quartz.simpl.RAMJobStore.initialize(RAMJobStore.java:155) - RAMJobStore initialized.
[2019-03-05 17:33:28] - [main] - org.quartz.core.QuartzScheduler.initialize(QuartzScheduler.java:294) - Scheduler meta-data: Quartz Scheduler (v2.3.0) 'quartzScheduler' with instanceId 'NON_CLUSTERED'
  Scheduler class: 'org.quartz.core.QuartzScheduler' - running locally.
  NOT STARTED.
  Currently in standby mode.
  Number of jobs executed: 0
  Using thread pool 'org.quartz.simpl.SimpleThreadPool' - with 10 threads.
  Using job-store 'org.quartz.simpl.RAMJobStore' - which does not support persistence. and is not clustered.

[2019-03-05 17:33:28] - [main] - org.quartz.impl.StdSchedulerFactory.instantiate(StdSchedulerFactory.java:1362) - Quartz scheduler 'quartzScheduler' initialized from an externally provided properties instance.
[2019-03-05 17:33:28] - [main] - org.quartz.impl.StdSchedulerFactory.instantiate(StdSchedulerFactory.java:1366) - Quartz scheduler version: 2.3.0
[2019-03-05 17:33:28] - [main] - org.quartz.core.QuartzScheduler.setJobFactory(QuartzScheduler.java:2287) - JobFactory set to: org.springframework.scheduling.quartz.SpringBeanJobFactory@776e7dfb
[2019-03-05 17:33:29] - [main] - org.springframework.scheduling.quartz.SchedulerFactoryBean.startScheduler(SchedulerFactoryBean.java:726) - Starting Quartz Scheduler now
[2019-03-05 17:33:29] - [main] - org.quartz.core.QuartzScheduler.start(QuartzScheduler.java:547) - Scheduler quartzScheduler_$_NON_CLUSTERED started.
[2019-03-05 17:33:29] - [main] - org.springframework.scheduling.annotation.ScheduledAnnotationBeanPostProcessor.finishRegistration(ScheduledAnnotationBeanPostProcessor.java:295) - No TaskScheduler/ScheduledExecutorService bean found for scheduled processing
[2019-03-05 17:33:29] - [main] - org.apache.juli.logging.DirectJDKLog.log(DirectJDKLog.java:173) - Starting ProtocolHandler ["http-nio-0.0.0.0-8080"]
[2019-03-05 17:33:29] - [main] - org.springframework.boot.web.embedded.tomcat.TomcatWebServer.start(TomcatWebServer.java:204) - Tomcat started on port(s): 8080 (http) with context path ''
[2019-03-05 17:33:29] - [main] - org.springframework.boot.StartupInfoLogger.logStarted(StartupInfoLogger.java:59) - Started ApitestApplication in 3.834 seconds (JVM running for 5.52)
[2019-03-05 17:33:45] - [http-nio-0.0.0.0-8080-exec-2] - org.apache.juli.logging.DirectJDKLog.log(DirectJDKLog.java:173) - Initializing Spring DispatcherServlet 'dispatcherServlet'
[2019-03-05 17:33:45] - [http-nio-0.0.0.0-8080-exec-2] - org.springframework.web.servlet.FrameworkServlet.initServletBean(FrameworkServlet.java:524) - Initializing Servlet 'dispatcherServlet'
[2019-03-05 17:33:45] - [http-nio-0.0.0.0-8080-exec-2] - org.springframework.web.servlet.FrameworkServlet.initServletBean(FrameworkServlet.java:546) - Completed initialization in 8 ms
[2019-03-05 17:33:45] - [http-nio-0.0.0.0-8080-exec-2] - com.apitest.api.impl.ApiServiceImpl.queryAllApiService(ApiServiceImpl.java:81) - 返回结果: ServerResponse(status=1, message=查询接口成功, data=PageInfo{pageNum=1, pageSize=100, size=49, startRow=1, endRow=49, total=49, pages=1, list=Page{count=true, pageNum=1, pageSize=100, startRow=0, endRow=100, total=49, pages=1, reasonable=false, pageSizeZero=false}[Apis(id=1, url=/login, createTime=2019-03-05 17:33:45.716, method=post, envId=null, updateTime=2019-03-05 17:33:45.716, cookie=false, name=登录), Apis(id=3, url=/profile, createTime=2019-03-05 17:33:45.717, method=get, envId=null, updateTime=2019-03-05 17:33:45.717, cookie=true, name=获取用户资料), Apis(id=4, url=/profile, createTime=2019-03-05 17:33:45.717, method=put, envId=null, updateTime=2019-03-05 17:33:45.717, cookie=true, name=修改用户资料), Apis(id=5, url=/notification-methods, createTime=2019-03-05 17:33:45.717, method=get, envId=null, updateTime=2019-03-05 17:33:45.717, cookie=true, name=获取通知方式), Apis(id=6, url=/notification-methods, createTime=2019-03-05 17:33:45.718, method=put, envId=null, updateTime=2019-03-05 17:33:45.718, cookie=true, name=修改通知方式), Apis(id=7, url=/organizations, createTime=2019-03-05 17:33:45.718, method=get, envId=null, updateTime=2019-03-05 17:33:45.718, cookie=true, name=获取组织), Apis(id=8, url=/organizations, createTime=2019-03-05 17:33:45.718, method=post, envId=null, updateTime=2019-03-05 17:33:45.718, cookie=true, name=创建组织), Apis(id=9, url=/organizations/{org_id}/members, createTime=2019-03-05 17:33:45.718, method=get, envId=null, updateTime=2019-03-05 17:33:45.718, cookie=true, name=获取组织下的成员列表), Apis(id=10, url=/organizations/{org_id}/departments, createTime=2019-03-05 17:33:45.718, method=get, envId=null, updateTime=2019-03-05 17:33:45.718, cookie=true, name=获取组织下的部门), Apis(id=11, url=/organizations/{org_id}/departments, createTime=2019-03-05 17:33:45.719, method=post, envId=null, updateTime=2019-03-05 17:33:45.719, cookie=true, name=新建部门), Apis(id=12, url=/alert-rule-patterns, createTime=2019-03-05 17:33:45.719, method=get, envId=null, updateTime=2019-03-05 17:33:45.719, cookie=true, name=获取告警规则的模块), Apis(id=13, url=/departments/{dpt_id}/members, createTime=2019-03-05 17:33:45.719, method=get, envId=null, updateTime=2019-03-05 17:33:45.719, cookie=true, name=获取部门所有成员), Apis(id=14, url=/departments/4/members, createTime=2019-03-05 17:33:45.719, method=post, envId=null, updateTime=2019-03-05 17:33:45.719, cookie=true, name=添加部门成员), Apis(id=15, url=/departments/{dpt_id}/members/{member_id}, createTime=2019-03-05 17:33:45.72, method=get, envId=null, updateTime=2019-03-05 17:33:45.72, cookie=true, name=获取单个部门成员), Apis(id=16, url=/vehicles/{vehicle-id}/cooler, createTime=2019-03-05 17:33:45.72, method=get, envId=null, updateTime=2019-03-05 17:33:45.72, cookie=true, name=获取空调主机信息), Apis(id=17, url=/vehicles/{vehicle-id}/cooler/log, createTime=2019-03-05 17:33:45.721, method=get, envId=null, updateTime=2019-03-05 17:33:45.721, cookie=true, name=获取空调主机信息变更记录), Apis(id=26, url=/departments/27/members/4, createTime=2019-03-05 17:33:45.722, method=put, envId=null, updateTime=2019-03-05 17:33:45.722, cookie=true, name=编辑部门成员), Apis(id=27, url=/departments/{dpt_id}/members/{member_id}, createTime=2019-03-05 17:33:45.722, method=delete, envId=null, updateTime=2019-03-05 17:33:45.722, cookie=true, name=删除部门成员), Apis(id=28, url=/departments/27/members/4/message, createTime=2019-03-05 17:33:45.722, method=post, envId=null, updateTime=2019-03-05 17:33:45.722, cookie=true, name=给部门成员发送消息), Apis(id=29, url=/organizations/{org_id}/join-requests/pendings, createTime=2019-03-05 17:33:45.722, method=get, envId=null, updateTime=2019-03-05 17:33:45.722, cookie=true, name=获取未处理申请数量), Apis(id=30, url=/organizations/2/members/3, createTime=2019-03-05 17:33:45.722, method=put, envId=null, updateTime=2019-03-05 17:33:45.722, cookie=true, name=修改组织成员), Apis(id=40, url=/organizations/{org_id}/members/{member_id}, createTime=2019-03-05 17:33:45.722, method=delete, envId=null, updateTime=2019-03-05 17:33:45.722, cookie=true, name=删除组织成员), Apis(id=41, url=/organizations/{org_id}/join-requests, createTime=2019-03-05 17:33:45.722, method=get, envId=null, updateTime=2019-03-05 17:33:45.722, cookie=true, name=获取审核列表), Apis(id=42, url=/members/{member_id}/punch-infos, createTime=2019-03-05 17:33:45.722, method=get, envId=null, updateTime=2019-03-05 17:33:45.722, cookie=true, name=获取驾驶员用车历史), Apis(id=43, url=/departments/{id}/vehicles?label_ids={label_ids}, createTime=2019-03-05 17:33:45.722, method=get, envId=null, updateTime=2019-03-05 17:33:45.722, cookie=true, name=获取部门下车辆列表), Apis(id=44, url=/departments/{dpt_id}/labels, createTime=2019-03-05 17:33:45.722, method=get, envId=null, updateTime=2019-03-05 17:33:45.722, cookie=true, name=获取标签列表), Apis(id=45, url=/departments/27/labels, createTime=2019-03-05 17:33:45.723, method=post, envId=null, updateTime=2019-03-05 17:33:45.723, cookie=true, name=创建标签), Apis(id=46, url=/labels/233, createTime=2019-03-05 17:33:45.723, method=put, envId=null, updateTime=2019-03-05 17:33:45.723, cookie=true, name=修改单个标签), Apis(id=47, url=/labels/{label_id}, createTime=2019-03-05 17:33:45.723, method=delete, envId=null, updateTime=2019-03-05 17:33:45.723, cookie=true, name=删除标签), Apis(id=48, url=/vehicles/labels, createTime=2019-03-05 17:33:45.723, method=put, envId=null, updateTime=2019-03-05 17:33:45.723, cookie=true, name=批量车辆标签设置), Apis(id=49, url=/departments/{dpt_id}/fences, createTime=2019-03-05 17:33:45.723, method=get, envId=null, updateTime=2019-03-05 17:33:45.723, cookie=true, name=获取部门围栏列表), Apis(id=50, url=/departments/27/fences, createTime=2019-03-05 17:33:45.723, method=post, envId=null, updateTime=2019-03-05 17:33:45.723, cookie=true, name=创建部门围栏), Apis(id=51, url=/fences/{id}, createTime=2019-03-05 17:33:45.724, method=get, envId=null, updateTime=2019-03-05 17:33:45.724, cookie=true, name=获取围栏详情), Apis(id=52, url=/fences/16, createTime=2019-03-05 17:33:45.724, method=put, envId=null, updateTime=2019-03-05 17:33:45.724, cookie=true, name=修改围栏), Apis(id=53, url=/fences/{fence_id}, createTime=2019-03-05 17:33:45.724, method=delete, envId=null, updateTime=2019-03-05 17:33:45.724, cookie=true, name=删除围栏), Apis(id=57, url=/vehicles/{id}/fences, createTime=2019-03-05 17:33:45.724, method=get, envId=null, updateTime=2019-03-05 17:33:45.724, cookie=true, name=获取车辆关联的围栏), Apis(id=58, url=/vehicles/{id}/fences, createTime=2019-03-05 17:33:45.724, method=put, envId=null, updateTime=2019-03-05 17:33:45.724, cookie=true, name=修改车辆关联围栏), Apis(id=59, url=/departments/{dpt_id}/maintenance-plans, createTime=2019-03-05 17:33:45.724, method=get, envId=null, updateTime=2019-03-05 17:33:45.724, cookie=true, name=获取部门保养列表), Apis(id=60, url=/departments/27/maintenance-plans, createTime=2019-03-05 17:33:45.724, method=post, envId=null, updateTime=2019-03-05 17:33:45.724, cookie=true, name=创建保养计划), Apis(id=61, url=/maintenance-plans/{id}, createTime=2019-03-05 17:33:45.724, method=get, envId=null, updateTime=2019-03-05 17:33:45.724, cookie=true, name=获取保养计划详情), Apis(id=62, url=/maintenance-plans/14, createTime=2019-03-05 17:33:45.724, method=put, envId=null, updateTime=2019-03-05 17:33:45.724, cookie=true, name=修改保养计划), Apis(id=63, url=/maintenance-plans/{id}, createTime=2019-03-05 17:33:45.724, method=delete, envId=null, updateTime=2019-03-05 17:33:45.724, cookie=true, name=删除保养), Apis(id=64, url=/departments/{dept_id}/tasks, createTime=2019-03-05 17:33:45.724, method=get, envId=null, updateTime=2019-03-05 17:33:45.724, cookie=true, name=获取任务列表), Apis(id=65, url=/departments/{dpt_id}/tasks, createTime=2019-03-05 17:33:45.724, method=post, envId=null, updateTime=2019-03-05 17:33:45.724, cookie=true, name=添加任务), Apis(id=66, url=/departments/{dpt_id}/tasks, createTime=2019-03-05 17:33:45.724, method=put, envId=null, updateTime=2019-03-05 17:33:45.724, cookie=true, name=更新任务), Apis(id=67, url=/departments/{dept_id}/tasks/alert-conditions?task_id=a6ffccfb-35bc-4d8f-8de0-9f17da7fd58f, createTime=2019-03-05 17:33:45.725, method=get, envId=null, updateTime=2019-03-05 17:33:45.725, cookie=true, name=获取告警条件列表), Apis(id=68, url=/departments/{dpt_id}/tasks/alert-conditions, createTime=2019-03-05 17:33:45.725, method=post, envId=null, updateTime=2019-03-05 17:33:45.725, cookie=true, name=添加告警条件), Apis(id=69, url=/departments/44/tasks/alert-conditions?task_id=a6ffccfb-35bc-4d8f-8de0-9f17da7fd58f, createTime=2019-03-05 17:33:45.725, method=delete, envId=null, updateTime=2019-03-05 17:33:45.725, cookie=true, name=删除告警条件), Apis(id=70, url=/reports/departments/{dpt_id}/alerts, createTime=2019-03-05 17:33:45.725, method=post, envId=null, updateTime=2019-03-05 17:33:45.725, cookie=true, name=告警报表)], prePage=0, nextPage=0, isFirstPage=true, isLastPage=true, hasPreviousPage=false, hasNextPage=false, navigatePages=8, navigateFirstPage=1, navigateLastPage=1, navigatepageNums=[1]})
[2019-03-05 17:33:45] - [http-nio-0.0.0.0-8080-exec-2] - com.apitest.api.impl.ApiServiceImpl.queryAllApiService(ApiServiceImpl.java:82) - 线程名: http-nio-0.0.0.0-8080-exec-2,线程id: 67,线程状态: RUNNABLE
[2019-03-05 17:33:51] - [http-nio-0.0.0.0-8080-exec-3] - com.apitest.api.impl.ApiServiceImpl.queryAllApiService(ApiServiceImpl.java:81) - 返回结果: ServerResponse(status=1, message=查询接口成功, data=PageInfo{pageNum=2, pageSize=100, size=0, startRow=0, endRow=0, total=49, pages=1, list=Page{count=true, pageNum=2, pageSize=100, startRow=100, endRow=200, total=49, pages=1, reasonable=false, pageSizeZero=false}[], prePage=1, nextPage=0, isFirstPage=false, isLastPage=false, hasPreviousPage=true, hasNextPage=false, navigatePages=8, navigateFirstPage=1, navigateLastPage=1, navigatepageNums=[1]})
[2019-03-05 17:33:51] - [http-nio-0.0.0.0-8080-exec-3] - com.apitest.api.impl.ApiServiceImpl.queryAllApiService(ApiServiceImpl.java:82) - 线程名: http-nio-0.0.0.0-8080-exec-3,线程id: 68,线程状态: RUNNABLE
[2019-03-05 17:33:57] - [http-nio-0.0.0.0-8080-exec-4] - com.apitest.api.impl.ApiServiceImpl.queryAllApiService(ApiServiceImpl.java:81) - 返回结果: ServerResponse(status=1, message=查询接口成功, data=PageInfo{pageNum=0, pageSize=100, size=49, startRow=1, endRow=49, total=49, pages=1, list=Page{count=true, pageNum=0, pageSize=100, startRow=0, endRow=0, total=49, pages=1, reasonable=false, pageSizeZero=false}[Apis(id=1, url=/login, createTime=2019-03-05 17:33:57.215, method=post, envId=null, updateTime=2019-03-05 17:33:57.215, cookie=false, name=登录), Apis(id=3, url=/profile, createTime=2019-03-05 17:33:57.216, method=get, envId=null, updateTime=2019-03-05 17:33:57.216, cookie=true, name=获取用户资料), Apis(id=4, url=/profile, createTime=2019-03-05 17:33:57.216, method=put, envId=null, updateTime=2019-03-05 17:33:57.216, cookie=true, name=修改用户资料), Apis(id=5, url=/notification-methods, createTime=2019-03-05 17:33:57.216, method=get, envId=null, updateTime=2019-03-05 17:33:57.216, cookie=true, name=获取通知方式), Apis(id=6, url=/notification-methods, createTime=2019-03-05 17:33:57.216, method=put, envId=null, updateTime=2019-03-05 17:33:57.216, cookie=true, name=修改通知方式), Apis(id=7, url=/organizations, createTime=2019-03-05 17:33:57.216, method=get, envId=null, updateTime=2019-03-05 17:33:57.216, cookie=true, name=获取组织), Apis(id=8, url=/organizations, createTime=2019-03-05 17:33:57.216, method=post, envId=null, updateTime=2019-03-05 17:33:57.216, cookie=true, name=创建组织), Apis(id=9, url=/organizations/{org_id}/members, createTime=2019-03-05 17:33:57.216, method=get, envId=null, updateTime=2019-03-05 17:33:57.216, cookie=true, name=获取组织下的成员列表), Apis(id=10, url=/organizations/{org_id}/departments, createTime=2019-03-05 17:33:57.217, method=get, envId=null, updateTime=2019-03-05 17:33:57.217, cookie=true, name=获取组织下的部门), Apis(id=11, url=/organizations/{org_id}/departments, createTime=2019-03-05 17:33:57.217, method=post, envId=null, updateTime=2019-03-05 17:33:57.217, cookie=true, name=新建部门), Apis(id=12, url=/alert-rule-patterns, createTime=2019-03-05 17:33:57.217, method=get, envId=null, updateTime=2019-03-05 17:33:57.217, cookie=true, name=获取告警规则的模块), Apis(id=13, url=/departments/{dpt_id}/members, createTime=2019-03-05 17:33:57.217, method=get, envId=null, updateTime=2019-03-05 17:33:57.217, cookie=true, name=获取部门所有成员), Apis(id=14, url=/departments/4/members, createTime=2019-03-05 17:33:57.217, method=post, envId=null, updateTime=2019-03-05 17:33:57.217, cookie=true, name=添加部门成员), Apis(id=15, url=/departments/{dpt_id}/members/{member_id}, createTime=2019-03-05 17:33:57.217, method=get, envId=null, updateTime=2019-03-05 17:33:57.217, cookie=true, name=获取单个部门成员), Apis(id=16, url=/vehicles/{vehicle-id}/cooler, createTime=2019-03-05 17:33:57.217, method=get, envId=null, updateTime=2019-03-05 17:33:57.217, cookie=true, name=获取空调主机信息), Apis(id=17, url=/vehicles/{vehicle-id}/cooler/log, createTime=2019-03-05 17:33:57.217, method=get, envId=null, updateTime=2019-03-05 17:33:57.217, cookie=true, name=获取空调主机信息变更记录), Apis(id=26, url=/departments/27/members/4, createTime=2019-03-05 17:33:57.217, method=put, envId=null, updateTime=2019-03-05 17:33:57.217, cookie=true, name=编辑部门成员), Apis(id=27, url=/departments/{dpt_id}/members/{member_id}, createTime=2019-03-05 17:33:57.217, method=delete, envId=null, updateTime=2019-03-05 17:33:57.217, cookie=true, name=删除部门成员), Apis(id=28, url=/departments/27/members/4/message, createTime=2019-03-05 17:33:57.218, method=post, envId=null, updateTime=2019-03-05 17:33:57.218, cookie=true, name=给部门成员发送消息), Apis(id=29, url=/organizations/{org_id}/join-requests/pendings, createTime=2019-03-05 17:33:57.218, method=get, envId=null, updateTime=2019-03-05 17:33:57.218, cookie=true, name=获取未处理申请数量), Apis(id=30, url=/organizations/2/members/3, createTime=2019-03-05 17:33:57.218, method=put, envId=null, updateTime=2019-03-05 17:33:57.218, cookie=true, name=修改组织成员), Apis(id=40, url=/organizations/{org_id}/members/{member_id}, createTime=2019-03-05 17:33:57.218, method=delete, envId=null, updateTime=2019-03-05 17:33:57.218, cookie=true, name=删除组织成员), Apis(id=41, url=/organizations/{org_id}/join-requests, createTime=2019-03-05 17:33:57.218, method=get, envId=null, updateTime=2019-03-05 17:33:57.218, cookie=true, name=获取审核列表), Apis(id=42, url=/members/{member_id}/punch-infos, createTime=2019-03-05 17:33:57.218, method=get, envId=null, updateTime=2019-03-05 17:33:57.218, cookie=true, name=获取驾驶员用车历史), Apis(id=43, url=/departments/{id}/vehicles?label_ids={label_ids}, createTime=2019-03-05 17:33:57.218, method=get, envId=null, updateTime=2019-03-05 17:33:57.218, cookie=true, name=获取部门下车辆列表), Apis(id=44, url=/departments/{dpt_id}/labels, createTime=2019-03-05 17:33:57.218, method=get, envId=null, updateTime=2019-03-05 17:33:57.218, cookie=true, name=获取标签列表), Apis(id=45, url=/departments/27/labels, createTime=2019-03-05 17:33:57.218, method=post, envId=null, updateTime=2019-03-05 17:33:57.218, cookie=true, name=创建标签), Apis(id=46, url=/labels/233, createTime=2019-03-05 17:33:57.219, method=put, envId=null, updateTime=2019-03-05 17:33:57.219, cookie=true, name=修改单个标签), Apis(id=47, url=/labels/{label_id}, createTime=2019-03-05 17:33:57.219, method=delete, envId=null, updateTime=2019-03-05 17:33:57.219, cookie=true, name=删除标签), Apis(id=48, url=/vehicles/labels, createTime=2019-03-05 17:33:57.219, method=put, envId=null, updateTime=2019-03-05 17:33:57.219, cookie=true, name=批量车辆标签设置), Apis(id=49, url=/departments/{dpt_id}/fences, createTime=2019-03-05 17:33:57.219, method=get, envId=null, updateTime=2019-03-05 17:33:57.219, cookie=true, name=获取部门围栏列表), Apis(id=50, url=/departments/27/fences, createTime=2019-03-05 17:33:57.219, method=post, envId=null, updateTime=2019-03-05 17:33:57.219, cookie=true, name=创建部门围栏), Apis(id=51, url=/fences/{id}, createTime=2019-03-05 17:33:57.219, method=get, envId=null, updateTime=2019-03-05 17:33:57.219, cookie=true, name=获取围栏详情), Apis(id=52, url=/fences/16, createTime=2019-03-05 17:33:57.219, method=put, envId=null, updateTime=2019-03-05 17:33:57.219, cookie=true, name=修改围栏), Apis(id=53, url=/fences/{fence_id}, createTime=2019-03-05 17:33:57.219, method=delete, envId=null, updateTime=2019-03-05 17:33:57.219, cookie=true, name=删除围栏), Apis(id=57, url=/vehicles/{id}/fences, createTime=2019-03-05 17:33:57.219, method=get, envId=null, updateTime=2019-03-05 17:33:57.219, cookie=true, name=获取车辆关联的围栏), Apis(id=58, url=/vehicles/{id}/fences, createTime=2019-03-05 17:33:57.22, method=put, envId=null, updateTime=2019-03-05 17:33:57.22, cookie=true, name=修改车辆关联围栏), Apis(id=59, url=/departments/{dpt_id}/maintenance-plans, createTime=2019-03-05 17:33:57.22, method=get, envId=null, updateTime=2019-03-05 17:33:57.22, cookie=true, name=获取部门保养列表), Apis(id=60, url=/departments/27/maintenance-plans, createTime=2019-03-05 17:33:57.22, method=post, envId=null, updateTime=2019-03-05 17:33:57.22, cookie=true, name=创建保养计划), Apis(id=61, url=/maintenance-plans/{id}, createTime=2019-03-05 17:33:57.22, method=get, envId=null, updateTime=2019-03-05 17:33:57.22, cookie=true, name=获取保养计划详情), Apis(id=62, url=/maintenance-plans/14, createTime=2019-03-05 17:33:57.22, method=put, envId=null, updateTime=2019-03-05 17:33:57.22, cookie=true, name=修改保养计划), Apis(id=63, url=/maintenance-plans/{id}, createTime=2019-03-05 17:33:57.22, method=delete, envId=null, updateTime=2019-03-05 17:33:57.22, cookie=true, name=删除保养), Apis(id=64, url=/departments/{dept_id}/tasks, createTime=2019-03-05 17:33:57.22, method=get, envId=null, updateTime=2019-03-05 17:33:57.22, cookie=true, name=获取任务列表), Apis(id=65, url=/departments/{dpt_id}/tasks, createTime=2019-03-05 17:33:57.22, method=post, envId=null, updateTime=2019-03-05 17:33:57.22, cookie=true, name=添加任务), Apis(id=66, url=/departments/{dpt_id}/tasks, createTime=2019-03-05 17:33:57.22, method=put, envId=null, updateTime=2019-03-05 17:33:57.22, cookie=true, name=更新任务), Apis(id=67, url=/departments/{dept_id}/tasks/alert-conditions?task_id=a6ffccfb-35bc-4d8f-8de0-9f17da7fd58f, createTime=2019-03-05 17:33:57.22, method=get, envId=null, updateTime=2019-03-05 17:33:57.22, cookie=true, name=获取告警条件列表), Apis(id=68, url=/departments/{dpt_id}/tasks/alert-conditions, createTime=2019-03-05 17:33:57.221, method=post, envId=null, updateTime=2019-03-05 17:33:57.221, cookie=true, name=添加告警条件), Apis(id=69, url=/departments/44/tasks/alert-conditions?task_id=a6ffccfb-35bc-4d8f-8de0-9f17da7fd58f, createTime=2019-03-05 17:33:57.221, method=delete, envId=null, updateTime=2019-03-05 17:33:57.221, cookie=true, name=删除告警条件), Apis(id=70, url=/reports/departments/{dpt_id}/alerts, createTime=2019-03-05 17:33:57.221, method=post, envId=null, updateTime=2019-03-05 17:33:57.221, cookie=true, name=告警报表)], prePage=0, nextPage=1, isFirstPage=false, isLastPage=false, hasPreviousPage=false, hasNextPage=true, navigatePages=8, navigateFirstPage=1, navigateLastPage=1, navigatepageNums=[1]})
[2019-03-05 17:33:57] - [http-nio-0.0.0.0-8080-exec-4] - com.apitest.api.impl.ApiServiceImpl.queryAllApiService(ApiServiceImpl.java:82) - 线程名: http-nio-0.0.0.0-8080-exec-4,线程id: 69,线程状态: RUNNABLE
[2019-03-05 17:34:06] - [http-nio-0.0.0.0-8080-exec-5] - com.apitest.api.impl.ApiServiceImpl.queryAllApiService(ApiServiceImpl.java:81) - 返回结果: ServerResponse(status=1, message=查询接口成功, data=PageInfo{pageNum=5, pageSize=10, size=9, startRow=41, endRow=49, total=49, pages=5, list=Page{count=true, pageNum=5, pageSize=10, startRow=40, endRow=50, total=49, pages=5, reasonable=false, pageSizeZero=false}[Apis(id=62, url=/maintenance-plans/14, createTime=2019-03-05 17:34:06.119, method=put, envId=null, updateTime=2019-03-05 17:34:06.119, cookie=true, name=修改保养计划), Apis(id=63, url=/maintenance-plans/{id}, createTime=2019-03-05 17:34:06.119, method=delete, envId=null, updateTime=2019-03-05 17:34:06.119, cookie=true, name=删除保养), Apis(id=64, url=/departments/{dept_id}/tasks, createTime=2019-03-05 17:34:06.119, method=get, envId=null, updateTime=2019-03-05 17:34:06.119, cookie=true, name=获取任务列表), Apis(id=65, url=/departments/{dpt_id}/tasks, createTime=2019-03-05 17:34:06.119, method=post, envId=null, updateTime=2019-03-05 17:34:06.119, cookie=true, name=添加任务), Apis(id=66, url=/departments/{dpt_id}/tasks, createTime=2019-03-05 17:34:06.119, method=put, envId=null, updateTime=2019-03-05 17:34:06.119, cookie=true, name=更新任务), Apis(id=67, url=/departments/{dept_id}/tasks/alert-conditions?task_id=a6ffccfb-35bc-4d8f-8de0-9f17da7fd58f, createTime=2019-03-05 17:34:06.119, method=get, envId=null, updateTime=2019-03-05 17:34:06.119, cookie=true, name=获取告警条件列表), Apis(id=68, url=/departments/{dpt_id}/tasks/alert-conditions, createTime=2019-03-05 17:34:06.119, method=post, envId=null, updateTime=2019-03-05 17:34:06.119, cookie=true, name=添加告警条件), Apis(id=69, url=/departments/44/tasks/alert-conditions?task_id=a6ffccfb-35bc-4d8f-8de0-9f17da7fd58f, createTime=2019-03-05 17:34:06.12, method=delete, envId=null, updateTime=2019-03-05 17:34:06.12, cookie=true, name=删除告警条件), Apis(id=70, url=/reports/departments/{dpt_id}/alerts, createTime=2019-03-05 17:34:06.12, method=post, envId=null, updateTime=2019-03-05 17:34:06.12, cookie=true, name=告警报表)], prePage=4, nextPage=0, isFirstPage=false, isLastPage=true, hasPreviousPage=true, hasNextPage=false, navigatePages=8, navigateFirstPage=1, navigateLastPage=5, navigatepageNums=[1, 2, 3, 4, 5]})
[2019-03-05 17:34:06] - [http-nio-0.0.0.0-8080-exec-5] - com.apitest.api.impl.ApiServiceImpl.queryAllApiService(ApiServiceImpl.java:82) - 线程名: http-nio-0.0.0.0-8080-exec-5,线程id: 70,线程状态: RUNNABLE
[2019-03-05 17:34:09] - [http-nio-0.0.0.0-8080-exec-6] - com.apitest.api.impl.ApiServiceImpl.queryAllApiService(ApiServiceImpl.java:81) - 返回结果: ServerResponse(status=1, message=查询接口成功, data=PageInfo{pageNum=8, pageSize=10, size=0, startRow=0, endRow=0, total=49, pages=5, list=Page{count=true, pageNum=8, pageSize=10, startRow=70, endRow=80, total=49, pages=5, reasonable=false, pageSizeZero=false}[], prePage=7, nextPage=0, isFirstPage=false, isLastPage=false, hasPreviousPage=true, hasNextPage=false, navigatePages=8, navigateFirstPage=1, navigateLastPage=5, navigatepageNums=[1, 2, 3, 4, 5]})
[2019-03-05 17:34:09] - [http-nio-0.0.0.0-8080-exec-6] - com.apitest.api.impl.ApiServiceImpl.queryAllApiService(ApiServiceImpl.java:82) - 线程名: http-nio-0.0.0.0-8080-exec-6,线程id: 71,线程状态: RUNNABLE
[2019-03-05 17:34:23] - [Thread-2] - org.quartz.core.QuartzScheduler.standby(QuartzScheduler.java:585) - Scheduler quartzScheduler_$_NON_CLUSTERED paused.
[2019-03-05 17:34:23] - [Thread-2] - org.springframework.scheduling.quartz.SchedulerFactoryBean.destroy(SchedulerFactoryBean.java:844) - Shutting down Quartz Scheduler
[2019-03-05 17:34:23] - [Thread-2] - org.quartz.core.QuartzScheduler.shutdown(QuartzScheduler.java:666) - Scheduler quartzScheduler_$_NON_CLUSTERED shutting down.
[2019-03-05 17:34:23] - [Thread-2] - org.quartz.core.QuartzScheduler.standby(QuartzScheduler.java:585) - Scheduler quartzScheduler_$_NON_CLUSTERED paused.
[2019-03-05 17:34:23] - [Thread-2] - org.quartz.core.QuartzScheduler.shutdown(QuartzScheduler.java:740) - Scheduler quartzScheduler_$_NON_CLUSTERED shutdown complete.
[2019-03-05 17:34:23] - [Thread-2] - org.springframework.scheduling.concurrent.ExecutorConfigurationSupport.shutdown(ExecutorConfigurationSupport.java:208) - Shutting down ExecutorService 'applicationTaskExecutor'
[2019-03-05 17:34:23] - [Thread-2] - com.zaxxer.hikari.HikariDataSource.close(HikariDataSource.java:350) - HikariPool-1 - Shutdown initiated...
[2019-03-05 17:34:23] - [Thread-2] - com.zaxxer.hikari.HikariDataSource.close(HikariDataSource.java:352) - HikariPool-1 - Shutdown completed.
